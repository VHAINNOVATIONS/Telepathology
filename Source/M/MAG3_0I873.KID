KIDS Distribution saved on Sep 10, 2015@17:55:31
Innovation 873 - Imaging Updates for Telepathology
**KIDS**:MAG*3.0*873^

**INSTALL NAME**
MAG*3.0*873
"BLD",8985,0)
MAG*3.0*873^IMAGING^0^3150910^n
"BLD",8985,1,0)
^^2^2^3150910^
"BLD",8985,1,1,0)
 
"BLD",8985,1,2,0)
IMAGING UPDATES TO SUPPORT TELEPATHOLOGY
"BLD",8985,4,0)
^9.64PA^2005.42^1
"BLD",8985,4,2005.42,0)
2005.42
"BLD",8985,4,2005.42,2,0)
^9.641^2005.422^1
"BLD",8985,4,2005.42,2,2005.422,0)
SLIDES  (sub-file)
"BLD",8985,4,2005.42,2,2005.422,1,0)
^9.6411^^
"BLD",8985,4,2005.42,222)
y^y^p^^^^n^^n
"BLD",8985,4,2005.42,224)

"BLD",8985,4,"APDD",2005.42,2005.422)

"BLD",8985,4,"B",2005.42,2005.42)

"BLD",8985,6.3)
4
"BLD",8985,"ABPKG")
n
"BLD",8985,"INID")
^n
"BLD",8985,"INIT")
RPTXTPL^MAGI873T
"BLD",8985,"KRN",0)
^9.67PA^779.2^20
"BLD",8985,"KRN",.4,0)
.4
"BLD",8985,"KRN",.401,0)
.401
"BLD",8985,"KRN",.402,0)
.402
"BLD",8985,"KRN",.403,0)
.403
"BLD",8985,"KRN",.5,0)
.5
"BLD",8985,"KRN",.84,0)
.84
"BLD",8985,"KRN",3.6,0)
3.6
"BLD",8985,"KRN",3.8,0)
3.8
"BLD",8985,"KRN",9.2,0)
9.2
"BLD",8985,"KRN",9.8,0)
9.8
"BLD",8985,"KRN",9.8,"NM",0)
^9.68A^25^25
"BLD",8985,"KRN",9.8,"NM",1,0)
MAGI873T^^0^B3618094
"BLD",8985,"KRN",9.8,"NM",2,0)
MAGI873U^^0^B5237104
"BLD",8985,"KRN",9.8,"NM",3,0)
MAGI873V^^0^B5337536
"BLD",8985,"KRN",9.8,"NM",4,0)
MAGI873W^^0^B5317918
"BLD",8985,"KRN",9.8,"NM",5,0)
MAG7RS^^0^B63369541
"BLD",8985,"KRN",9.8,"NM",6,0)
MAGDGMRC^^0^B36672071
"BLD",8985,"KRN",9.8,"NM",7,0)
MAGTP001^^0^B124242809
"BLD",8985,"KRN",9.8,"NM",8,0)
MAGTP002^^0^B31357050
"BLD",8985,"KRN",9.8,"NM",9,0)
MAGTP003^^0^B64830122
"BLD",8985,"KRN",9.8,"NM",10,0)
MAGTP005^^0^B42706197
"BLD",8985,"KRN",9.8,"NM",11,0)
MAGTP006^^0^B144540363
"BLD",8985,"KRN",9.8,"NM",12,0)
MAGTP007^^0^B189523481
"BLD",8985,"KRN",9.8,"NM",13,0)
MAGTP008^^0^B55780430
"BLD",8985,"KRN",9.8,"NM",14,0)
MAGTP009^^0^B37447235
"BLD",8985,"KRN",9.8,"NM",15,0)
MAGTP011^^0^B172956873
"BLD",8985,"KRN",9.8,"NM",16,0)
MAGTP012^^0^B119315017
"BLD",8985,"KRN",9.8,"NM",17,0)
MAGTP013^^0^B126866344
"BLD",8985,"KRN",9.8,"NM",18,0)
MAGUE006^^0^B5793789
"BLD",8985,"KRN",9.8,"NM",19,0)
MAGUE008^^0^B6168956
"BLD",8985,"KRN",9.8,"NM",20,0)
MAGDHWA^^0^B45705303
"BLD",8985,"KRN",9.8,"NM",21,0)
MAGDHWC^^0^B48238555
"BLD",8985,"KRN",9.8,"NM",22,0)
MAGDHWS^^0^B26963690
"BLD",8985,"KRN",9.8,"NM",23,0)
MAGT7SS1^^0^B13413644
"BLD",8985,"KRN",9.8,"NM",24,0)
MAGT7SS2^^0^B35909249
"BLD",8985,"KRN",9.8,"NM",25,0)
MAGTP015^^0^B8834530
"BLD",8985,"KRN",9.8,"NM","B","MAG7RS",5)

"BLD",8985,"KRN",9.8,"NM","B","MAGDGMRC",6)

"BLD",8985,"KRN",9.8,"NM","B","MAGDHWA",20)

"BLD",8985,"KRN",9.8,"NM","B","MAGDHWC",21)

"BLD",8985,"KRN",9.8,"NM","B","MAGDHWS",22)

"BLD",8985,"KRN",9.8,"NM","B","MAGI873T",1)

"BLD",8985,"KRN",9.8,"NM","B","MAGI873U",2)

"BLD",8985,"KRN",9.8,"NM","B","MAGI873V",3)

"BLD",8985,"KRN",9.8,"NM","B","MAGI873W",4)

"BLD",8985,"KRN",9.8,"NM","B","MAGT7SS1",23)

"BLD",8985,"KRN",9.8,"NM","B","MAGT7SS2",24)

"BLD",8985,"KRN",9.8,"NM","B","MAGTP001",7)

"BLD",8985,"KRN",9.8,"NM","B","MAGTP002",8)

"BLD",8985,"KRN",9.8,"NM","B","MAGTP003",9)

"BLD",8985,"KRN",9.8,"NM","B","MAGTP005",10)

"BLD",8985,"KRN",9.8,"NM","B","MAGTP006",11)

"BLD",8985,"KRN",9.8,"NM","B","MAGTP007",12)

"BLD",8985,"KRN",9.8,"NM","B","MAGTP008",13)

"BLD",8985,"KRN",9.8,"NM","B","MAGTP009",14)

"BLD",8985,"KRN",9.8,"NM","B","MAGTP011",15)

"BLD",8985,"KRN",9.8,"NM","B","MAGTP012",16)

"BLD",8985,"KRN",9.8,"NM","B","MAGTP013",17)

"BLD",8985,"KRN",9.8,"NM","B","MAGTP015",25)

"BLD",8985,"KRN",9.8,"NM","B","MAGUE006",18)

"BLD",8985,"KRN",9.8,"NM","B","MAGUE008",19)

"BLD",8985,"KRN",19,0)
19
"BLD",8985,"KRN",19,"NM",0)
^9.68A^1^1
"BLD",8985,"KRN",19,"NM",1,0)
MAGTP WORKLIST MGR^^0
"BLD",8985,"KRN",19,"NM","B","MAGTP WORKLIST MGR",1)

"BLD",8985,"KRN",19.1,0)
19.1
"BLD",8985,"KRN",19.1,"NM",0)
^9.68A^^
"BLD",8985,"KRN",101,0)
101
"BLD",8985,"KRN",101,"NM",0)
^9.68A^2^2
"BLD",8985,"KRN",101,"NM",1,0)
MAGTP TCP SERVER DPS^^0
"BLD",8985,"KRN",101,"NM",2,0)
MAGTP TCP DPS^^0
"BLD",8985,"KRN",101,"NM","B","MAGTP TCP DPS",2)

"BLD",8985,"KRN",101,"NM","B","MAGTP TCP SERVER DPS",1)

"BLD",8985,"KRN",409.61,0)
409.61
"BLD",8985,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",8985,"KRN",771,0)
771
"BLD",8985,"KRN",771,"NM",0)
^9.68A^2^2
"BLD",8985,"KRN",771,"NM",1,0)
ESLIDEMANAGER^^0
"BLD",8985,"KRN",771,"NM",2,0)
MAGTP-DPS-SERVER^^0
"BLD",8985,"KRN",771,"NM","B","ESLIDEMANAGER",1)

"BLD",8985,"KRN",771,"NM","B","MAGTP-DPS-SERVER",2)

"BLD",8985,"KRN",779.2,0)
779.2
"BLD",8985,"KRN",779.2,"NM",0)
^9.68A^^
"BLD",8985,"KRN",870,0)
870
"BLD",8985,"KRN",870,"NM",0)
^9.68A^1^1
"BLD",8985,"KRN",870,"NM",1,0)
DPS-MAGTP^^0
"BLD",8985,"KRN",870,"NM","B","DPS-MAGTP",1)

"BLD",8985,"KRN",8989.51,0)
8989.51
"BLD",8985,"KRN",8989.52,0)
8989.52
"BLD",8985,"KRN",8994,0)
8994
"BLD",8985,"KRN",8994,"NM",0)
^9.68A^38^38
"BLD",8985,"KRN",8994,"NM",1,0)
MAGTP CHANGE CONS STATUS^^0
"BLD",8985,"KRN",8994,"NM",2,0)
MAGTP CHANGE SLIDES AVAIL^^0
"BLD",8985,"KRN",8994,"NM",3,0)
MAGTP CHECK CONS^^0
"BLD",8985,"KRN",8994,"NM",4,0)
MAGTP COPY CASE^^0
"BLD",8985,"KRN",8994,"NM",5,0)
MAGTP DEL SNOMED CODES^^0
"BLD",8985,"KRN",8994,"NM",6,0)
MAGTP GET CASES^^0
"BLD",8985,"KRN",8994,"NM",7,0)
MAGTP GET CONSULT^^0
"BLD",8985,"KRN",8994,"NM",8,0)
MAGTP GET CPRS REPORT^^0
"BLD",8985,"KRN",8994,"NM",9,0)
MAGTP GET CPT CODE^^0
"BLD",8985,"KRN",8994,"NM",10,0)
MAGTP GET ESIGN^^0
"BLD",8985,"KRN",8994,"NM",11,0)
MAGTP GET LIST^^0
"BLD",8985,"KRN",8994,"NM",12,0)
MAGTP GET LOCK MINS^^0
"BLD",8985,"KRN",8994,"NM",13,0)
MAGTP GET NOTE^^0
"BLD",8985,"KRN",8994,"NM",14,0)
MAGTP GET PATIENT^^0
"BLD",8985,"KRN",8994,"NM",15,0)
MAGTP GET PREFERENCES^^0
"BLD",8985,"KRN",8994,"NM",16,0)
MAGTP GET RETENTION DAYS^^0
"BLD",8985,"KRN",8994,"NM",17,0)
MAGTP GET SITE CONFIG^^0
"BLD",8985,"KRN",8994,"NM",18,0)
MAGTP GET SITES^^0
"BLD",8985,"KRN",8994,"NM",19,0)
MAGTP GET SNOMED CODES^^0
"BLD",8985,"KRN",8994,"NM",20,0)
MAGTP GET SUP REPORTS^^0
"BLD",8985,"KRN",8994,"NM",21,0)
MAGTP GET TEMPLATE DATA^^0
"BLD",8985,"KRN",8994,"NM",22,0)
MAGTP GET TEMPLATE XML^^0
"BLD",8985,"KRN",8994,"NM",23,0)
MAGTP GET USER^^0
"BLD",8985,"KRN",8994,"NM",24,0)
MAGTP PUT CONSULT^^0
"BLD",8985,"KRN",8994,"NM",25,0)
MAGTP PUT CPT CODE^^0
"BLD",8985,"KRN",8994,"NM",26,0)
MAGTP PUT LOCK MINS^^0
"BLD",8985,"KRN",8994,"NM",27,0)
MAGTP PUT METHOD^^0
"BLD",8985,"KRN",8994,"NM",28,0)
MAGTP PUT NOTE^^0
"BLD",8985,"KRN",8994,"NM",29,0)
MAGTP PUT PREFERENCES^^0
"BLD",8985,"KRN",8994,"NM",30,0)
MAGTP PUT REPORT FIELD^^0
"BLD",8985,"KRN",8994,"NM",31,0)
MAGTP PUT SITE CONFIG^^0
"BLD",8985,"KRN",8994,"NM",32,0)
MAGTP PUT SNOMED CODES^^0
"BLD",8985,"KRN",8994,"NM",33,0)
MAGTP PUT SUP REPORT^^0
"BLD",8985,"KRN",8994,"NM",34,0)
MAGTP PUT TEMPLATE XML^^0
"BLD",8985,"KRN",8994,"NM",35,0)
MAGTP SECOND LOCK^^0
"BLD",8985,"KRN",8994,"NM",36,0)
MAGTP SET RETENTION DAYS^^0
"BLD",8985,"KRN",8994,"NM",37,0)
MAGTP PUT PRIORITY^^0
"BLD",8985,"KRN",8994,"NM",38,0)
MAGTP GET SLIDES INFO^^0
"BLD",8985,"KRN",8994,"NM","B","MAGTP CHANGE CONS STATUS",1)

"BLD",8985,"KRN",8994,"NM","B","MAGTP CHANGE SLIDES AVAIL",2)

"BLD",8985,"KRN",8994,"NM","B","MAGTP CHECK CONS",3)

"BLD",8985,"KRN",8994,"NM","B","MAGTP COPY CASE",4)

"BLD",8985,"KRN",8994,"NM","B","MAGTP DEL SNOMED CODES",5)

"BLD",8985,"KRN",8994,"NM","B","MAGTP GET CASES",6)

"BLD",8985,"KRN",8994,"NM","B","MAGTP GET CONSULT",7)

"BLD",8985,"KRN",8994,"NM","B","MAGTP GET CPRS REPORT",8)

"BLD",8985,"KRN",8994,"NM","B","MAGTP GET CPT CODE",9)

"BLD",8985,"KRN",8994,"NM","B","MAGTP GET ESIGN",10)

"BLD",8985,"KRN",8994,"NM","B","MAGTP GET LIST",11)

"BLD",8985,"KRN",8994,"NM","B","MAGTP GET LOCK MINS",12)

"BLD",8985,"KRN",8994,"NM","B","MAGTP GET NOTE",13)

"BLD",8985,"KRN",8994,"NM","B","MAGTP GET PATIENT",14)

"BLD",8985,"KRN",8994,"NM","B","MAGTP GET PREFERENCES",15)

"BLD",8985,"KRN",8994,"NM","B","MAGTP GET RETENTION DAYS",16)

"BLD",8985,"KRN",8994,"NM","B","MAGTP GET SITE CONFIG",17)

"BLD",8985,"KRN",8994,"NM","B","MAGTP GET SITES",18)

"BLD",8985,"KRN",8994,"NM","B","MAGTP GET SLIDES INFO",38)

"BLD",8985,"KRN",8994,"NM","B","MAGTP GET SNOMED CODES",19)

"BLD",8985,"KRN",8994,"NM","B","MAGTP GET SUP REPORTS",20)

"BLD",8985,"KRN",8994,"NM","B","MAGTP GET TEMPLATE DATA",21)

"BLD",8985,"KRN",8994,"NM","B","MAGTP GET TEMPLATE XML",22)

"BLD",8985,"KRN",8994,"NM","B","MAGTP GET USER",23)

"BLD",8985,"KRN",8994,"NM","B","MAGTP PUT CONSULT",24)

"BLD",8985,"KRN",8994,"NM","B","MAGTP PUT CPT CODE",25)

"BLD",8985,"KRN",8994,"NM","B","MAGTP PUT LOCK MINS",26)

"BLD",8985,"KRN",8994,"NM","B","MAGTP PUT METHOD",27)

"BLD",8985,"KRN",8994,"NM","B","MAGTP PUT NOTE",28)

"BLD",8985,"KRN",8994,"NM","B","MAGTP PUT PREFERENCES",29)

"BLD",8985,"KRN",8994,"NM","B","MAGTP PUT PRIORITY",37)

"BLD",8985,"KRN",8994,"NM","B","MAGTP PUT REPORT FIELD",30)

"BLD",8985,"KRN",8994,"NM","B","MAGTP PUT SITE CONFIG",31)

"BLD",8985,"KRN",8994,"NM","B","MAGTP PUT SNOMED CODES",32)

"BLD",8985,"KRN",8994,"NM","B","MAGTP PUT SUP REPORT",33)

"BLD",8985,"KRN",8994,"NM","B","MAGTP PUT TEMPLATE XML",34)

"BLD",8985,"KRN",8994,"NM","B","MAGTP SECOND LOCK",35)

"BLD",8985,"KRN",8994,"NM","B","MAGTP SET RETENTION DAYS",36)

"BLD",8985,"KRN","B",.4,.4)

"BLD",8985,"KRN","B",.401,.401)

"BLD",8985,"KRN","B",.402,.402)

"BLD",8985,"KRN","B",.403,.403)

"BLD",8985,"KRN","B",.5,.5)

"BLD",8985,"KRN","B",.84,.84)

"BLD",8985,"KRN","B",3.6,3.6)

"BLD",8985,"KRN","B",3.8,3.8)

"BLD",8985,"KRN","B",9.2,9.2)

"BLD",8985,"KRN","B",9.8,9.8)

"BLD",8985,"KRN","B",19,19)

"BLD",8985,"KRN","B",19.1,19.1)

"BLD",8985,"KRN","B",101,101)

"BLD",8985,"KRN","B",409.61,409.61)

"BLD",8985,"KRN","B",771,771)

"BLD",8985,"KRN","B",779.2,779.2)

"BLD",8985,"KRN","B",870,870)

"BLD",8985,"KRN","B",8989.51,8989.51)

"BLD",8985,"KRN","B",8989.52,8989.52)

"BLD",8985,"KRN","B",8994,8994)

"BLD",8985,"QUES",0)
^9.62^^
"BLD",8985,"REQB",0)
^9.611^1^1
"BLD",8985,"REQB",1,0)
MAG*3.0*138^2
"BLD",8985,"REQB","B","MAG*3.0*138",1)

"FIA",2005.42)
MAG PATH CASELIST
"FIA",2005.42,0)
^MAG(2005.42,
"FIA",2005.42,0,0)
2005.42
"FIA",2005.42,0,1)
y^y^p^^^^n^^n
"FIA",2005.42,0,10)

"FIA",2005.42,0,11)

"FIA",2005.42,0,"RLRO")

"FIA",2005.42,0,"VR")
3.0^MAG
"FIA",2005.42,2005.42)
1
"FIA",2005.42,2005.42,.031)

"FIA",2005.42,2005.422)
0
"INIT")
RPTXTPL^MAGI873T
"KRN",19,14316,-1)
0^1
"KRN",19,14316,0)
MAGTP WORKLIST MGR^Telepathology Worklist Manager^^B^^^^^^^^
"KRN",19,14316,1,0)
^19.06^1^1^3150619^^^^
"KRN",19,14316,1,1,0)
Telepathology Worklist Manager
"KRN",19,14316,25)

"KRN",19,14316,"RPC",0)
^19.05P^58^58
"KRN",19,14316,"RPC",1,0)
DG SENSITIVE RECORD ACCESS
"KRN",19,14316,"RPC",2,0)
DG SENSITIVE RECORD BULLETIN
"KRN",19,14316,"RPC",3,0)
MAG BROKER SECURITY
"KRN",19,14316,"RPC",4,0)
MAG3 SET TIMEOUT
"KRN",19,14316,"RPC",5,0)
MAGG GET TIMEOUT
"KRN",19,14316,"RPC",6,0)
MAGG INSTALL
"KRN",19,14316,"RPC",7,0)
MAGG PAT INFO
"KRN",19,14316,"RPC",8,0)
MAGG VERIFY ESIG
"KRN",19,14316,"RPC",9,0)
MAGGHS
"KRN",19,14316,"RPC",10,0)
MAGGHSLIST
"KRN",19,14316,"RPC",11,0)
MAGGUPREFGET
"KRN",19,14316,"RPC",12,0)
MAGGUPREFSAVE
"KRN",19,14316,"RPC",13,0)
MAGGUSERKEYS
"KRN",19,14316,"RPC",14,0)
MAGTP GET ACTIVE
"KRN",19,14316,"RPC",15,0)
MAGTP GET CASES
"KRN",19,14316,"RPC",16,0)
MAGTP GET CPRS REPORT
"KRN",19,14316,"RPC",17,0)
MAGTP GET NOTE
"KRN",19,14316,"RPC",18,0)
MAGTP GET PREFERENCES
"KRN",19,14316,"RPC",19,0)
MAGTP GET RETENTION DAYS
"KRN",19,14316,"RPC",20,0)
MAGTP GET SLIDES
"KRN",19,14316,"RPC",21,0)
MAGTP GET USER
"KRN",19,14316,"RPC",22,0)
MAGTP PUT NOTE
"KRN",19,14316,"RPC",23,0)
MAGTP PUT PREFERENCES
"KRN",19,14316,"RPC",24,0)
MAGTP RESERVE CASE
"KRN",19,14316,"RPC",25,0)
MAGTP SET RETENTION DAYS
"KRN",19,14316,"RPC",26,0)
MAGTP USER
"KRN",19,14316,"RPC",27,0)
VAFCTFU CONVERT DFN TO ICN
"KRN",19,14316,"RPC",28,0)
VAFCTFU CONVERT ICN TO DFN
"KRN",19,14316,"RPC",29,0)
XWB CREATE CONTEXT
"KRN",19,14316,"RPC",30,0)
MAGTP GET TEMPLATE DATA
"KRN",19,14316,"RPC",31,0)
MAGTP PUT SUP REPORT
"KRN",19,14316,"RPC",32,0)
MAGTP GET PATIENT
"KRN",19,14316,"RPC",33,0)
MAGTP GET LOCK MINS
"KRN",19,14316,"RPC",34,0)
MAGTP GET TEMPLATE XML
"KRN",19,14316,"RPC",35,0)
MAGTP PUT TEMPLATE XML
"KRN",19,14316,"RPC",36,0)
MAGTP GET CONSULT
"KRN",19,14316,"RPC",37,0)
MAGTP PUT CONSULT
"KRN",19,14316,"RPC",38,0)
MAGTP CHANGE SLIDES AVAIL
"KRN",19,14316,"RPC",39,0)
MAGTP PUT SITE CONFIG
"KRN",19,14316,"RPC",40,0)
MAGTP GET SITE CONFIG
"KRN",19,14316,"RPC",41,0)
MAGTP GET SITES
"KRN",19,14316,"RPC",42,0)
MAGTP CHANGE CONS STATUS
"KRN",19,14316,"RPC",43,0)
MAGTP SECOND LOCK
"KRN",19,14316,"RPC",44,0)
MAGTP PUT METHOD
"KRN",19,14316,"RPC",45,0)
MAGTP GET ESIGN
"KRN",19,14316,"RPC",46,0)
MAGTP PUT CPT CODE
"KRN",19,14316,"RPC",47,0)
MAGTP GET LIST
"KRN",19,14316,"RPC",48,0)
MAGTP PUT SNOMED CODES
"KRN",19,14316,"RPC",49,0)
MAGTP GET SNOMED CODES
"KRN",19,14316,"RPC",50,0)
MAGTP COPY CASE
"KRN",19,14316,"RPC",51,0)
MAGTP GET CPT CODE
"KRN",19,14316,"RPC",52,0)
MAGTP CHECK CONS
"KRN",19,14316,"RPC",53,0)
MAGTP DEL SNOMED CODES
"KRN",19,14316,"RPC",54,0)
MAGTP PUT LOCK MINS
"KRN",19,14316,"RPC",55,0)
MAGTP PUT REPORT FIELD
"KRN",19,14316,"RPC",56,0)
MAGTP PUT PRIORITY
"KRN",19,14316,"RPC",57,0)
MAGTP GET SUP REPORTS
"KRN",19,14316,"RPC",58,0)
MAGTP GET SLIDES INFO
"KRN",19,14316,"U")
TELEPATHOLOGY WORKLIST MANAGER
"KRN",101,6086,-1)
0^1
"KRN",101,6086,0)
MAGTP TCP SERVER DPS^Digital Pathology System inbound messages to VistA^^E^^^^^^^^IMAGING
"KRN",101,6086,1,0)
^101.06^2^2^3150903^^^^
"KRN",101,6086,1,1,0)
Event Driver protocol for sending messages to VistA from a
"KRN",101,6086,1,2,0)
Digital Pathology System.
"KRN",101,6086,99)
63685,49635
"KRN",101,6086,770)
ESLIDEMANAGER^^ORU^R01^^^^^^2.3^
"KRN",101,6086,772)
Q
"KRN",101,6086,775,0)
^101.0775PA^2^1
"KRN",101,6086,775,2,0)
6087
"KRN",101,6086,775,2,"^")
MAGTP TCP DPS
"KRN",101,6087,-1)
0^2
"KRN",101,6087,0)
MAGTP TCP DPS^Subscriber protocol for sending DPS messages to VistA^^S^^^^^^^^IMAGING
"KRN",101,6087,1,0)
^101.06^1^1^3150513^^^^
"KRN",101,6087,1,1,0)
Subscriber protocol for sending DPS Order Update messages to VistA
"KRN",101,6087,15)
Q
"KRN",101,6087,20)
Q
"KRN",101,6087,99)
63685,49635
"KRN",101,6087,770)
^MAGTP-DPS-SERVER^^R01^^^PSCRIBE-RA^^^2.3^ACK
"KRN",101,6087,771)
D OUPDATE^MAGTP001
"KRN",101,6087,773)
0^0^0^1
"KRN",771,237,-1)
0^2
"KRN",771,237,0)
MAGTP-DPS-SERVER^a^^^^^USA
"KRN",771,237,"EC")
^~\&
"KRN",771,237,"FS")
|
"KRN",771,238,-1)
0^1
"KRN",771,238,0)
ESLIDEMANAGER^a^^^^^USA
"KRN",771,238,"EC")
^~\&
"KRN",771,238,"FS")
|
"KRN",870,144,-1)
0^1
"KRN",870,144,0)
DPS-MAGTP^^TCP^^^^^^^^^^^^^^^^^^10
"KRN",870,144,400)
^40000^S^Y^^^^^
"KRN",8994,3402,-1)
0^6
"KRN",8994,3402,0)
MAGTP GET CASES^GETCAS^MAGTP013^2^P^0
"KRN",8994,3402,1,0)
^8994.01^1^1^3120724^
"KRN",8994,3402,1,1,0)
Get a list of selected unreleased or released reports
"KRN",8994,3402,2,0)
^8994.02A^1^1
"KRN",8994,3402,2,1,0)
ENT^2^15^1^1
"KRN",8994,3402,2,1,1,0)
^^2^2^3120724^
"KRN",8994,3402,2,1,1,1,0)
Input array
"KRN",8994,3402,2,1,1,2,0)
All Lines: ENT(n)=LRAC n
"KRN",8994,3402,2,"B","ENT",1)

"KRN",8994,3402,2,"PARAMSEQ",1,1)

"KRN",8994,3402,3,0)
^8994.03^2^2^3120822^^
"KRN",8994,3402,3,1,0)
Line 0: 1^Number of Lines (Success) or 0^0^Error message (Failure)
"KRN",8994,3402,3,2,0)
Line n: Case #^Reserved Flag^Reserved By^Patient Name^Patient ID^Priority^Slide Available^Specimen Taken Date/Time^Status^Site^AP Section^Year^Accession Number^ICN^Specimen Count^Method^Short ID^Note? (Yes/No)
"KRN",8994,3403,-1)
0^8
"KRN",8994,3403,0)
MAGTP GET CPRS REPORT^GETREP^MAGTP007^2^P^0
"KRN",8994,3403,1,0)
^8994.01^2^2^3150208^^^^
"KRN",8994,3403,1,1,0)
Get lab info for a case (ex.: SP 12 2). The layout is similar to the one in CPRS.
"KRN",8994,3403,1,2,0)
The original code has been used by RPC call ORWRP REPORT TEXT.
"KRN",8994,3403,2,0)
^8994.02A^3^3
"KRN",8994,3403,2,1,0)
LRSS^1^2^1^1
"KRN",8994,3403,2,1,1,0)
^^1^1^3120420^
"KRN",8994,3403,2,1,1,1,0)
AP Section
"KRN",8994,3403,2,2,0)
YEAR^1^4^1^2
"KRN",8994,3403,2,2,1,0)
^^1^1^3120420^
"KRN",8994,3403,2,2,1,1,0)
Year
"KRN",8994,3403,2,3,0)
LRAN^1^5^1^3
"KRN",8994,3403,2,3,1,0)
^8994.021^1^1^3120424^^^^
"KRN",8994,3403,2,3,1,1,0)
Accession Number
"KRN",8994,3403,2,"B","LRAN",3)

"KRN",8994,3403,2,"B","LRSS",1)

"KRN",8994,3403,2,"B","YEAR",2)

"KRN",8994,3403,2,"PARAMSEQ",1,1)

"KRN",8994,3403,2,"PARAMSEQ",2,2)

"KRN",8994,3403,2,"PARAMSEQ",3,3)

"KRN",8994,3403,3,0)
^8994.03^2^2^3120608^^^^
"KRN",8994,3403,3,1,0)
Line 0: 1^Number of Lines (Success) or 0^0^Error message (Failure)
"KRN",8994,3403,3,2,0)
Line n: Text from CPRS
"KRN",8994,3404,-1)
0^13
"KRN",8994,3404,0)
MAGTP GET NOTE^GETNOTE^MAGTP014^2^P^0
"KRN",8994,3404,1,0)
^8994.01^1^1^3120822^^
"KRN",8994,3404,1,1,0)
Retrieve the text of a note attached to a specified case.
"KRN",8994,3404,2,0)
^8994.02A^1^1
"KRN",8994,3404,2,1,0)
LRAC^1^14^1^1
"KRN",8994,3404,2,1,1,0)
^8994.021^1^1^3120822^^
"KRN",8994,3404,2,1,1,1,0)
Accession Code for the case
"KRN",8994,3404,2,"B","LRAC",1)

"KRN",8994,3404,2,"PARAMSEQ",1,1)

"KRN",8994,3404,3,0)
^8994.03^2^2^3120822^^
"KRN",8994,3404,3,1,0)
Line 0: 1^Number of Lines (Success) or 0^0^Error Message (Failure)
"KRN",8994,3404,3,2,0)
Line n: Note Line of Text
"KRN",8994,3405,-1)
0^15
"KRN",8994,3405,0)
MAGTP GET PREFERENCES^GETUPREF^MAGTP011^2^P^0
"KRN",8994,3405,1,0)
^8994.01^1^1^3120718^^^^
"KRN",8994,3405,1,1,0)
Get the user's setting/configuration preferences in XML format from the configuration file (#2006.13)
"KRN",8994,3405,2,0)
^8994.02A^1^1
"KRN",8994,3405,2,1,0)
ENT^1^30^0^1
"KRN",8994,3405,2,1,1,0)
^8994.021^4^4^3120718^^^^
"KRN",8994,3405,2,1,1,1,0)
DUZ^LABEL
"KRN",8994,3405,2,1,1,2,0)
DUZ of user whose preferences are to be retrieved
"KRN",8994,3405,2,1,1,3,0)
LABEL of preference section
"KRN",8994,3405,2,1,1,4,0)
If DUZ is null, default to current DUZ
"KRN",8994,3405,2,"B","ENT",1)

"KRN",8994,3405,2,"PARAMSEQ",1,1)

"KRN",8994,3405,3,0)
^8994.03^2^2^3120718^^^^
"KRN",8994,3405,3,1,0)
Line 0: 1^Number of Lines^DUZ: LABEL (Success) or 0^0^Error message (Failure)
"KRN",8994,3405,3,2,0)
Line n: XML Line of Text
"KRN",8994,3406,-1)
0^16
"KRN",8994,3406,0)
MAGTP GET RETENTION DAYS^GETRTDAY^MAGTP014^2^P^0
"KRN",8994,3406,1,0)
^8994.01^1^1^3150208^^
"KRN",8994,3406,1,1,0)
Get the retention days of TELEPATHOLOGY unread worklsit for a site.
"KRN",8994,3406,2,0)
^8994.02A^1^1
"KRN",8994,3406,2,1,0)
SITE^1^30^1^1
"KRN",8994,3406,2,1,1,0)
^8994.021^1^1^3150208^^
"KRN",8994,3406,2,1,1,1,0)
SITE NUMBER
"KRN",8994,3406,2,"B","SITE",1)

"KRN",8994,3406,2,"PARAMSEQ",1,1)

"KRN",8994,3406,3,0)
^8994.03^2^2^3150208^^
"KRN",8994,3406,3,1,0)
Line 0: 1^Number of lines
"KRN",8994,3406,3,2,0)
Line n: Days
"KRN",8994,3408,-1)
0^23
"KRN",8994,3408,0)
MAGTP GET USER^USERINF^MAGTP008^2^P^0
"KRN",8994,3408,1,0)
^8994.01^1^1^3130211^^^^
"KRN",8994,3408,1,1,0)
Initialize session (Version Check, Display Check, collect User Info).
"KRN",8994,3408,2,0)
^8994.02A^1^1
"KRN",8994,3408,2,1,0)
DATA^1^100^1^1
"KRN",8994,3408,2,1,1,0)
^8994.021^7^7^3130211^^^^
"KRN",8994,3408,2,1,1,1,0)
Information about the client and its workstation.
"KRN",8994,3408,2,1,1,2,0)
^01: MAMMORES -- Screen resolution of main viewer display:
"KRN",8994,3408,2,1,1,3,0)
format is X_"x"_Y_","_ColorType (e.g., 2048x2580,GRAY)
"KRN",8994,3408,2,1,1,4,0)
where X,Y are resolutions & ColorType={GRAY, COLOR}.
"KRN",8994,3408,2,1,1,5,0)
^02: Client Vs ....... Client software version for checking.
"KRN",8994,3408,2,1,1,6,0)
^03: Client O/S Vs ... Client OS version for logging.
"KRN",8994,3408,2,1,1,7,0)
^04: ClientBuildDayTime ..... for logging.
"KRN",8994,3408,2,"B","DATA",1)

"KRN",8994,3408,2,"PARAMSEQ",1,1)

"KRN",8994,3408,3,0)
^8994.03^19^19^3130211^^^^
"KRN",8994,3408,3,1,0)
^(0)
"KRN",8994,3408,3,2,0)
    |01
"KRN",8994,3408,3,3,0)
       ^01: 1/0 -- Success/Fail flag for version check.
"KRN",8994,3408,3,4,0)
       ^02:
"KRN",8994,3408,3,5,0)
           ~01: code ... 4=fail.
"KRN",8994,3408,3,6,0)
           ~02: Msg .... Message to display if fail.
"KRN",8994,3408,3,7,0)
     |02
"KRN",8994,3408,3,8,0)
        ^01: DUZ
"KRN",8994,3408,3,9,0)
        ^02: NAME
"KRN",8994,3408,3,10,0)
        ^03: INITIALS
"KRN",8994,3408,3,11,0)
        ^04: SSN
"KRN",8994,3408,3,12,0)
        ^05: UserLocalStationNumber
"KRN",8994,3408,3,13,0)
        ^06: LocalPrimaryDivision
"KRN",8994,3408,3,14,0)
        ^07: PrimarySiteStationNumber
"KRN",8994,3408,3,15,0)
        ^08: SiteServiceURL
"KRN",8994,3408,3,16,0)
        ^09: SiteCode
"KRN",8994,3408,3,17,0)
         ^10: SiteName
"KRN",8994,3408,3,18,0)
 
"KRN",8994,3408,3,19,0)
^(1:N)   Security Keys
"KRN",8994,3409,-1)
0^28
"KRN",8994,3409,0)
MAGTP PUT NOTE^PUTNOTE^MAGTP014^2^P^0
"KRN",8994,3409,1,0)
^8994.01^1^1^3120822^
"KRN",8994,3409,1,1,0)
Set the text of a note attached to a specified case.
"KRN",8994,3409,2,0)
^8994.02A^2^2
"KRN",8994,3409,2,1,0)
ENT^2^^1^1
"KRN",8994,3409,2,1,1,0)
^8994.021^1^1^3120822^^
"KRN",8994,3409,2,1,1,1,0)
Input Array: Note text on each line
"KRN",8994,3409,2,2,0)
LRAC^1^14^1^2
"KRN",8994,3409,2,2,1,0)
^^1^1^3120822^
"KRN",8994,3409,2,2,1,1,0)
Accession Code for the case
"KRN",8994,3409,2,"B","ENT",1)

"KRN",8994,3409,2,"B","LRAC",2)

"KRN",8994,3409,2,"PARAMSEQ",1,1)

"KRN",8994,3409,2,"PARAMSEQ",2,2)

"KRN",8994,3409,3,0)
^^1^1^3120822^
"KRN",8994,3409,3,1,0)
Line 0: 1^0^<LRAC> Note Updated (Success) or 0^0^Error Message (Failure)
"KRN",8994,3410,-1)
0^29
"KRN",8994,3410,0)
MAGTP PUT PREFERENCES^PUTUPREF^MAGTP011^2^P^0
"KRN",8994,3410,1,0)
^8994.01^1^1^3120712^^^
"KRN",8994,3410,1,1,0)
Set the user's setting/configuration preferences in XML format in the configuration file (#2006.13)
"KRN",8994,3410,2,0)
^8994.02A^1^1
"KRN",8994,3410,2,1,0)
ENT^2^^1^1
"KRN",8994,3410,2,1,1,0)
^8994.021^4^4^3120712^^^
"KRN",8994,3410,2,1,1,1,0)
Input array:
"KRN",8994,3410,2,1,1,2,0)
First Line:      DUZ^LABEL
"KRN",8994,3410,2,1,1,3,0)
Following Lines: One XML line of text
"KRN",8994,3410,2,1,1,4,0)
If DUZ is null, default to current DUZ
"KRN",8994,3410,2,"B","ENT",1)

"KRN",8994,3410,2,"PARAMSEQ",1,1)

"KRN",8994,3410,3,0)
^8994.03^1^1^3120712^^^
"KRN",8994,3410,3,1,0)
Line 0: 1^0^DUZ: LABEL Preferences Updated (Success) or 0^0^Error message (Failure)
"KRN",8994,3412,-1)
0^36
"KRN",8994,3412,0)
MAGTP SET RETENTION DAYS^SETRTDAY^MAGTP014^2^P^0
"KRN",8994,3412,1,0)
^8994.01^1^1^3121014^
"KRN",8994,3412,1,1,0)
Set the retention days of Telepathology unread worklist for a site.
"KRN",8994,3412,2,0)
^8994.02A^2^2
"KRN",8994,3412,2,1,0)
DAYS^1^3^1^1
"KRN",8994,3412,2,1,1,0)
^^1^1^3121014^
"KRN",8994,3412,2,1,1,1,0)
The retention days
"KRN",8994,3412,2,2,0)
SITE^1^30^1^2
"KRN",8994,3412,2,2,1,0)
^^1^1^3121014^
"KRN",8994,3412,2,2,1,1,0)
Site Number
"KRN",8994,3412,2,"B","DAYS",1)

"KRN",8994,3412,2,"B","SITE",2)

"KRN",8994,3412,2,"PARAMSEQ",1,1)

"KRN",8994,3412,2,"PARAMSEQ",2,2)

"KRN",8994,3412,3,0)
^^1^1^3121014^
"KRN",8994,3412,3,1,0)
Line 0: '1'  success, or '0'  failed
"KRN",8994,3414,-1)
0^21
"KRN",8994,3414,0)
MAGTP GET TEMPLATE DATA^GETTD^MAGTP001^2^P^0
"KRN",8994,3414,1,0)
^8994.01^1^1^3120724^^^^
"KRN",8994,3414,1,1,0)
Get all the info from a template containing a list of fields
"KRN",8994,3414,2,0)
^8994.02A^4^4
"KRN",8994,3414,2,1,0)
Input Array^2^^1^1
"KRN",8994,3414,2,1,1,0)
^8994.021^2^2^3120724^^
"KRN",8994,3414,2,1,1,1,0)
Input array
"KRN",8994,3414,2,1,1,2,0)
All Lines: ENT(n)=Field n
"KRN",8994,3414,2,2,0)
AP Section^1^2^1^2
"KRN",8994,3414,2,2,1,0)
^^1^1^3120214^
"KRN",8994,3414,2,2,1,1,0)
AP Section
"KRN",8994,3414,2,3,0)
Year^1^4^1^3
"KRN",8994,3414,2,3,1,0)
^^1^1^3120214^
"KRN",8994,3414,2,3,1,1,0)
Year
"KRN",8994,3414,2,4,0)
Access Number^1^5^1^4
"KRN",8994,3414,2,4,1,0)
^8994.021^1^1^3120611^^^^
"KRN",8994,3414,2,4,1,1,0)
Access Number
"KRN",8994,3414,2,"B","AP Section",2)

"KRN",8994,3414,2,"B","Access Number",4)

"KRN",8994,3414,2,"B","Input Array",1)

"KRN",8994,3414,2,"B","Year",3)

"KRN",8994,3414,2,"PARAMSEQ",1,1)

"KRN",8994,3414,2,"PARAMSEQ",2,2)

"KRN",8994,3414,2,"PARAMSEQ",3,3)

"KRN",8994,3414,2,"PARAMSEQ",4,4)

"KRN",8994,3414,3,0)
^8994.03^2^2^3120724^^^^
"KRN",8994,3414,3,1,0)
Line 0: 1^Number of Lines (Success) or 0^0^Error message (Failure)
"KRN",8994,3414,3,2,0)
Line n: Field Number^Label^Value1|Value2|Value3|...
"KRN",8994,3415,-1)
0^33
"KRN",8994,3415,0)
MAGTP PUT SUP REPORT^PUTSR^MAGTP002^2^P^0
"KRN",8994,3415,1,0)
^8994.01^2^2^3120611^^^
"KRN",8994,3415,1,1,0)
Add/Replace info in a Supplementary Report,
"KRN",8994,3415,1,2,0)
release it if so marked in the input array.
"KRN",8994,3415,2,0)
^8994.02A^4^4
"KRN",8994,3415,2,1,0)
Input Array^2^^1^1
"KRN",8994,3415,2,1,1,0)
^8994.021^3^3^3120710^^
"KRN",8994,3415,2,1,1,1,0)
Input array
"KRN",8994,3415,2,1,1,2,0)
First Line: ENT(1)=SR Date^Release?
"KRN",8994,3415,2,1,1,3,0)
Following Lines: ENT(n)=Valuen
"KRN",8994,3415,2,2,0)
AP Section^1^2^1^2
"KRN",8994,3415,2,2,1,0)
^^1^1^3120213^
"KRN",8994,3415,2,2,1,1,0)
AP Section
"KRN",8994,3415,2,3,0)
Year^1^4^1^3
"KRN",8994,3415,2,3,1,0)
^^1^1^3120213^
"KRN",8994,3415,2,3,1,1,0)
Year
"KRN",8994,3415,2,4,0)
Access Number^1^5^1^4
"KRN",8994,3415,2,4,1,0)
^8994.021^1^1^3120611^^^
"KRN",8994,3415,2,4,1,1,0)
Access Number
"KRN",8994,3415,2,"B","AP Section",2)

"KRN",8994,3415,2,"B","Access Number",4)

"KRN",8994,3415,2,"B","Input Array",1)

"KRN",8994,3415,2,"B","Year",3)

"KRN",8994,3415,2,"PARAMSEQ",1,1)

"KRN",8994,3415,2,"PARAMSEQ",2,2)

"KRN",8994,3415,2,"PARAMSEQ",3,3)

"KRN",8994,3415,2,"PARAMSEQ",4,4)

"KRN",8994,3415,3,0)
^8994.03^1^1^3120611^^^^
"KRN",8994,3415,3,1,0)
Line 0: 1^0^Updated message (Success) or 0^0^Error message (Failure)
"KRN",8994,3416,-1)
0^20
"KRN",8994,3416,0)
MAGTP GET SUP REPORTS^GETSR^MAGTP002^2^P^0
"KRN",8994,3416,1,0)
^8994.01^1^1^3120607^^^^
"KRN",8994,3416,1,1,0)
Get all Supplemental Reports for a case
"KRN",8994,3416,2,0)
^8994.02A^3^3
"KRN",8994,3416,2,1,0)
AP Section^1^2^1^1
"KRN",8994,3416,2,1,1,0)
^^1^1^3120213^
"KRN",8994,3416,2,1,1,1,0)
AP Section
"KRN",8994,3416,2,2,0)
Year^1^4^1^2
"KRN",8994,3416,2,2,1,0)
^^1^1^3120213^
"KRN",8994,3416,2,2,1,1,0)
Year
"KRN",8994,3416,2,3,0)
Access Number^1^5^1^3
"KRN",8994,3416,2,3,1,0)
^8994.021^1^1^3120607^^^^
"KRN",8994,3416,2,3,1,1,0)
Access Number
"KRN",8994,3416,2,"B","AP Section",1)

"KRN",8994,3416,2,"B","Access Number",3)

"KRN",8994,3416,2,"B","Year",2)

"KRN",8994,3416,2,"PARAMSEQ",1,1)

"KRN",8994,3416,2,"PARAMSEQ",2,2)

"KRN",8994,3416,2,"PARAMSEQ",3,3)

"KRN",8994,3416,3,0)
^8994.03^2^2^3120607^^^^
"KRN",8994,3416,3,1,0)
Line 0: 1^Number of lines (Success) or 0^0^Error message (Failure)
"KRN",8994,3416,3,2,0)
Line n: SR Date ^Verified?^Name of provider who verified (if Verified = YES)^SR Text [entries separated by pipes (|)]
"KRN",8994,3417,-1)
0^14
"KRN",8994,3417,0)
MAGTP GET PATIENT^GETPAT^MAGTP003^2^P^0
"KRN",8994,3417,1,0)
^8994.01^1^1^3120615^^^^
"KRN",8994,3417,1,1,0)
Get all the LR (LAB DATA) reports for a patient, identified by DFN
"KRN",8994,3417,2,0)
^8994.02A^1^1
"KRN",8994,3417,2,1,0)
DFN^1^7^1^1
"KRN",8994,3417,2,1,1,0)
^8994.021^1^1^3120611^^^^
"KRN",8994,3417,2,1,1,1,0)
Patient DFN
"KRN",8994,3417,2,"B","DFN",1)

"KRN",8994,3417,2,"PARAMSEQ",1,1)

"KRN",8994,3417,3,0)
^8994.03^2^2^3120822^^^^
"KRN",8994,3417,3,1,0)
Line 0: 1^Number of Lines^Patient's Reports or 0^0^Error message (Failure)
"KRN",8994,3417,3,2,0)
Line n: Case #^Reserved Flag^Reserved By^Patient Name^Patient ID^Priority^Slide Available^Specimen Taken Date/Time^Status^Site^AP Section^Year^Accession Number^CN^Specimen Count^Method^Short ID^Note? (Yes/No)
"KRN",8994,3418,-1)
0^12
"KRN",8994,3418,0)
MAGTP GET LOCK MINS^GETLMINS^MAGTP003^2^P^0
"KRN",8994,3418,1,0)
^8994.01^2^2^3121017^^
"KRN",8994,3418,1,1,0)
Get from file (#2006.13) the number of minutes after which a logical lock
"KRN",8994,3418,1,2,0)
expires
"KRN",8994,3418,3,0)
^8994.03^2^2^3121017^^^
"KRN",8994,3418,3,1,0)
Line 0: 1^1 (Success) or 0^Error description (Failure)
"KRN",8994,3418,3,2,0)
Line 1: Number of Minutes
"KRN",8994,3419,-1)
0^22
"KRN",8994,3419,0)
MAGTP GET TEMPLATE XML^GETXT^MAGTP005^2^P^0
"KRN",8994,3419,1,0)
^8994.01^1^1^3120423^^^
"KRN",8994,3419,1,1,0)
Get XML template for the site according to the AP Section
"KRN",8994,3419,2,0)
^8994.02A^1^1
"KRN",8994,3419,2,1,0)
AP Section^1^2^1^1
"KRN",8994,3419,2,1,1,0)
^8994.021^1^1^3120423^^^
"KRN",8994,3419,2,1,1,1,0)
AP Section
"KRN",8994,3419,2,"B","AP Section",1)

"KRN",8994,3419,2,"PARAMSEQ",1,1)

"KRN",8994,3419,3,0)
^8994.03^2^2^3120706^^^^
"KRN",8994,3419,3,1,0)
Line 0: 1^Number of Lines (Success) or 0^0^Error Message (Failure)
"KRN",8994,3419,3,2,0)
Line n: XML Line of Text
"KRN",8994,3420,-1)
0^34
"KRN",8994,3420,0)
MAGTP PUT TEMPLATE XML^PUTXT^MAGTP005^2^P^0
"KRN",8994,3420,1,0)
^8994.01^1^1^3120822^^^^
"KRN",8994,3420,1,1,0)
Set XML template for this site according to the AP Section
"KRN",8994,3420,2,0)
^8994.02A^2^2
"KRN",8994,3420,2,1,0)
Input Array^2^^1^1
"KRN",8994,3420,2,1,1,0)
^8994.021^1^1^3120423^^
"KRN",8994,3420,2,1,1,1,0)
Input Array: XML text on each line
"KRN",8994,3420,2,2,0)
AP Section^1^2^1^2
"KRN",8994,3420,2,2,1,0)
^8994.021^1^1^3120822^^^^
"KRN",8994,3420,2,2,1,1,0)
AP Section
"KRN",8994,3420,2,"B","AP Section",2)

"KRN",8994,3420,2,"B","Input Array",1)

"KRN",8994,3420,2,"PARAMSEQ",1,1)

"KRN",8994,3420,2,"PARAMSEQ",2,2)

"KRN",8994,3420,3,0)
^8994.03^1^1^3120822^^^^
"KRN",8994,3420,3,1,0)
Line 0: 1^0^<LRSS> Template Updated (Success) or 0^0^Error Message (Failure)
"KRN",8994,3421,-1)
0^7
"KRN",8994,3421,0)
MAGTP GET CONSULT^GETINTRP^MAGTP007^2^P^0
"KRN",8994,3421,1,0)
^8994.01^1^1^3120502^^
"KRN",8994,3421,1,1,0)
Get all info about consultations for a case from file (#2005.43)
"KRN",8994,3421,2,0)
^8994.02A^1^1
"KRN",8994,3421,2,1,0)
LRAC^1^14^1^1
"KRN",8994,3421,2,1,1,0)
^8994.021^1^1^3120502^^
"KRN",8994,3421,2,1,1,1,0)
Accession Code for the case
"KRN",8994,3421,2,"B","LRAC",1)

"KRN",8994,3421,2,"PARAMSEQ",1,1)

"KRN",8994,3421,3,0)
^8994.03^2^2^3120622^^^^
"KRN",8994,3421,3,1,0)
Line 0: 1^Number of Lines^IEN^Type^Reservation Date^Interpreting Station^Site Abbreviation^Status (Success) 0^0^Error message (Failure)
"KRN",8994,3421,3,2,0)
Line n: IEN^Type^Reservation Date^Interpreting Station^Site Abbreviation^Status
"KRN",8994,3422,-1)
0^24
"KRN",8994,3422,0)
MAGTP PUT CONSULT^PUTINTRP^MAGTP007^2^P^0
"KRN",8994,3422,1,0)
^8994.01^2^2^3150208^^^^
"KRN",8994,3422,1,1,0)
If an interpretation or consultation is requested, update file (#2005.43) with info
"KRN",8994,3422,1,2,0)
Entered: Accession Number, Type (0:Interpretation, 1:Consultation) and Interpreting Station
"KRN",8994,3422,2,0)
^8994.02A^4^3
"KRN",8994,3422,2,1,0)
LRAC^1^14^1^1
"KRN",8994,3422,2,1,1,0)
^^1^1^3120420^
"KRN",8994,3422,2,1,1,1,0)
Accession Code for the case
"KRN",8994,3422,2,2,0)
TYPE^1^1^1^2
"KRN",8994,3422,2,2,1,0)
^8994.021^1^1^3120510^^^^
"KRN",8994,3422,2,2,1,1,0)
Type of Consultation (0:Interpretation, 1:Consultation)
"KRN",8994,3422,2,4,0)
STATION^1^6^1^3
"KRN",8994,3422,2,4,1,0)
^8994.021^1^1^3120511^^^^
"KRN",8994,3422,2,4,1,1,0)
Interpreting Station
"KRN",8994,3422,2,"B","LRAC",1)

"KRN",8994,3422,2,"B","STATION",4)

"KRN",8994,3422,2,"B","TYPE",2)

"KRN",8994,3422,2,"PARAMSEQ",1,1)

"KRN",8994,3422,2,"PARAMSEQ",2,2)

"KRN",8994,3422,2,"PARAMSEQ",3,4)

"KRN",8994,3422,3,0)
^8994.03^1^1^3120802^^^^
"KRN",8994,3422,3,1,0)
Line 0: 1^0^Interpretation File Updated^Message from CHECKDFN^MAGTP013 (Success) or 0^0^Error description (Failure)
"KRN",8994,3423,-1)
0^2
"KRN",8994,3423,0)
MAGTP CHANGE SLIDES AVAIL^PUTSLIDE^MAGTP007^2^P^0
"KRN",8994,3423,1,0)
^8994.01^1^1^3120521^^^^
"KRN",8994,3423,1,1,0)
Set the "SLIDES AVAILABLE" flag for a case by updating the (#2005.42) file
"KRN",8994,3423,2,0)
^8994.02A^2^2
"KRN",8994,3423,2,1,0)
SLIDES^1^3^1^1
"KRN",8994,3423,2,1,1,0)
^8994.021^2^2^3120521^^^
"KRN",8994,3423,2,1,1,1,0)
Slides Available? 0 ("NO") or 1 ("YES"). Default 0 ("NO")
"KRN",8994,3423,2,1,1,2,0)
Enter numbers (0/1) only.
"KRN",8994,3423,2,2,0)
LRAC^1^14^1^2
"KRN",8994,3423,2,2,1,0)
^8994.021^1^1^3120521^^
"KRN",8994,3423,2,2,1,1,0)
Accession Code for the case (for example SP 12 1)
"KRN",8994,3423,2,"B","LRAC",2)

"KRN",8994,3423,2,"B","SLIDES",1)

"KRN",8994,3423,2,"PARAMSEQ",1,1)

"KRN",8994,3423,2,"PARAMSEQ",2,2)

"KRN",8994,3423,3,0)
^8994.03^1^1^3120522^^^^
"KRN",8994,3423,3,1,0)
Line 0: 1^0^Slides Available? Updated (Success) or 0^0^Error description (Failure)
"KRN",8994,3424,-1)
0^31
"KRN",8994,3424,0)
MAGTP PUT SITE CONFIG^PUTCONF^MAGTP007^2^P^0
"KRN",8994,3424,1,0)
^8994.01^1^1^3150208^^^^
"KRN",8994,3424,1,1,0)
Set configuration info for Reading and Acquisition sites into file (#2006.13).
"KRN",8994,3424,2,0)
^8994.02A^1^1
"KRN",8994,3424,2,1,0)
ENT^1^^1^1
"KRN",8994,3424,2,1,1,0)
^8994.021^6^6^3120824^^^^
"KRN",8994,3424,2,1,1,1,0)
     List of inputs:
"KRN",8994,3424,2,1,1,2,0)
     ^01: 0:Acquisition or 1:Reading
"KRN",8994,3424,2,1,1,3,0)
     ^02: 0:Delete or 1:Add
"KRN",8994,3424,2,1,1,4,0)
     ^03: Station Number
"KRN",8994,3424,2,1,1,5,0)
     ^04: Site Type for Reading List, Primary Site Station Number for Acquisition List
"KRN",8994,3424,2,1,1,6,0)
     ^05: Active? (1:Yes, 0:No)
"KRN",8994,3424,2,"B","ENT",1)

"KRN",8994,3424,2,"PARAMSEQ",1,1)

"KRN",8994,3424,3,0)
^8994.03^1^1^3150208^^^^
"KRN",8994,3424,3,1,0)
Line 0: 1^0^Label Entry - (Added/Updated/Deleted) (Success) or 0^0^Error message (Failure)
"KRN",8994,3425,-1)
0^17
"KRN",8994,3425,0)
MAGTP GET SITE CONFIG^GETCONF^MAGTP007^2^P^0
"KRN",8994,3425,1,0)
^8994.01^1^1^3150208^^^
"KRN",8994,3425,1,1,0)
Get configuration info for Reading and Acquisition sites from the (#2006.13) file.
"KRN",8994,3425,2,0)
^8994.02A^1^1
"KRN",8994,3425,2,1,0)
ENT^1^1^1^1
"KRN",8994,3425,2,1,1,0)
^8994.021^3^3^3120502^^
"KRN",8994,3425,2,1,1,1,0)
Parameter 0 for "ACQUISITION SITE LIST" or 1 for "READING SITE LIST"
"KRN",8994,3425,2,1,1,2,0)
must be passed to choose the type of output.
"KRN",8994,3425,2,1,1,3,0)
The call will list all data available for the choice passed.
"KRN",8994,3425,2,"B","ENT",1)

"KRN",8994,3425,2,"PARAMSEQ",1,1)

"KRN",8994,3425,3,0)
^8994.03^3^3^3120510^^^
"KRN",8994,3425,3,1,0)
Line 0: 1^Number of Lines^Label (Acquisition List or Reading List) (Success) or 0^0^Error message (Failure)
"KRN",8994,3425,3,2,0)
Line n (Acquisition List): Active? (0/1)^Acquisition Site IEN^Acquisition Station Number^Acquisition Site Abbreviation^Acquisition Site Name^Primary Site IEN^Primary Station Number^Primary Site Abbreviation^Primary Site Name
"KRN",8994,3425,3,3,0)
Line n (Reading List): Active? (0/1)^Reading Site IEN^Reading Station Number^Reading Site Abbreviation^Type (0:Primary, 1:Consultation, 2:Both) 
"KRN",8994,3426,-1)
0^18
"KRN",8994,3426,0)
MAGTP GET SITES^GETSITES^MAGTP008^2^P^0
"KRN",8994,3426,1,0)
^8994.01^1^1^3150208^^^^
"KRN",8994,3426,1,1,0)
Get all sites available for a location
"KRN",8994,3426,3,0)
^8994.03^2^2^3150208^^^^
"KRN",8994,3426,3,1,0)
Line 0: 1^Number of Lines^Site Number^Site Name^Station Number^Abbreviation (Success) or 0^0^Error message (Failure)
"KRN",8994,3426,3,2,0)
Line n: Site Number^Site Name^Station Number^Abbreviation
"KRN",8994,3427,-1)
0^1
"KRN",8994,3427,0)
MAGTP CHANGE CONS STATUS^CHNGSTAT^MAGTP008^2^P^0
"KRN",8994,3427,1,0)
^8994.01^2^2^3120523^^^^
"KRN",8994,3427,1,1,0)
Change or delete an interpretation/consultation status (0:PENDING, 1:COMPLETED, 2 or higher:Delete record)
"KRN",8994,3427,1,2,0)
Update field (#2005.43)
"KRN",8994,3427,2,0)
^8994.02A^2^2
"KRN",8994,3427,2,1,0)
CIEN^1^7^1^1
"KRN",8994,3427,2,1,1,0)
^^1^1^3120504^
"KRN",8994,3427,2,1,1,1,0)
Interpretation/Consultation IEN
"KRN",8994,3427,2,2,0)
STATUS^1^1^0^2
"KRN",8994,3427,2,2,1,0)
^8994.021^1^1^3120821^^^^
"KRN",8994,3427,2,2,1,1,0)
Interpretation/Consultation new status (0:PENDING, 1:COMPLETED, 2:REFUSED, 3 or higher: Delete record)
"KRN",8994,3427,2,"B","CIEN",1)

"KRN",8994,3427,2,"B","STATUS",2)

"KRN",8994,3427,2,"PARAMSEQ",1,1)

"KRN",8994,3427,2,"PARAMSEQ",2,2)

"KRN",8994,3427,3,0)
^8994.03^1^1^3120821^^^^
"KRN",8994,3427,3,1,0)
Line 0: 1^0^Status updated for <CIEN> or 1^0^Record <CIEN> deleted (Success) or 0^0^Error description (Failure)
"KRN",8994,3428,-1)
0^35
"KRN",8994,3428,0)
MAGTP SECOND LOCK^SECNLOCK^MAGTP008^2^P^0
"KRN",8994,3428,1,0)
^8994.01^1^1^3120530^^
"KRN",8994,3428,1,1,0)
Set/Unset a second logical lock on a case record
"KRN",8994,3428,2,0)
^8994.02A^4^4
"KRN",8994,3428,2,1,0)
Lock/Unlock Flag^1^1^1^1
"KRN",8994,3428,2,1,1,0)
^^1^1^3120521^
"KRN",8994,3428,2,1,1,1,0)
Lock/Unlock Flag (0:Unlock, 1:Lock)
"KRN",8994,3428,2,2,0)
AP Section^1^2^1^2
"KRN",8994,3428,2,2,1,0)
^^1^1^3120521^
"KRN",8994,3428,2,2,1,1,0)
AP Section
"KRN",8994,3428,2,3,0)
Year^1^4^1^3
"KRN",8994,3428,2,3,1,0)
^8994.021^1^1^3120521^^
"KRN",8994,3428,2,3,1,1,0)
Year
"KRN",8994,3428,2,4,0)
Access Number^1^5^1^4
"KRN",8994,3428,2,4,1,0)
^8994.021^1^1^3120530^^^^
"KRN",8994,3428,2,4,1,1,0)
Access Number
"KRN",8994,3428,2,"B","AP Section",2)

"KRN",8994,3428,2,"B","Access Number",4)

"KRN",8994,3428,2,"B","Lock/Unlock Flag",1)

"KRN",8994,3428,2,"B","Year",3)

"KRN",8994,3428,2,"PARAMSEQ",1,1)

"KRN",8994,3428,2,"PARAMSEQ",2,2)

"KRN",8994,3428,2,"PARAMSEQ",3,3)

"KRN",8994,3428,2,"PARAMSEQ",4,4)

"KRN",8994,3428,3,0)
^8994.03^1^1^3120530^^
"KRN",8994,3428,3,1,0)
Line 0: 1^0^File Locked/File Unlocked (Success) or 0^0^File Locked by <USER> Since <DATE> or 0^0^Error message 
"KRN",8994,3429,-1)
0^27
"KRN",8994,3429,0)
MAGTP PUT METHOD^PUTMETH^MAGTP010^2^P^0
"KRN",8994,3429,1,0)
^8994.01^1^1^3120710^^^^
"KRN",8994,3429,1,1,0)
Set the method used to read the slides for a case in the acquisition site
"KRN",8994,3429,2,0)
^8994.02A^4^4
"KRN",8994,3429,2,1,0)
METHOD^1^1^1^1
"KRN",8994,3429,2,1,1,0)
^^1^1^3120614^
"KRN",8994,3429,2,1,1,1,0)
Method
"KRN",8994,3429,2,2,0)
AP Section^1^2^1^2
"KRN",8994,3429,2,2,1,0)
^^1^1^3120614^
"KRN",8994,3429,2,2,1,1,0)
AP Section
"KRN",8994,3429,2,3,0)
Year^1^4^1^3
"KRN",8994,3429,2,3,1,0)
^^1^1^3120614^
"KRN",8994,3429,2,3,1,1,0)
Year
"KRN",8994,3429,2,4,0)
Access Number^1^5^1^4
"KRN",8994,3429,2,4,1,0)
^8994.021^1^1^3120710^^^^
"KRN",8994,3429,2,4,1,1,0)
Access Number
"KRN",8994,3429,2,"B","AP Section",2)

"KRN",8994,3429,2,"B","Access Number",4)

"KRN",8994,3429,2,"B","METHOD",1)

"KRN",8994,3429,2,"B","Year",3)

"KRN",8994,3429,2,"PARAMSEQ",1,1)

"KRN",8994,3429,2,"PARAMSEQ",2,2)

"KRN",8994,3429,2,"PARAMSEQ",3,3)

"KRN",8994,3429,2,"PARAMSEQ",4,4)

"KRN",8994,3429,3,0)
^8994.03^1^1^3120710^^^^
"KRN",8994,3429,3,1,0)
Line 0: 1^0^Method Updated (Success) or 0^0^Error message (Failure)
"KRN",8994,3430,-1)
0^10
"KRN",8994,3430,0)
MAGTP GET ESIGN^CHKESIGN^MAGTP010^2^P^0
"KRN",8994,3430,1,0)
^8994.01^2^2^3150208^^^^
"KRN",8994,3430,1,1,0)
Check whether the E-Sign switch is on in the local system
"KRN",8994,3430,1,2,0)
and whether the user has the right credentials
"KRN",8994,3430,2,0)
^8994.02A^1^1
"KRN",8994,3430,2,1,0)
AP Section^1^2^1^1
"KRN",8994,3430,2,1,1,0)
^8994.021^1^1^3120705^^^
"KRN",8994,3430,2,1,1,1,0)
AP Section
"KRN",8994,3430,2,"B","AP Section",1)

"KRN",8994,3430,2,"PARAMSEQ",1,1)

"KRN",8994,3430,3,0)
^8994.03^1^1^3150208^^^^
"KRN",8994,3430,3,1,0)
Line 0: 1^0^Electronic Signature authorized (Success) or 2^0^E-Signature not enabled or 0^0^Error message (Failure)
"KRN",8994,3431,-1)
0^25
"KRN",8994,3431,0)
MAGTP PUT CPT CODE^PUTCPT^MAGTP010^2^P^0
"KRN",8994,3431,1,0)
^8994.01^1^1^3120629^
"KRN",8994,3431,1,1,0)
Add CPT codes to PCE CPT workload
"KRN",8994,3431,2,0)
^8994.02A^5^5
"KRN",8994,3431,2,1,0)
LOC^1^^1^1
"KRN",8994,3431,2,1,1,0)
^^1^1^3120629^
"KRN",8994,3431,2,1,1,1,0)
Ordering Location
"KRN",8994,3431,2,2,0)
CPT^1^^1^2
"KRN",8994,3431,2,2,1,0)
^^1^1^3120629^
"KRN",8994,3431,2,2,1,1,0)
List of CPT codes, separated by commas
"KRN",8994,3431,2,3,0)
AP Section^1^2^1^3
"KRN",8994,3431,2,3,1,0)
^^1^1^3120629^
"KRN",8994,3431,2,3,1,1,0)
AP Section
"KRN",8994,3431,2,4,0)
YEAR^1^4^1^4
"KRN",8994,3431,2,4,1,0)
^^1^1^3120629^
"KRN",8994,3431,2,4,1,1,0)
Year
"KRN",8994,3431,2,5,0)
Access Number^1^5^1^5
"KRN",8994,3431,2,5,1,0)
^^1^1^3120629^
"KRN",8994,3431,2,5,1,1,0)
Access Number
"KRN",8994,3431,2,"B","AP Section",3)

"KRN",8994,3431,2,"B","Access Number",5)

"KRN",8994,3431,2,"B","CPT",2)

"KRN",8994,3431,2,"B","LOC",1)

"KRN",8994,3431,2,"B","YEAR",4)

"KRN",8994,3431,2,"PARAMSEQ",1,1)

"KRN",8994,3431,2,"PARAMSEQ",2,2)

"KRN",8994,3431,2,"PARAMSEQ",3,3)

"KRN",8994,3431,2,"PARAMSEQ",4,4)

"KRN",8994,3431,2,"PARAMSEQ",5,5)

"KRN",8994,3431,3,0)
^8994.03^2^2^3120807^^^^
"KRN",8994,3431,3,1,0)
Line 0: 1^Number of Lines^Description if defect found (Success) or 0^0^Error message (Failure)
"KRN",8994,3431,3,2,0)
Line n: 1^CPT code^CPT description (Success) or 0^CPT code^CPT description (Failure) or Visit #: Number
"KRN",8994,3432,-1)
0^11
"KRN",8994,3432,0)
MAGTP GET LIST^GETUPART^MAGTP011^2^P^0
"KRN",8994,3432,1,0)
^8994.01^1^1^3150208^^^^
"KRN",8994,3432,1,1,0)
Retrieve a list of IENs and names from a part of the name
"KRN",8994,3432,2,0)
^8994.02A^3^2
"KRN",8994,3432,2,2,0)
FILE^1^12^1^1
"KRN",8994,3432,2,2,1,0)
^8994.021^1^1^3120711^^
"KRN",8994,3432,2,2,1,1,0)
File Number from which to retrieve the results
"KRN",8994,3432,2,3,0)
PART^1^50^1^2
"KRN",8994,3432,2,3,1,0)
^8994.021^1^1^3120711^^
"KRN",8994,3432,2,3,1,1,0)
Part of a name used to retrieve a list containing it
"KRN",8994,3432,2,"B","FILE",2)

"KRN",8994,3432,2,"B","PART",3)

"KRN",8994,3432,2,"PARAMSEQ",1,2)

"KRN",8994,3432,2,"PARAMSEQ",2,3)

"KRN",8994,3432,3,0)
^8994.03^2^2^3150208^^^^
"KRN",8994,3432,3,1,0)
Line 0: 1^Number of Lines (Success) or 0^0^Error message (Failure)
"KRN",8994,3432,3,2,0)
Line n: IEN of entry^Name of entry
"KRN",8994,3433,-1)
0^32
"KRN",8994,3433,0)
MAGTP PUT SNOMED CODES^PUTSNOMD^MAGTP011^2^P^0
"KRN",8994,3433,1,0)
^8994.01^1^1^3150208^^
"KRN",8994,3433,1,1,0)
Add SNOMED codes to the organ/tissue entries for a case
"KRN",8994,3433,2,0)
^8994.02A^4^4
"KRN",8994,3433,2,1,0)
Input Array^2^^1^1
"KRN",8994,3433,2,1,1,0)
^^3^3^3120703^
"KRN",8994,3433,2,1,1,1,0)
Input array
"KRN",8994,3433,2,1,1,2,0)
Each Line: ENT(n)=Internal Number^Label^Number of lines of data (First line for a Label)
"KRN",8994,3433,2,1,1,3,0)
           ENT(n+i)=Internal Number^Data (Following lines up to n+Number of lines)
"KRN",8994,3433,2,2,0)
AP Section^1^2^1^2
"KRN",8994,3433,2,2,1,0)
^^1^1^3120703^
"KRN",8994,3433,2,2,1,1,0)
AP Section
"KRN",8994,3433,2,3,0)
Year^1^4^1^3
"KRN",8994,3433,2,3,1,0)
^^1^1^3120703^
"KRN",8994,3433,2,3,1,1,0)
Year
"KRN",8994,3433,2,4,0)
Access Number^1^5^1^4
"KRN",8994,3433,2,4,1,0)
^8994.021^1^1^3150208^^
"KRN",8994,3433,2,4,1,1,0)
Access Number
"KRN",8994,3433,2,"B","AP Section",2)

"KRN",8994,3433,2,"B","Access Number",4)

"KRN",8994,3433,2,"B","Input Array",1)

"KRN",8994,3433,2,"B","Year",3)

"KRN",8994,3433,2,"PARAMSEQ",1,1)

"KRN",8994,3433,2,"PARAMSEQ",2,2)

"KRN",8994,3433,2,"PARAMSEQ",3,3)

"KRN",8994,3433,2,"PARAMSEQ",4,4)

"KRN",8994,3433,3,0)
^8994.03^2^2^3150208^^^
"KRN",8994,3433,3,1,0)
Line 0: 1^Number of Lines (Success) or 0^0^Error message (Failure)
"KRN",8994,3433,3,2,0)
Line n: Label Updated^<Added IEN> (Success) or Label Error Message (Failure)
"KRN",8994,3434,-1)
0^19
"KRN",8994,3434,0)
MAGTP GET SNOMED CODES^GETSNOMD^MAGTP011^2^P^0
"KRN",8994,3434,1,0)
^8994.01^1^1^3150208^^^
"KRN",8994,3434,1,1,0)
List SNOMED codes for a case
"KRN",8994,3434,2,0)
^8994.02A^3^3
"KRN",8994,3434,2,1,0)
AP Section^1^2^1^1
"KRN",8994,3434,2,1,1,0)
^^1^1^3120703^
"KRN",8994,3434,2,1,1,1,0)
AP Section
"KRN",8994,3434,2,2,0)
Year^1^4^1^2
"KRN",8994,3434,2,2,1,0)
^^1^1^3120703^
"KRN",8994,3434,2,2,1,1,0)
Year
"KRN",8994,3434,2,3,0)
Access Number^1^5^1^3
"KRN",8994,3434,2,3,1,0)
^8994.021^1^1^3150208^^^
"KRN",8994,3434,2,3,1,1,0)
Access Number
"KRN",8994,3434,2,"B","AP Section",1)

"KRN",8994,3434,2,"B","Access Number",3)

"KRN",8994,3434,2,"B","Year",2)

"KRN",8994,3434,2,"PARAMSEQ",1,1)

"KRN",8994,3434,2,"PARAMSEQ",2,2)

"KRN",8994,3434,2,"PARAMSEQ",3,3)

"KRN",8994,3434,3,0)
^^2^2^3120810^
"KRN",8994,3434,3,1,0)
Line 0: 1^Number of Lines^N|O/T Code^O/T Name^J|Label^SNOMED Code^SNOMED Name^K|Label^Etiology SNOMED Code^Etiology SNOMED Name (Success) or 0^0^Error message (Failure)
"KRN",8994,3434,3,2,0)
Line n: N|O/T Code^O/T Name^J|Label^SNOMED Code^SNOMED Name^K|Label^Etiology SNOMED Code^Etiology SNOMED Name
"KRN",8994,3435,-1)
0^4
"KRN",8994,3435,0)
MAGTP COPY CASE^COPYCASE^MAGTP012^2^P^0
"KRN",8994,3435,1,0)
^8994.01^1^1^3120801^^
"KRN",8994,3435,1,1,0)
Copy the initial data for a specified case into another site, passing the information to the RPC. 
"KRN",8994,3435,2,0)
^8994.02A^1^1
"KRN",8994,3435,2,1,0)
ENT^1^^1^1
"KRN",8994,3435,2,1,1,0)
^8994.021^5^5^3120808^^^^
"KRN",8994,3435,2,1,1,1,0)
    List of inputs:
"KRN",8994,3435,2,1,1,2,0)
    
"KRN",8994,3435,2,1,1,3,0)
    ^01: Patient's DFN
"KRN",8994,3435,2,1,1,4,0)
    ^02: Original Case Number (Ex. SP 12 1)
"KRN",8994,3435,2,1,1,5,0)
    ^03: Original Station Number
"KRN",8994,3435,2,"B","ENT",1)

"KRN",8994,3435,2,"PARAMSEQ",1,1)

"KRN",8994,3435,3,0)
^8994.03^1^1^3120808^^^^
"KRN",8994,3435,3,1,0)
Line 1^0^Case generated^<Accession Code> (Success) or 0^0^Error message (Failure)
"KRN",8994,3436,-1)
0^9
"KRN",8994,3436,0)
MAGTP GET CPT CODE^GETCPT^MAGTP012^2^P^0
"KRN",8994,3436,1,0)
^8994.01^1^1^3120719^^^
"KRN",8994,3436,1,1,0)
Extract CPT codes and a visit list (if existing) for a specified case.
"KRN",8994,3436,2,0)
^8994.02A^3^3
"KRN",8994,3436,2,1,0)
AP Section^1^2^1^1
"KRN",8994,3436,2,1,1,0)
^^1^1^3120719^
"KRN",8994,3436,2,1,1,1,0)
AP Section
"KRN",8994,3436,2,2,0)
Year^1^4^1^2
"KRN",8994,3436,2,2,1,0)
^^1^1^3120719^
"KRN",8994,3436,2,2,1,1,0)
Year
"KRN",8994,3436,2,3,0)
Access Number^1^5^1^3
"KRN",8994,3436,2,3,1,0)
^8994.021^1^1^3120719^^^
"KRN",8994,3436,2,3,1,1,0)
Access Number
"KRN",8994,3436,2,"B","AP Section",1)

"KRN",8994,3436,2,"B","Access Number",3)

"KRN",8994,3436,2,"B","Year",2)

"KRN",8994,3436,2,"PARAMSEQ",1,1)

"KRN",8994,3436,2,"PARAMSEQ",2,2)

"KRN",8994,3436,2,"PARAMSEQ",3,3)

"KRN",8994,3436,3,0)
^8994.03^2^2^3120719^^^
"KRN",8994,3436,3,1,0)
Line 0: 1^Number of lines^CPT Code^CPT Description^Multiply Factor^Date/Time Entered^User^Visit List: <List> (Success) or 0^0^Error message (Failure)
"KRN",8994,3436,3,2,0)
Line n: CPT Code^CPT Description^Multiply Factor^Date/Time Entered^User
"KRN",8994,3437,-1)
0^3
"KRN",8994,3437,0)
MAGTP CHECK CONS^CHEKPEND^MAGTP013^2^P^0
"KRN",8994,3437,1,0)
^8994.01^1^1^3120725^
"KRN",8994,3437,1,1,0)
Check whether there are pending consultations for a site.
"KRN",8994,3437,2,0)
^8994.02A^1^1
"KRN",8994,3437,2,1,0)
STAT^1^6^1^1
"KRN",8994,3437,2,1,1,0)
^^1^1^3120725^
"KRN",8994,3437,2,1,1,1,0)
Interpreting Station
"KRN",8994,3437,2,"B","STAT",1)

"KRN",8994,3437,2,"PARAMSEQ",1,1)

"KRN",8994,3437,3,0)
^^1^1^3120725^
"KRN",8994,3437,3,1,0)
Line 0: 1^0^0 (No pending consultations) or 1^0^1 (Pending consultations) (Success) or 0^0^Error description (Failure)
"KRN",8994,3438,-1)
0^5
"KRN",8994,3438,0)
MAGTP DEL SNOMED CODES^DELSNOMD^MAGTP013^2^P^0
"KRN",8994,3438,1,0)
^8994.01^1^1^3120810^
"KRN",8994,3438,1,1,0)
Delete a selected SNOMED code from a case
"KRN",8994,3438,2,0)
^8994.02A^4^4
"KRN",8994,3438,2,1,0)
ENT^1^20^1^1
"KRN",8994,3438,2,1,1,0)
^^5^5^3120810^
"KRN",8994,3438,2,1,1,1,0)
List of inputs:
"KRN",8994,3438,2,1,1,2,0)
 
"KRN",8994,3438,2,1,1,3,0)
 ^01: Comma separated list of IENs
"KRN",8994,3438,2,1,1,4,0)
      defining the SNOMED code to delete
"KRN",8994,3438,2,1,1,5,0)
 ^02: Subfield label
"KRN",8994,3438,2,2,0)
AP Section^1^2^1^2
"KRN",8994,3438,2,2,1,0)
^8994.021^1^1^3120810^^
"KRN",8994,3438,2,2,1,1,0)
AP Section
"KRN",8994,3438,2,3,0)
Year^1^4^1^3
"KRN",8994,3438,2,3,1,0)
^^1^1^3120810^
"KRN",8994,3438,2,3,1,1,0)
Year
"KRN",8994,3438,2,4,0)
Access Number^1^5^1^4
"KRN",8994,3438,2,4,1,0)
^^1^1^3120810^
"KRN",8994,3438,2,4,1,1,0)
Access Number
"KRN",8994,3438,2,"B","AP Section",2)

"KRN",8994,3438,2,"B","Access Number",4)

"KRN",8994,3438,2,"B","ENT",1)

"KRN",8994,3438,2,"B","Year",3)

"KRN",8994,3438,2,"PARAMSEQ",1,1)

"KRN",8994,3438,2,"PARAMSEQ",2,2)

"KRN",8994,3438,2,"PARAMSEQ",3,3)

"KRN",8994,3438,2,"PARAMSEQ",4,4)

"KRN",8994,3438,3,0)
^^1^1^3120810^
"KRN",8994,3438,3,1,0)
Line 0: 1^0^Record <RECORD> deleted (Success) or 0^0^Error message (Failure)
"KRN",8994,3439,-1)
0^26
"KRN",8994,3439,0)
MAGTP PUT LOCK MINS^PUTLMINS^MAGTP003^2^P^0
"KRN",8994,3439,1,0)
^8994.01^2^2^3121017^^^
"KRN",8994,3439,1,1,0)
Set the number of minutes in file (#2006.13)
"KRN",8994,3439,1,2,0)
after which the logical lock expires
"KRN",8994,3439,2,0)
^8994.02A^^0
"KRN",8994,3439,2,2,0)
MINS^1^4^1^1
"KRN",8994,3439,2,2,1,0)
^8994.021^1^1^3121017^^^
"KRN",8994,3439,2,2,1,1,0)
Number of minutes after which a logical lock expires
"KRN",8994,3439,2,"B","MINS",2)

"KRN",8994,3439,2,"PARAMSEQ",1,2)

"KRN",8994,3439,3,0)
^8994.03^2^2^3121017^^
"KRN",8994,3439,3,1,0)
1^0^Number of Locking Minutes Updated (Success) or 0^0^Error description
"KRN",8994,3439,3,2,0)
(Failure)
"KRN",8994,3440,-1)
0^30
"KRN",8994,3440,0)
MAGTP PUT REPORT FIELD^PUTFIELD^MAGTP001^2^P^0
"KRN",8994,3440,1,0)
^8994.01^1^1^3120523^^^^
"KRN",8994,3440,1,1,0)
Add/Replace entries for one or more fields for a case.
"KRN",8994,3440,2,0)
^8994.02A^4^4
"KRN",8994,3440,2,1,0)
Input Array^2^^1^1
"KRN",8994,3440,2,1,1,0)
^8994.021^3^3^3120523^^
"KRN",8994,3440,2,1,1,1,0)
Input array
"KRN",8994,3440,2,1,1,2,0)
Each Line: ENT(n)=Field^Number of lines of data (First line for a Field)
"KRN",8994,3440,2,1,1,3,0)
           ENT(n+i)=Field^Data (Following lines up to n+Number of lines)
"KRN",8994,3440,2,2,0)
AP Section^1^2^1^2
"KRN",8994,3440,2,2,1,0)
^^1^1^3120213^
"KRN",8994,3440,2,2,1,1,0)
AP Section
"KRN",8994,3440,2,3,0)
Year^1^4^1^3
"KRN",8994,3440,2,3,1,0)
^^1^1^3120213^
"KRN",8994,3440,2,3,1,1,0)
Year
"KRN",8994,3440,2,4,0)
Access Number^1^5^1^4
"KRN",8994,3440,2,4,1,0)
^8994.021^1^1^3120423^^
"KRN",8994,3440,2,4,1,1,0)
Access Number
"KRN",8994,3440,2,"B","AP Section",2)

"KRN",8994,3440,2,"B","Access Number",4)

"KRN",8994,3440,2,"B","Input Array",1)

"KRN",8994,3440,2,"B","Year",3)

"KRN",8994,3440,2,"PARAMSEQ",1,1)

"KRN",8994,3440,2,"PARAMSEQ",2,2)

"KRN",8994,3440,2,"PARAMSEQ",3,3)

"KRN",8994,3440,2,"PARAMSEQ",4,4)

"KRN",8994,3440,3,0)
^8994.03^1^1^3120709^^^^
"KRN",8994,3440,3,1,0)
Line 0: 1^0^Message if alert sent to providers (Success) or 0^0^Error message (Failure)
"KRN",8994,3441,-1)
0^37
"KRN",8994,3441,0)
MAGTP PUT PRIORITY^PUTPRI^MAGTP005^2^P^0
"KRN",8994,3441,1,0)
^8994.01^3^3^3120614^^^^
"KRN",8994,3441,1,1,0)
Set priority for a case by updating
"KRN",8994,3441,1,2,0)
the (#2005.42) file. Enter 0 ("ROUTINE"), 1 ("HIGH") or 2 ("STAT").
"KRN",8994,3441,1,3,0)
Enter numbers (0/1/2) only.
"KRN",8994,3441,2,0)
^8994.02A^4^4
"KRN",8994,3441,2,1,0)
PRI^1^1^1^1
"KRN",8994,3441,2,1,1,0)
^8994.021^1^1^3120523^^^^
"KRN",8994,3441,2,1,1,1,0)
Priority
"KRN",8994,3441,2,2,0)
AP Section^1^2^1^2
"KRN",8994,3441,2,2,1,0)
^^1^1^3120321^
"KRN",8994,3441,2,2,1,1,0)
AP Section
"KRN",8994,3441,2,3,0)
Year^1^4^1^3
"KRN",8994,3441,2,3,1,0)
^^1^1^3120321^
"KRN",8994,3441,2,3,1,1,0)
Year
"KRN",8994,3441,2,4,0)
Access Number^1^5^1^4
"KRN",8994,3441,2,4,1,0)
^8994.021^1^1^3120614^^^^
"KRN",8994,3441,2,4,1,1,0)
Access Number
"KRN",8994,3441,2,"B","AP Section",2)

"KRN",8994,3441,2,"B","Access Number",4)

"KRN",8994,3441,2,"B","PRI",1)

"KRN",8994,3441,2,"B","Year",3)

"KRN",8994,3441,2,"PARAMSEQ",1,1)

"KRN",8994,3441,2,"PARAMSEQ",2,2)

"KRN",8994,3441,2,"PARAMSEQ",3,3)

"KRN",8994,3441,2,"PARAMSEQ",4,4)

"KRN",8994,3441,3,0)
^8994.03^1^1^3120614^^^^
"KRN",8994,3441,3,1,0)
Line 0: 1^0^Priority Updated (Success) or 0^0^Error message (Failure)
"KRN",8994,3442,-1)
0^38
"KRN",8994,3442,0)
MAGTP GET SLIDES INFO^GETSDINF^MAGTP015^2^R^0
"KRN",8994,3442,1,0)
^8994.01^1^1^3150528^
"KRN",8994,3442,1,1,0)
Get Slide scanned image information for a specified case/accession.
"KRN",8994,3442,2,0)
^8994.02A^1^1
"KRN",8994,3442,2,1,0)
ACCESSION Number^1^30^1^1
"KRN",8994,3442,2,1,1,0)
^^1^1^3150528^
"KRN",8994,3442,2,1,1,1,0)
LAB accession number
"KRN",8994,3442,2,"B","ACCESSION Number",1)

"KRN",8994,3442,2,"PARAMSEQ",1,1)

"KRN",8994,3442,3,0)
^^3^3^3150528^
"KRN",8994,3442,3,1,0)
Line 0: 1^Number of lines^Slide Number^Date/Time Scanned^URL^Zoom Factor^Scan Application^Slide Status^View Application^Description^
"KRN",8994,3442,3,2,0)
       or 0^0^Error message (Failure)
"KRN",8994,3442,3,3,0)
Line n: Slide Number^Date/Time Scanned^URL^Zoom Factor^Scan Application^Slide Status^View Application^Description^
"MBREQ")
0
"ORD",13,870)
870;13;1;;HLLL^XPDTA1;;HLLLE^XPDIA1;;;HLLLDEL^XPDIA1(%)
"ORD",13,870,0)
HL LOGICAL LINK
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"PKG",530,-1)
1^1
"PKG",530,0)
IMAGING^MAG
"PKG",530,20,0)
^9.402P^^
"PKG",530,22,0)
^9.49I^1^1
"PKG",530,22,1,0)
3.0^3020319^3020428^20095
"PKG",530,22,1,"PAH",1,0)
873^3150910^20095
"PKG",530,22,1,"PAH",1,1,0)
^^2^2^3150910
"PKG",530,22,1,"PAH",1,1,1,0)
 
"PKG",530,22,1,"PAH",1,1,2,0)
IMAGING UPDATES TO SUPPORT TELEPATHOLOGY
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
25
"RTN","MAG7RS")
0^5^B63369541
"RTN","MAG7RS",1,0)
MAG7RS ;WOIFO/PMK,MLH,SAF - copy radiology message from HLSDATA to ^MAGDHL7 - add segment data ; 08 Apr 2013 4:11 PM
"RTN","MAG7RS",2,0)
 ;;3.0;IMAGING;**11,40,30,123,110**;Mar 19, 2002;Build 4;Jul 02, 2012
"RTN","MAG7RS",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAG7RS",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAG7RS",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAG7RS",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAG7RS",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAG7RS",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAG7RS",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAG7RS",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAG7RS",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAG7RS",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAG7RS",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAG7RS",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAG7RS",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAG7RS",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAG7RS",17,0)
 ;;
"RTN","MAG7RS",18,0)
 ;
"RTN","MAG7RS",19,0)
PIDADD ; SUBROUTINE - called by ADDDTA^MAGDHL7
"RTN","MAG7RS",20,0)
 ; Add PID info for DICOM Gateway.
"RTN","MAG7RS",21,0)
 ; Uses multi-tier array structure MAG7WRK produced by call to MAG7UP.
"RTN","MAG7RS",22,0)
 ;
"RTN","MAG7RS",23,0)
 N DIQUIET ; -------------- FileMan verbose/silent variable
"RTN","MAG7RS",24,0)
 N IXPID ; ---------------- index to PID segment in MAG7WRK array
"RTN","MAG7RS",25,0)
 N VADM,VAPA ; ------------ VADPT return arrays
"RTN","MAG7RS",26,0)
 N STATNUMB ; ------------- STATION NUMBER of primary site
"RTN","MAG7RS",27,0)
 ;
"RTN","MAG7RS",28,0)
 ; ====================================================
"RTN","MAG7RS",29,0)
 ; Get patient DFN and retrieve demo data.
"RTN","MAG7RS",30,0)
 S IXPID=$O(MAG7WRK("B","PID","")) I 'IXPID Q
"RTN","MAG7RS",31,0)
 S DFN=MAG7WRK(IXPID,3,1,1,1) I 'DFN Q
"RTN","MAG7RS",32,0)
 ;
"RTN","MAG7RS",33,0)
 ; ================================================
"RTN","MAG7RS",34,0)
 ; load demo information into HL7 PID segment
"RTN","MAG7RS",35,0)
 S DIQUIET=1
"RTN","MAG7RS",36,0)
 D DEM^VADPT ; demo into VADM()
"RTN","MAG7RS",37,0)
 I '$G(VAERR),VADM(3)]"" D
"RTN","MAG7RS",38,0)
 . S MAG7WRK(IXPID,7,1,1,1)=$P(VADM(3),"^")+17000000 ; DOB
"RTN","MAG7RS",39,0)
 . Q
"RTN","MAG7RS",40,0)
 I $$ISIHS^MAGSPID() D
"RTN","MAG7RS",41,0)
 . S STATNUMB=$P($$SITE^VASITE(),"^",3)
"RTN","MAG7RS",42,0)
 . S MAG7WRK(IXPID,2,1,1,1)=STATNUMB_"-"_DFN
"RTN","MAG7RS",43,0)
 . S MAG7WRK(IXPID,2,1,2,1)=""
"RTN","MAG7RS",44,0)
 . S MAG7WRK(IXPID,2,1,3,1)=""
"RTN","MAG7RS",45,0)
 . S MAG7WRK(IXPID,2,1,4,1)=$S($$ISIHS^MAGSPID():"USIHS",1:"USVHA")
"RTN","MAG7RS",46,0)
 . S MAG7WRK(IXPID,2,1,5,1)="PI"
"RTN","MAG7RS",47,0)
 . ;
"RTN","MAG7RS",48,0)
 . K MAG7WRK(IXPID,3)
"RTN","MAG7RS",49,0)
 . S MAG7WRK(IXPID,3)=VA("PID")_"^^^USIHS^MR"
"RTN","MAG7RS",50,0)
 . S MAG7WRK(IXPID,3,1,1,1)=VA("PID")
"RTN","MAG7RS",51,0)
 . S MAG7WRK(IXPID,3,1,1)=VA("PID")
"RTN","MAG7RS",52,0)
 . S MAG7WRK(IXPID,3,1,1,1)=VA("PID")
"RTN","MAG7RS",53,0)
 . S MAG7WRK(IXPID,3,1,4)="USIHS"
"RTN","MAG7RS",54,0)
 . S MAG7WRK(IXPID,3,1,4,1)="USIHS"
"RTN","MAG7RS",55,0)
 . S MAG7WRK(IXPID,3,1,5)="MR"
"RTN","MAG7RS",56,0)
 . S MAG7WRK(IXPID,3,1,5,1)="MR"
"RTN","MAG7RS",57,0)
 . Q 
"RTN","MAG7RS",58,0)
 ;
"RTN","MAG7RS",59,0)
 ; ================================================
"RTN","MAG7RS",60,0)
 ; load address information into HL7 PID segment
"RTN","MAG7RS",61,0)
 S DIQUIET=1
"RTN","MAG7RS",62,0)
 D ADD^VADPT ; address & phone into VAPA()
"RTN","MAG7RS",63,0)
 I '$G(VAERR) D
"RTN","MAG7RS",64,0)
 . S MAG7WRK(IXPID,10,1,2,1)=$P(VADM(8),"^",2) ; race
"RTN","MAG7RS",65,0)
 . S MAG7WRK(IXPID,11,1,1,1)=VAPA(1) ; street address 1st line
"RTN","MAG7RS",66,0)
 . S MAG7WRK(IXPID,11,1,2,1)=VAPA(2)_$S(VAPA(3)="":"",1:", "_VAPA(3)) ; lns 2-3
"RTN","MAG7RS",67,0)
 . S MAG7WRK(IXPID,11,1,3,1)=VAPA(4) ; city
"RTN","MAG7RS",68,0)
 . S MAG7WRK(IXPID,11,1,4,1)=VAPA(5) ; 2-letter state
"RTN","MAG7RS",69,0)
 . S MAG7WRK(IXPID,11,1,5,1)=VAPA(6) ; ZIP
"RTN","MAG7RS",70,0)
 . ; phone
"RTN","MAG7RS",71,0)
 . S MAG7WRK(IXPID,13,1,1,1)=VAPA(8)
"RTN","MAG7RS",72,0)
 . S MAG7WRK(IXPID,13,1,2,1)="PRN" ; phone
"RTN","MAG7RS",73,0)
 . Q
"RTN","MAG7RS",74,0)
 Q
"RTN","MAG7RS",75,0)
 ;
"RTN","MAG7RS",76,0)
ADDVSDG ; SUBROUTINE - called by ADDDTA^MAGDHL7
"RTN","MAG7RS",77,0)
 ; Add visit and diagnosis info for DICOM Gateway.
"RTN","MAG7RS",78,0)
 ;
"RTN","MAG7RS",79,0)
 N DIQUIET ; ------ FileMan verbose/silent variable
"RTN","MAG7RS",80,0)
 N I,IX,IX1 ; ----- scratch index vars
"RTN","MAG7RS",81,0)
 N IXPID,IXPV1 ; -- indices to PID, PV1 segs in MAG7WRK array
"RTN","MAG7RS",82,0)
 N IXDG1,IXOBR ; -- indices to DG1, OBR segs in MAG7WRK array
"RTN","MAG7RS",83,0)
 N IXVAEL ; ------- index of entries in VAEL()
"RTN","MAG7RS",84,0)
 N VAIN,VAEL ; ---- VADPT return arrays
"RTN","MAG7RS",85,0)
 N MAGPHYNM ; ----- physician name
"RTN","MAG7RS",86,0)
 N ELCODE ; ------- eligibility code
"RTN","MAG7RS",87,0)
 ;
"RTN","MAG7RS",88,0)
 ; ====================================================
"RTN","MAG7RS",89,0)
 ; Get patient DFN and retrieve inpatient data.
"RTN","MAG7RS",90,0)
 S IXPID=$O(MAG7WRK("B","PID","")) I 'IXPID Q
"RTN","MAG7RS",91,0)
 S DFN=MAG7WRK(IXPID,3,1,1,1) I 'DFN Q
"RTN","MAG7RS",92,0)
 S DIQUIET=1
"RTN","MAG7RS",93,0)
 D INP^VADPT Q:VAERR  ; inpatient data in VAIN()
"RTN","MAG7RS",94,0)
 D ELIG^VADPT Q:VAERR  ; eligibility data in VAEL()
"RTN","MAG7RS",95,0)
 D PV1ADD($S($G(VAIN(1))]"":"IN",1:"OUT"))
"RTN","MAG7RS",96,0)
 ; add pregnancy status and modalities if not already part of order
"RTN","MAG7RS",97,0)
 ; message
"RTN","MAG7RS",98,0)
 I $G(MAG7WRK(1,9,1,1,1))="ORM" D
"RTN","MAG7RS",99,0)
 . S IXOBR=$O(MAG7WRK("B","OBR",""))
"RTN","MAG7RS",100,0)
 . I IXOBR D PV1RAD ; pregnancy status & modality info from Radiology
"RTN","MAG7RS",101,0)
 . Q
"RTN","MAG7RS",102,0)
 Q
"RTN","MAG7RS",103,0)
 ;
"RTN","MAG7RS",104,0)
PV1ADD(XPTSTA) ; SUBROUTINE - called by ADDVSDG
"RTN","MAG7RS",105,0)
 ; Get the index of the PV1 segment - create one for the order message
"RTN","MAG7RS",106,0)
 ; if we need to.
"RTN","MAG7RS",107,0)
 ; 
"RTN","MAG7RS",108,0)
 ; input:  XPTSTA        patient status { IN | OUT }
"RTN","MAG7RS",109,0)
 ; 
"RTN","MAG7RS",110,0)
 ; Expects:  VAEL()      eligibility array from ELIG^VADPT
"RTN","MAG7RS",111,0)
 ;           VAIN()      inpatient data array from INP^VADPT
"RTN","MAG7RS",112,0)
 ;
"RTN","MAG7RS",113,0)
 N FSTAT ; -- status flag returned by MAG7UDR
"RTN","MAG7RS",114,0)
 N IXSEG ; -- segment index in message
"RTN","MAG7RS",115,0)
 N IXPRED ; -- index to predecessor segment
"RTN","MAG7RS",116,0)
 N IXSUCC ; -- index to successor segment
"RTN","MAG7RS",117,0)
 ;
"RTN","MAG7RS",118,0)
 S IXPV1=$O(MAG7WRK("B","PV1",""))
"RTN","MAG7RS",119,0)
 I 'IXPV1 Q:MAG7WRK(1,9,1,1,1)'="ORM"  D
"RTN","MAG7RS",120,0)
 . S (IXSEG,IXPRED)=$O(MAG7WRK("B","PID","")) Q:'IXSEG
"RTN","MAG7RS",121,0)
 . F  S IXSEG=$O(MAG7WRK(IXSEG)) Q:"^PD1^NTE^"'[("^"_$G(MAG7WRK(IXSEG,0))_"^")  S IXPRED=IXSEG
"RTN","MAG7RS",122,0)
 . S IXSUCC=$O(MAG7WRK(IXPRED)),IXPV1=$S(IXSUCC:IXPRED+IXSUCC/2,1:IXPRED+1)
"RTN","MAG7RS",123,0)
 . S MAG7WRK(IXPV1,0)="PV1"
"RTN","MAG7RS",124,0)
 . Q
"RTN","MAG7RS",125,0)
 ;
"RTN","MAG7RS",126,0)
 ; pt status
"RTN","MAG7RS",127,0)
 I XPTSTA="OUT" D  ; if op, just status for now
"RTN","MAG7RS",128,0)
 . S MAG7WRK(IXPV1,2,1,1,1)="O"
"RTN","MAG7RS",129,0)
 . Q
"RTN","MAG7RS",130,0)
 E  I XPTSTA'="IN" D  ; not applicable 
"RTN","MAG7RS",131,0)
 . S MAG7WRK(IXPV1,2,1,1,1)="N"
"RTN","MAG7RS",132,0)
 . Q
"RTN","MAG7RS",133,0)
 E  D  ; get visit information too
"RTN","MAG7RS",134,0)
 . S MAG7WRK(IXPV1,2,1,1,1)="I" ; -- class - always inpatient
"RTN","MAG7RS",135,0)
 . ; location
"RTN","MAG7RS",136,0)
 . ;    point of care <--- ward -- needs to be a triplet for Pete's DICOM msg
"RTN","MAG7RS",137,0)
 . S MAG7WRK(IXPV1,3,1,1,1)=$P(VAIN(4),U)
"RTN","MAG7RS",138,0)
 . S MAG7WRK(IXPV1,3,1,1,2)=$P(VAIN(4),U,2)
"RTN","MAG7RS",139,0)
 . S MAG7WRK(IXPV1,3,1,1,3)="VISTA42"
"RTN","MAG7RS",140,0)
 . S MAG7WRK(IXPV1,3,1,2,1)=$P(VAIN(5),"-") ; -------- room
"RTN","MAG7RS",141,0)
 . S MAG7WRK(IXPV1,3,1,3,1)=$P(VAIN(5),"-",2) ; ------ bed
"RTN","MAG7RS",142,0)
 . ; add segment for admitting dx to ADT and ORM messages
"RTN","MAG7RS",143,0)
 . I $G(VAIN(9))]"" D DG1DGADM^MAG7RSD
"RTN","MAG7RS",144,0)
 . Q
"RTN","MAG7RS",145,0)
 ;
"RTN","MAG7RS",146,0)
 ; add PV1 fields and ROL segments for the attending and referring DRs
"RTN","MAG7RS",147,0)
 S FSTAT=$$PRCTADD^MAG7UDR($NA(MAG7WRK(IXPV1,7)),"ATT") ; attending DR
"RTN","MAG7RS",148,0)
 I $G(MAG7WRK(IXPV1,7,1,1,1)),$G(MAG7WRK(1,9,1,1,1))="ADT" D
"RTN","MAG7RS",149,0)
 . D ROLADD^MAG7RSR($NA(MAG7WRK(IXPV1,7,1)),"AT")
"RTN","MAG7RS",150,0)
 . Q
"RTN","MAG7RS",151,0)
 S FSTAT=$$PRCTADD^MAG7UDR($NA(MAG7WRK(IXPV1,8)),"REF") ; referring DR
"RTN","MAG7RS",152,0)
 I $G(MAG7WRK(IXPV1,8,1,1,1)),$G(MAG7WRK(1,9,1,1,1))="ADT" D
"RTN","MAG7RS",153,0)
 . D ROLADD^MAG7RSR($NA(MAG7WRK(IXPV1,8,1)),"RP")
"RTN","MAG7RS",154,0)
 . Q
"RTN","MAG7RS",155,0)
 I $D(VAEL) D  ; add VIP flag if applicable and not yet present
"RTN","MAG7RS",156,0)
 . S VAEL(1,0)=VAEL(1) ; for easy array navigation
"RTN","MAG7RS",157,0)
 . S IXVAEL=""
"RTN","MAG7RS",158,0)
 . F  Q:$D(IXPV1(16))  S IXVAEL=$O(VAEL(1,IXVAEL)) Q:IXVAEL=""  D
"RTN","MAG7RS",159,0)
 . . S ELCODE=$P($G(VAEL(1,IXVAEL)),"^")
"RTN","MAG7RS",160,0)
 . . I "^6^15^"[("^"_ELCODE_"^") S IXPV1(16,1,1,1,1)=ELCODE
"RTN","MAG7RS",161,0)
 . . Q
"RTN","MAG7RS",162,0)
 . Q
"RTN","MAG7RS",163,0)
 Q
"RTN","MAG7RS",164,0)
 ;
"RTN","MAG7RS",165,0)
PV1RAD ; SUBROUTINE - called by ADDVSDG
"RTN","MAG7RS",166,0)
 ; Add "pregnant" to Ambulatory Status if patient is pregnant.
"RTN","MAG7RS",167,0)
 ; Add modalities to Diagnostic Service Section ID.
"RTN","MAG7RS",168,0)
 ; 
"RTN","MAG7RS",169,0)
 ; Expects:  MAG7WRK()     HL7 message array
"RTN","MAG7RS",170,0)
 ;           IXOBR         Index of OBR segment on MAG7WRK()
"RTN","MAG7RS",171,0)
 ;           IXPV1         Index of PV1 segment on MAG7WRK()
"RTN","MAG7RS",172,0)
 ;           
"RTN","MAG7RS",173,0)
 N RADPT2 ; ------- FileMan date of rad order
"RTN","MAG7RS",174,0)
 N RADPT3 ; ------- index of order under date on Rad/NM pt file
"RTN","MAG7RS",175,0)
 N RADPT0 ; ------- data for order on Rad/NM pt file
"RTN","MAG7RS",176,0)
 N RAOIEN ; ------- index of order on Rad/NM order file
"RTN","MAG7RS",177,0)
 N RAO0 ; --------- data for order on Rad/NM order file
"RTN","MAG7RS",178,0)
 N PROCIEN ; ------ ien of procedure on Rad/NM procedure file
"RTN","MAG7RS",179,0)
 N PROCMOD ; ------ ien of modality on Rad/NM procedure file
"RTN","MAG7RS",180,0)
 N MODIEN ; ------- ien of modality on modality defined terms file
"RTN","MAG7RS",181,0)
 N MODTERM ; ------ term for the modality
"RTN","MAG7RS",182,0)
 N PREGSTAT ; ----- pregnancy status on order
"RTN","MAG7RS",183,0)
 N REPIX ; -------- repetition index
"RTN","MAG7RS",184,0)
 N EDTA ; --------- element data
"RTN","MAG7RS",185,0)
 N AAMBMSG ; ------ ambulatory status array (from message data)
"RTN","MAG7RS",186,0)
 N AMODMSG ; ------ modality array (from message data)
"RTN","MAG7RS",187,0)
 ;
"RTN","MAG7RS",188,0)
 ; get data from Rad/NM pt and order files
"RTN","MAG7RS",189,0)
 S RADPT2=$P(MAG7WRK(IXOBR,3,1,1,1),"-")
"RTN","MAG7RS",190,0)
 S RADPT3=$P(MAG7WRK(IXOBR,3,1,1,1),"-",2)
"RTN","MAG7RS",191,0)
 S RADPT0=$G(^RADPT(DFN,"DT",RADPT2,"P",RADPT3,0))
"RTN","MAG7RS",192,0)
 S RAOIEN=$P(RADPT0,"^",11) ; IEN for ^RAO(75.1)
"RTN","MAG7RS",193,0)
 S RAO0="" I RAOIEN S RAO0=$G(^RAO(75.1,RAOIEN,0))
"RTN","MAG7RS",194,0)
 ;
"RTN","MAG7RS",195,0)
 ; add "pregnant" to ambulatory status if needed
"RTN","MAG7RS",196,0)
 ;   get data from message
"RTN","MAG7RS",197,0)
 S REPIX=""
"RTN","MAG7RS",198,0)
 F  S REPIX=$O(MAG7WRK(IXPV1,15,REPIX)) Q:'REPIX  D
"RTN","MAG7RS",199,0)
 . S EDTA=$G(MAG7WRK(IXPV1,15,REPIX,1,1)) I EDTA]"" S AAMBMSG(EDTA)=""
"RTN","MAG7RS",200,0)
 . Q
"RTN","MAG7RS",201,0)
 ;   get data from Radiology and add to message if needed and not present
"RTN","MAG7RS",202,0)
 S PREGSTAT=$P(RAO0,"^",13) I PREGSTAT="" S PREGSTAT="u"
"RTN","MAG7RS",203,0)
 I '$D(AAMBMSG("B6")),PREGSTAT="y" D
"RTN","MAG7RS",204,0)
 . S MAG7WRK(IXPV1,15,$O(MAG7WRK(IXPV1,15," "),-1)+1,1,1)="B6"
"RTN","MAG7RS",205,0)
 . Q
"RTN","MAG7RS",206,0)
 ;
"RTN","MAG7RS",207,0)
 ; add modalities to Diagnostic Service Section ID
"RTN","MAG7RS",208,0)
 ;   get data from message
"RTN","MAG7RS",209,0)
 F  S REPIX=$O(MAG7WRK(IXOBR,24,REPIX)) Q:'REPIX  D
"RTN","MAG7RS",210,0)
 . S EDTA=$G(MAG7WRK(IXOBR,24,REPIX,1,1)) I EDTA]"" S AMODMSG(EDTA)=""
"RTN","MAG7RS",211,0)
 . Q
"RTN","MAG7RS",212,0)
 ;   get data from Radiology and add to message if needed and not present
"RTN","MAG7RS",213,0)
 S PROCIEN=$P(RADPT0,U,2)
"RTN","MAG7RS",214,0)
 I PROCIEN D
"RTN","MAG7RS",215,0)
 . S PROCMOD=0
"RTN","MAG7RS",216,0)
 . F  S PROCMOD=$O(^RAMIS(71,PROCIEN,"MDL",PROCMOD)) Q:'PROCMOD  D
"RTN","MAG7RS",217,0)
 . . S MODIEN=$P($G(^RAMIS(71,PROCIEN,"MDL",PROCMOD,0)),U)
"RTN","MAG7RS",218,0)
 . . I MODIEN,$D(^RAMIS(73.1,MODIEN,0)) D
"RTN","MAG7RS",219,0)
 . . . S MODTERM=$P($G(^RAMIS(73.1,MODIEN,0)),U)
"RTN","MAG7RS",220,0)
 . . . I MODTERM]"",'$D(AMODMSG(MODTERM)) D
"RTN","MAG7RS",221,0)
 . . . . S MAG7WRK(IXOBR,24,$O(MAG7WRK(IXOBR,24," "),-1)+1,1,1)=MODTERM
"RTN","MAG7RS",222,0)
 . . . . Q
"RTN","MAG7RS",223,0)
 . . . Q
"RTN","MAG7RS",224,0)
 . . Q
"RTN","MAG7RS",225,0)
 . Q
"RTN","MAG7RS",226,0)
 Q
"RTN","MAGDGMRC")
0^6^B36672071
"RTN","MAGDGMRC",1,0)
MAGDGMRC ;WOIFO/PMK,EdM,MLH - Read a DICOM image file ; 07 Feb 2013 5:14 PM
"RTN","MAGDGMRC",2,0)
 ;;3.0;IMAGING;**10,51,50,85,118**;Mar 19, 2002;Build 4;Nov 06, 2012
"RTN","MAGDGMRC",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDGMRC",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDGMRC",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDGMRC",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDGMRC",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDGMRC",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDGMRC",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDGMRC",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDGMRC",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDGMRC",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDGMRC",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDGMRC",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDGMRC",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDGMRC",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDGMRC",17,0)
 ;;
"RTN","MAGDGMRC",18,0)
 ; This is the set of GMRC APIs that are use by the VistA Imaging
"RTN","MAGDGMRC",19,0)
 ; DICOM Gateway
"RTN","MAGDGMRC",20,0)
 ;
"RTN","MAGDGMRC",21,0)
ANYREQ(DFN) ; check if any GMRC requests are present for the patient
"RTN","MAGDGMRC",22,0)
 N ADFN ; ---- array of DFNs to look up
"RTN","MAGDGMRC",23,0)
 N WRK ; ----- work array for our results
"RTN","MAGDGMRC",24,0)
 N IX ; ------ results lookup index
"RTN","MAGDGMRC",25,0)
 N FHIT ; ---- flag - any results for the pt?
"RTN","MAGDGMRC",26,0)
 ;
"RTN","MAGDGMRC",27,0)
 ; ask for requests for the patient
"RTN","MAGDGMRC",28,0)
 S WRK=$NA(^TMP("MAG",$J,$T(+0))) K @WRK
"RTN","MAGDGMRC",29,0)
 S ADFN(1)=DFN
"RTN","MAGDGMRC",30,0)
 D FIND^DIC(123,,"@;.02I","QX",.ADFN,,"F",,,WRK,WRK)
"RTN","MAGDGMRC",31,0)
 ;
"RTN","MAGDGMRC",32,0)
 ; check returns to see if any are actually for this patient (see note
"RTN","MAGDGMRC",33,0)
 ; on SEARCH below)
"RTN","MAGDGMRC",34,0)
 S IX=0
"RTN","MAGDGMRC",35,0)
 F  S IX=$O(@WRK@("DILIST","ID",IX)) Q:'IX  D  Q:$G(FHIT)
"RTN","MAGDGMRC",36,0)
 . I $G(@WRK@("DILIST","ID",IX,.02))=DFN S FHIT=1
"RTN","MAGDGMRC",37,0)
 . Q
"RTN","MAGDGMRC",38,0)
 K @WRK
"RTN","MAGDGMRC",39,0)
 Q +$G(FHIT)
"RTN","MAGDGMRC",40,0)
 ;
"RTN","MAGDGMRC",41,0)
TIULAST(GMRCIEN) ; find the ien of the most recent TIU note for this request
"RTN","MAGDGMRC",42,0)
 N TIUIEN
"RTN","MAGDGMRC",43,0)
 N WRK ; root of work global
"RTN","MAGDGMRC",44,0)
 S TIUIEN=0
"RTN","MAGDGMRC",45,0)
 I GMRCIEN D  ; look for the most recent TIU note for this request
"RTN","MAGDGMRC",46,0)
 . ; set up the array to look through
"RTN","MAGDGMRC",47,0)
 . S WRK=$NA(^TMP("MAG",$J,$T(+0))) K @WRK
"RTN","MAGDGMRC",48,0)
 . D LIST^DIC(123.03,","_GMRCIEN_",",".01I",,,,,,,,WRK,WRK)
"RTN","MAGDGMRC",49,0)
 . ; traverse the array
"RTN","MAGDGMRC",50,0)
 . N TIUPTR
"RTN","MAGDGMRC",51,0)
 . S TIUPTR=" " ; setup for reverse $o from space (" ")
"RTN","MAGDGMRC",52,0)
 . F  S TIUPTR=$O(@WRK@("DILIST","ID",TIUPTR),-1) Q:'TIUPTR  D  Q:TIUIEN
"RTN","MAGDGMRC",53,0)
 . . S TIUIEN=$P($G(@WRK@("DILIST","ID",TIUPTR,.01)),"^",1)
"RTN","MAGDGMRC",54,0)
 . . I $P(TIUIEN,";",2)'="TIU(8925," S TIUIEN=0 ; not a TIU document
"RTN","MAGDGMRC",55,0)
 . . Q
"RTN","MAGDGMRC",56,0)
 . Q
"RTN","MAGDGMRC",57,0)
 K @WRK
"RTN","MAGDGMRC",58,0)
 Q +TIUIEN
"RTN","MAGDGMRC",59,0)
 ;
"RTN","MAGDGMRC",60,0)
TIUALL(GMRCIEN,RESULT) ; find all IENs for the TIU notes for this request
"RTN","MAGDGMRC",61,0)
 N MAGIEN,TIUIEN,TIUPTR,TIUXIEN,Y
"RTN","MAGDGMRC",62,0)
 N WRK ; root of work global
"RTN","MAGDGMRC",63,0)
 K RESULT
"RTN","MAGDGMRC",64,0)
 ; set up the array to look through
"RTN","MAGDGMRC",65,0)
 S WRK=$NA(^TMP("MAG",$J,$T(+0))) K @WRK
"RTN","MAGDGMRC",66,0)
 D LIST^DIC(123.03,","_GMRCIEN_",",".01I",,,,,,,,WRK,WRK)
"RTN","MAGDGMRC",67,0)
 ; traverse the array
"RTN","MAGDGMRC",68,0)
 S (RESULT,TIUPTR)=0
"RTN","MAGDGMRC",69,0)
 F  S TIUPTR=$O(@WRK@("DILIST","ID",TIUPTR)) Q:'TIUPTR  D
"RTN","MAGDGMRC",70,0)
 . S TIUIEN=$P($G(@WRK@("DILIST","ID",TIUPTR,.01)),"^",1)
"RTN","MAGDGMRC",71,0)
 . I $P(TIUIEN,";",2)'="TIU(8925," Q  ; not a TIU document
"RTN","MAGDGMRC",72,0)
 . S TIUIEN=+TIUIEN ; strip off variable pointer stuff
"RTN","MAGDGMRC",73,0)
 . S TIUXIEN=""
"RTN","MAGDGMRC",74,0)
 . F  S TIUXIEN=$O(^TIU(8925.91,"B",TIUIEN,TIUXIEN)) Q:'TIUXIEN  D
"RTN","MAGDGMRC",75,0)
 . . S Y=$G(^TIU(8925.91,TIUXIEN,0)) Q:'Y
"RTN","MAGDGMRC",76,0)
 . . S MAGIEN=$P(Y,"^",2)
"RTN","MAGDGMRC",77,0)
 . . S RESULT=RESULT+1
"RTN","MAGDGMRC",78,0)
 . . S RESULT(RESULT)=TIUIEN_"^"_$$GMRCACN^MAGDFCNV(GMRCIEN)_"^"_MAGIEN
"RTN","MAGDGMRC",79,0)
 . . Q
"RTN","MAGDGMRC",80,0)
 . ; new database structure
"RTN","MAGDGMRC",81,0)
 . S TIUXIEN=""
"RTN","MAGDGMRC",82,0)
 . F  S TIUXIEN=$O(^MAG(2005.61,"B",TIUIEN,TIUXIEN)) Q:'TIUXIEN  D
"RTN","MAGDGMRC",83,0)
 . . S Y=$G(^MAG(2005.61,TIUXIEN,0)) Q:$P(Y,"^",3)'="TIU"
"RTN","MAGDGMRC",84,0)
 . . S MAGIEN=""
"RTN","MAGDGMRC",85,0)
 . . F  S MAGIEN=$O(^MAG(2005.62,"C",TIUXIEN,MAGIEN)) Q:'MAGIEN  D
"RTN","MAGDGMRC",86,0)
 . . . S RESULT=RESULT+1
"RTN","MAGDGMRC",87,0)
 . . . S RESULT(RESULT)=TIUIEN_"^"_$$GMRCACN^MAGDFCNV(GMRCIEN)_"^N"_MAGIEN
"RTN","MAGDGMRC",88,0)
 . . . Q
"RTN","MAGDGMRC",89,0)
 . . Q
"RTN","MAGDGMRC",90,0)
 . Q
"RTN","MAGDGMRC",91,0)
 K @WRK
"RTN","MAGDGMRC",92,0)
 Q
"RTN","MAGDGMRC",93,0)
 ;
"RTN","MAGDGMRC",94,0)
FWDFROM(GMRCIEN) ; for a forwarded request, determine the FORWARD FROM service
"RTN","MAGDGMRC",95,0)
 N FWDFROM,I
"RTN","MAGDGMRC",96,0)
 N WRK ; root of work global
"RTN","MAGDGMRC",97,0)
 ; set up the array to look through
"RTN","MAGDGMRC",98,0)
 S WRK=$NA(^TMP("MAG",$J,$T(+0))) K @WRK
"RTN","MAGDGMRC",99,0)
 D LIST^DIC(123.02,","_GMRCIEN_",",".01I;6I",,,,,,,,WRK,WRK)
"RTN","MAGDGMRC",100,0)
 ; traverse the array
"RTN","MAGDGMRC",101,0)
 S FWDFROM=0
"RTN","MAGDGMRC",102,0)
 I GMRCIEN D
"RTN","MAGDGMRC",103,0)
 . S I=$O(@WRK@("DILIST","ID"," "),-1)
"RTN","MAGDGMRC",104,0)
 . I I D  ; get the FORWARDED FROM service
"RTN","MAGDGMRC",105,0)
 . . S FWDFROM=$G(@WRK@("DILIST","ID",I,6))
"RTN","MAGDGMRC",106,0)
 . . Q
"RTN","MAGDGMRC",107,0)
 . Q
"RTN","MAGDGMRC",108,0)
 K @WRK
"RTN","MAGDGMRC",109,0)
 Q +FWDFROM
"RTN","MAGDGMRC",110,0)
 ;
"RTN","MAGDGMRC",111,0)
UNSIGNED(GMRCIEN) ; check if there are any unsigned TIU notes for the request
"RTN","MAGDGMRC",112,0)
 N TIUPTR,NRESULTS,TIUSTAT,UNSIGNED,X
"RTN","MAGDGMRC",113,0)
 N WRK ; root of work global
"RTN","MAGDGMRC",114,0)
 ; set up the array to look through
"RTN","MAGDGMRC",115,0)
 S WRK=$NA(^TMP("MAG",$J,$T(+0))) K @WRK
"RTN","MAGDGMRC",116,0)
 D LIST^DIC(123.03,","_GMRCIEN_",",".01I",,,,,,,,WRK,WRK)
"RTN","MAGDGMRC",117,0)
 S UNSIGNED=0,TIUPTR=""
"RTN","MAGDGMRC",118,0)
 ; traverse the array, check all associated results, bail if any unsigned
"RTN","MAGDGMRC",119,0)
 F  S TIUPTR=$O(@WRK@("DILIST","ID",TIUPTR)) Q:'TIUPTR  D  Q:UNSIGNED
"RTN","MAGDGMRC",120,0)
 . S X=$P($G(@WRK@("DILIST","ID",TIUPTR,.01)),"^",1)
"RTN","MAGDGMRC",121,0)
 . ; if TIU note, check if unsigned
"RTN","MAGDGMRC",122,0)
 . I X?.N1";TIU(8925," D  ; check status of TIU note for completion
"RTN","MAGDGMRC",123,0)
 . . ; status in ^TIU(8925.6) - use first 5 "UNs" per Margy McClenanhan
"RTN","MAGDGMRC",124,0)
 . . S TIUSTAT=$$GET1^DIQ(8925,+X,.05,"I")
"RTN","MAGDGMRC",125,0)
 . . I TIUSTAT,TIUSTAT<6 S UNSIGNED=1 ; got one!
"RTN","MAGDGMRC",126,0)
 . . Q
"RTN","MAGDGMRC",127,0)
 . Q
"RTN","MAGDGMRC",128,0)
 K @WRK
"RTN","MAGDGMRC",129,0)
 Q UNSIGNED
"RTN","MAGDGMRC",130,0)
 ;
"RTN","MAGDGMRC",131,0)
SEARCH(DFN,CUTOFF,CLINIC,REQUEST) ; search for requests for a given clinic
"RTN","MAGDGMRC",132,0)
 ;
"RTN","MAGDGMRC",133,0)
 ; It is a bit of a trick to determine if a given appointment is for
"RTN","MAGDGMRC",134,0)
 ; an existing GMRC request.  This determination is performed by using
"RTN","MAGDGMRC",135,0)
 ; an association between the SERVICE for the request and the CLINIC
"RTN","MAGDGMRC",136,0)
 ; where the request is to be performed.
"RTN","MAGDGMRC",137,0)
 ;
"RTN","MAGDGMRC",138,0)
 ; This subroutine passes all of the (recent) requests for a patient and
"RTN","MAGDGMRC",139,0)
 ; builds a list of those that can be performed in the designated clinic.
"RTN","MAGDGMRC",140,0)
 ;
"RTN","MAGDGMRC",141,0)
 ; Maybe the replacement for Appointment Management and future versions
"RTN","MAGDGMRC",142,0)
 ; of CPRS Order Entry and Consult Request Tracking will capable of
"RTN","MAGDGMRC",143,0)
 ; correctly maintaining this essential association.
"RTN","MAGDGMRC",144,0)
 ;
"RTN","MAGDGMRC",145,0)
 N GMRIDX,GMRC0,GMRCDATE,GMRCIEN,SERVICE,STATUS
"RTN","MAGDGMRC",146,0)
 N WRK ; --- root of results global
"RTN","MAGDGMRC",147,0)
 N ADFN ; -- array for DFNs to look up
"RTN","MAGDGMRC",148,0)
 K REQUEST S REQUEST=0
"RTN","MAGDGMRC",149,0)
 I 'DFN Q  ; no patient number provided
"RTN","MAGDGMRC",150,0)
 ; build the array of results
"RTN","MAGDGMRC",151,0)
 ; Note the use of the "Q[uick]" flag to allow lookup by *internal* DFN.
"RTN","MAGDGMRC",152,0)
 ; However, even though we define ADFN(1) to force lookup on the *first*
"RTN","MAGDGMRC",153,0)
 ; level subscript of the F index only, FileMan also looks up on the IEN
"RTN","MAGDGMRC",154,0)
 ; directly (because there is a .001 field defined in the DD of File
"RTN","MAGDGMRC",155,0)
 ; #123).  So we grab the DFN in the .02 field for later double-
"RTN","MAGDGMRC",156,0)
 ; checking.
"RTN","MAGDGMRC",157,0)
 ;
"RTN","MAGDGMRC",158,0)
 S ADFN(1)=DFN
"RTN","MAGDGMRC",159,0)
 S WRK=$NA(^TMP("MAG",$J,$T(+0))) K @WRK
"RTN","MAGDGMRC",160,0)
 D FIND^DIC(123,,"@;.02I;1I;3I;5I;8I","QX",.ADFN,,"F",,,WRK,WRK)
"RTN","MAGDGMRC",161,0)
 ; traverse the results
"RTN","MAGDGMRC",162,0)
 S GMRIDX=""
"RTN","MAGDGMRC",163,0)
 F  S GMRIDX=$O(@WRK@("DILIST","ID",GMRIDX)) Q:'GMRIDX  D
"RTN","MAGDGMRC",164,0)
 . S GMRCIEN=+$G(@WRK@("DILIST",2,GMRIDX))
"RTN","MAGDGMRC",165,0)
 . I $G(@WRK@("DILIST","ID",GMRIDX,.02))'=DFN Q  ; not for this patient!
"RTN","MAGDGMRC",166,0)
 . I $G(@WRK@("DILIST","ID",GMRIDX,3))<CUTOFF Q  ; too far back
"RTN","MAGDGMRC",167,0)
 . S SERVICE=$G(@WRK@("DILIST","ID",GMRIDX,1)) Q:SERVICE=""
"RTN","MAGDGMRC",168,0)
 . I '$$ISCLINIC^MAGDGMRC(SERVICE,CLINIC) Q  ; not a service or clinic
"RTN","MAGDGMRC",169,0)
 . S STATUS=$G(@WRK@("DILIST","ID",GMRIDX,8)) ; CPRS status
"RTN","MAGDGMRC",170,0)
 . I STATUS S STATUS=$$GET1^DIQ(100.01,STATUS,.1) ; CPRS status abbrev
"RTN","MAGDGMRC",171,0)
 . S REQUEST=$G(REQUEST)+1
"RTN","MAGDGMRC",172,0)
 . S REQUEST(REQUEST)=GMRCIEN_"^"_SERVICE_"^"_STATUS
"RTN","MAGDGMRC",173,0)
 . Q
"RTN","MAGDGMRC",174,0)
 K @WRK
"RTN","MAGDGMRC",175,0)
 Q
"RTN","MAGDGMRC",176,0)
 ;
"RTN","MAGDGMRC",177,0)
ISCLINIC(SERVICE,CLINIC) ; is a particular clinic defined for a given service?
"RTN","MAGDGMRC",178,0)
 ; this entry point is called by ^MAGDGMRC as well as below
"RTN","MAGDGMRC",179,0)
 N ISCLINIC
"RTN","MAGDGMRC",180,0)
 S ISCLINIC=0
"RTN","MAGDGMRC",181,0)
 I SERVICE,CLINIC,$D(^MAG(2006.5831,SERVICE,1,"B",CLINIC)) S ISCLINIC=1
"RTN","MAGDGMRC",182,0)
 Q ISCLINIC
"RTN","MAGDGMRC",183,0)
 ;
"RTN","MAGDHWA")
0^20^B45705303
"RTN","MAGDHWA",1,0)
MAGDHWA ;WOIFO/PMK - Capture Consult/Request data ; 19 Mar 2009 6:36 AM
"RTN","MAGDHWA",2,0)
 ;;3.0;IMAGING;**10,51,50,49**;Mar 19, 2002;Build 4;Apr 07, 2011
"RTN","MAGDHWA",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDHWA",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDHWA",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDHWA",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDHWA",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDHWA",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDHWA",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDHWA",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDHWA",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDHWA",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDHWA",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDHWA",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDHWA",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDHWA",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDHWA",17,0)
 ;;
"RTN","MAGDHWA",18,0)
 Q
"RTN","MAGDHWA",19,0)
 ; entry points called by both ^MAGDHWC and ^MAGDHWS
"RTN","MAGDHWA",20,0)
 ;
"RTN","MAGDHWA",21,0)
MSH ; update MSH segment
"RTN","MAGDHWA",22,0)
 S $P(HL7(1),DEL,5)="VI-CONSULT" ; receiving application
"RTN","MAGDHWA",23,0)
 S $P(HL7(1),DEL,6)=$P(HL7(1),DEL,4) ; receiving facility
"RTN","MAGDHWA",24,0)
 S $P(HL7(1),DEL,7)=$$FMTHL7^XLFDT(FMDATETM)
"RTN","MAGDHWA",25,0)
 Q
"RTN","MAGDHWA",26,0)
 ;
"RTN","MAGDHWA",27,0)
PID ; update PID & PV1 segments
"RTN","MAGDHWA",28,0)
 N DFN,HL7SEG,I,X
"RTN","MAGDHWA",29,0)
 ; update PID segment
"RTN","MAGDHWA",30,0)
 S I=0 I $$FINDSEG^MAGDHW0(.HL7,"PID",.I,.X) D
"RTN","MAGDHWA",31,0)
 . N HL,HL7ARRAY,HLECH,HLFS,HLQ,NUL
"RTN","MAGDHWA",32,0)
 . S DFN=$P(X,DEL,3)
"RTN","MAGDHWA",33,0)
 . D INIT^MAGDHW0
"RTN","MAGDHWA",34,0)
 . S HLECH=HL("ECH")
"RTN","MAGDHWA",35,0)
 . S HLFS=HL("FS")
"RTN","MAGDHWA",36,0)
 . S HLQ=HL("Q")
"RTN","MAGDHWA",37,0)
 . S HL7ARRAY(1,9,1,1,1)=""
"RTN","MAGDHWA",38,0)
 . S HL7ARRAY(1,0)="MSH"
"RTN","MAGDHWA",39,0)
 . S HL7ARRAY(1,1,1,1,1)=HLFS
"RTN","MAGDHWA",40,0)
 . S HL7ARRAY(1,2,1,1,1)=HLECH
"RTN","MAGDHWA",41,0)
 . D PID^MAGDHLS(DFN,"HL7ARRAY")
"RTN","MAGDHWA",42,0)
 . D PV1^MAGDHLS(DFN,"",DT,"HL7ARRAY")
"RTN","MAGDHWA",43,0)
 . ;
"RTN","MAGDHWA",44,0)
 . S NUL=$$MAKE^MAG7UM("HL7ARRAY","HL7SEG")
"RTN","MAGDHWA",45,0)
 . S HL7(I)=HL7SEG(2)
"RTN","MAGDHWA",46,0)
 . Q
"RTN","MAGDHWA",47,0)
 ; update PV1 segment
"RTN","MAGDHWA",48,0)
 S I=0 I $$FINDSEG^MAGDHW0(.HL7,"PV1",.I,.X) D
"RTN","MAGDHWA",49,0)
 . S HL7(I)=HL7SEG(3)
"RTN","MAGDHWA",50,0)
 . Q
"RTN","MAGDHWA",51,0)
 Q
"RTN","MAGDHWA",52,0)
 ;
"RTN","MAGDHWA",53,0)
ORC ; update ORC segment
"RTN","MAGDHWA",54,0)
 N D0,I,J,NAME,X
"RTN","MAGDHWA",55,0)
 S CONSULT=DEL2 ; consult always contains DEL2
"RTN","MAGDHWA",56,0)
 S I=0 I $$FINDSEG^MAGDHW0(.HL7,"ORC",.I,.X) D
"RTN","MAGDHWA",57,0)
 . ; get consult ien for OBR segment
"RTN","MAGDHWA",58,0)
 . S CONSULT=$P(X,DEL,3)
"RTN","MAGDHWA",59,0)
 . ; add names of order enterer and ordering provider
"RTN","MAGDHWA",60,0)
 . F J=10,12 D
"RTN","MAGDHWA",61,0)
 . . S D0=$P(X,DEL,J),NAME=$S(D0:$$GET1^DIQ(200,D0,.01),1:"")
"RTN","MAGDHWA",62,0)
 . . S NAME=$TR(NAME,", ",DEL2_DEL2)
"RTN","MAGDHWA",63,0)
 . . S $P(X,DEL,J)=D0_DEL2_NAME
"RTN","MAGDHWA",64,0)
 . . Q
"RTN","MAGDHWA",65,0)
 . D SAVESEG^MAGDHW0(I,X)
"RTN","MAGDHWA",66,0)
 . Q
"RTN","MAGDHWA",67,0)
 Q
"RTN","MAGDHWA",68,0)
 ;
"RTN","MAGDHWA",69,0)
OBR ; update OBR segment
"RTN","MAGDHWA",70,0)
 N I,X,Z
"RTN","MAGDHWA",71,0)
 S I=0 I $$FINDSEG^MAGDHW0(.HL7,"OBR",.I,.X) D
"RTN","MAGDHWA",72,0)
 . S $P(X,DEL,3)=CONSULT_DEL2_"L",GMRCIEN=+CONSULT
"RTN","MAGDHWA",73,0)
 . S Z=$$GET1^DIQ(123,GMRCIEN,5,"I") ; urgency
"RTN","MAGDHWA",74,0)
 . I Z S $P(X,DEL,5)=$$GET1^DIQ(101,Z,1) ; priority
"RTN","MAGDHWA",75,0)
 . ;
"RTN","MAGDHWA",76,0)
 . S Z=$$GET1^DIQ(123,GMRCIEN,6,"I") ; place of consult
"RTN","MAGDHWA",77,0)
 . I Z S $P(X,DEL,18)=$$GET1^DIQ(101,Z,1) ; placer field #1
"RTN","MAGDHWA",78,0)
 . ;
"RTN","MAGDHWA",79,0)
 . S Z=$$GET1^DIQ(123,GMRCIEN,13,"I") ; request type
"RTN","MAGDHWA",80,0)
 . S Z=$S(Z="C":"CONSULT",Z="P":"PROCEDURE",1:"UNKNOWN")
"RTN","MAGDHWA",81,0)
 . S $P(X,DEL,19)=Z ; consult/procedure flag - placer field #2
"RTN","MAGDHWA",82,0)
 . ;
"RTN","MAGDHWA",83,0)
 . ; store the current CPRS GMRC or Appointment Scheduling status
"RTN","MAGDHWA",84,0)
 . ; FILLER1 is also set in ^MAGDHWS
"RTN","MAGDHWA",85,0)
 . I '$D(FILLER1) S FILLER1="GMRC-"_$$GET1^DIQ(123,GMRCIEN,8)
"RTN","MAGDHWA",86,0)
 . ; make linkage between the image group and the TIU note, if necessary
"RTN","MAGDHWA",87,0)
 . I MSGTYPE["RESULT",$$NEWTIU(GMRCIEN) S $P(FILLER1,DEL2,2)="LINKED"
"RTN","MAGDHWA",88,0)
 . S $P(X,DEL,20)=FILLER1
"RTN","MAGDHWA",89,0)
 . ;
"RTN","MAGDHWA",90,0)
 . ; store the clinic for the appointment in "filler field 2"
"RTN","MAGDHWA",91,0)
 . I $D(APTSCHED("CLINIC IEN")),$D(APTSCHED("CLINIC NAME")) D
"RTN","MAGDHWA",92,0)
 . . S $P(X,DEL,21)=APTSCHED("CLINIC IEN")_DEL2_APTSCHED("CLINIC NAME")
"RTN","MAGDHWA",93,0)
 . . Q
"RTN","MAGDHWA",94,0)
 . ;
"RTN","MAGDHWA",95,0)
 . ; CPRS Attention - HL7 "Result Copies To" field
"RTN","MAGDHWA",96,0)
 . S Z=$$GET1^DIQ(123,GMRCIEN,7,"I") ; pointer to ^VA(200)
"RTN","MAGDHWA",97,0)
 . I Z S $P(X,DEL,28)=Z_DEL2_$TR($$GET1^DIQ(200,Z,.01),", ",DEL2_DEL2)
"RTN","MAGDHWA",98,0)
 . ;
"RTN","MAGDHWA",99,0)
 . ; date and time of scheduled appointment
"RTN","MAGDHWA",100,0)
 . I $D(APTSCHED("FM DATETIME")) D
"RTN","MAGDHWA",101,0)
 . . S $P(X,DEL,36)=$$FMTHL7^XLFDT(APTSCHED("FM DATETIME"))
"RTN","MAGDHWA",102,0)
 . . Q
"RTN","MAGDHWA",103,0)
 . ;
"RTN","MAGDHWA",104,0)
 . ; from service (requesting service)
"RTN","MAGDHWA",105,0)
 . S Z=$$GET1^DIQ(123,GMRCIEN,2,"I") ; pointer to ^SC(Z)
"RTN","MAGDHWA",106,0)
 . I Z S $P(X,DEL,47)=Z_DEL2_$$GET1^DIQ(44,Z,.01)
"RTN","MAGDHWA",107,0)
 . D SAVESEG^MAGDHW0(I,X)
"RTN","MAGDHWA",108,0)
 . Q
"RTN","MAGDHWA",109,0)
 Q
"RTN","MAGDHWA",110,0)
 ;
"RTN","MAGDHWA",111,0)
ZSV ; find ZSV segment and add imaging type code
"RTN","MAGDHWA",112,0)
 N I,Z
"RTN","MAGDHWA",113,0)
 S I=0 I $$FINDSEG^MAGDHW0(.HL7,"ZSV",.I,.X) D
"RTN","MAGDHWA",114,0)
 . S $P(X,DEL,3)=ITYPCODE_DEL2_ITYPNAME_DEL2_DIVISION
"RTN","MAGDHWA",115,0)
 . S $P(X,DEL,4)=$G(ORIGSERV) ; original service for a FORWARD request
"RTN","MAGDHWA",116,0)
 . D SAVESEG^MAGDHW0(I,X)
"RTN","MAGDHWA",117,0)
 . Q
"RTN","MAGDHWA",118,0)
 Q
"RTN","MAGDHWA",119,0)
 ;
"RTN","MAGDHWA",120,0)
ALLERGY ; check to see if patient has any allergies
"RTN","MAGDHWA",121,0)
 N GMRA,GMRAL,I,X
"RTN","MAGDHWA",122,0)
 D EN1^GMRADPT
"RTN","MAGDHWA",123,0)
 S I=0 F  S I=$O(GMRAL(I)) Q:'I  D  ; include each allergy string as an HL7 OBX segment
"RTN","MAGDHWA",124,0)
 . S OBXSEGNO=OBXSEGNO+1
"RTN","MAGDHWA",125,0)
 . S X="OBX|"_OBXSEGNO_"|TX|A^ALLERGIES^L||",X=$TR(X,"|^",DEL_DEL2)
"RTN","MAGDHWA",126,0)
 . S X=X_$P(GMRAL(I),"^",2)
"RTN","MAGDHWA",127,0)
 . S X=X_DEL_DEL_DEL_DEL_DEL_DEL ; final six delimiters
"RTN","MAGDHWA",128,0)
 . D ADDSEG^MAGDHW0(X)
"RTN","MAGDHWA",129,0)
 . Q
"RTN","MAGDHWA",130,0)
 Q
"RTN","MAGDHWA",131,0)
 ;
"RTN","MAGDHWA",132,0)
POSTINGS ; check if the patient has any other postings
"RTN","MAGDHWA",133,0)
 N I,HIT,MSG
"RTN","MAGDHWA",134,0)
 D ENCOVER^TIUPP3(DFN) I MSG Q  ; MSG="0^Patient posting found"
"RTN","MAGDHWA",135,0)
 S (I,HIT)=0
"RTN","MAGDHWA",136,0)
 F  S I=$O(^TMP("TIUPPCV",$J,I)) Q:'I  I $P(^(I),"^",2)'="A" S HIT=1 Q
"RTN","MAGDHWA",137,0)
 I HIT D
"RTN","MAGDHWA",138,0)
 . S X="OBX|"_OBXSEGNO_"|TX|P^POSTINGS^L||"
"RTN","MAGDHWA",139,0)
 . S X=$TR(X,"|^",DEL_DEL2)
"RTN","MAGDHWA",140,0)
 . S X=X_"Please see CPRS for additional information about Postings."
"RTN","MAGDHWA",141,0)
 . S X=X_DEL_DEL_DEL_DEL_DEL_DEL ; final six delimiters
"RTN","MAGDHWA",142,0)
 . D ADDSEG^MAGDHW0(X)
"RTN","MAGDHWA",143,0)
 . Q
"RTN","MAGDHWA",144,0)
 Q
"RTN","MAGDHWA",145,0)
 ;
"RTN","MAGDHWA",146,0)
NEWTIU(GMRCIEN) ; check if this is a TIU note to be linked to an image group
"RTN","MAGDHWA",147,0)
 ; if so, create the cross-linkages now
"RTN","MAGDHWA",148,0)
 N CROSSREF,D0,FILEDATA,HIT,MAGGP,MAGIEN,NIMAGE,TIUIEN
"RTN","MAGDHWA",149,0)
 S HIT=0
"RTN","MAGDHWA",150,0)
 S D0=""
"RTN","MAGDHWA",151,0)
 F  S D0=$O(^MAG(2006.5839,"C",123,GMRCIEN,D0)) Q:'D0  D
"RTN","MAGDHWA",152,0)
 . S MAGGP=$P($G(^MAG(2006.5839,D0,0)),"^",3) Q:'MAGGP
"RTN","MAGDHWA",153,0)
 . S TIUIEN=$$TIULAST^MAGDGMRC(GMRCIEN) Q:'TIUIEN
"RTN","MAGDHWA",154,0)
 . S $P(^MAG(2005,MAGGP,2),"^",6,7)="8925^"_TIUIEN
"RTN","MAGDHWA",155,0)
 . D TIUXLINK ; create the cross-linkages to TIU
"RTN","MAGDHWA",156,0)
 . ; update the parent file pointers for all the images
"RTN","MAGDHWA",157,0)
 . S CROSSREF="8925^"_TIUIEN_"^"_FILEDATA("PARENT FILE PTR")
"RTN","MAGDHWA",158,0)
 . S NIMAGE=0 F  S NIMAGE=$O(^MAG(2005,MAGGP,1,NIMAGE)) Q:'NIMAGE  D
"RTN","MAGDHWA",159,0)
 . . S MAGIEN=$P(^MAG(2005,MAGGP,1,NIMAGE,0),"^")
"RTN","MAGDHWA",160,0)
 . . S $P(^MAG(2005,MAGIEN,2),"^",6,8)=CROSSREF
"RTN","MAGDHWA",161,0)
 . . Q
"RTN","MAGDHWA",162,0)
 . ; remove entries from ^MAG(2006.5839) & decrement the counter
"RTN","MAGDHWA",163,0)
 . K ^MAG(2006.5839,D0),^MAG(2006.5839,"C",123,GMRCIEN,D0)
"RTN","MAGDHWA",164,0)
 . L +^MAG(2006.5839):1E9 ; Background process MUST wait
"RTN","MAGDHWA",165,0)
 . S $P(^MAG(2006.5839,0),"^",4)=$P(^MAG(2006.5839,0),"^",4)-1
"RTN","MAGDHWA",166,0)
 . L -^MAG(2006.5839)
"RTN","MAGDHWA",167,0)
 . S HIT=1
"RTN","MAGDHWA",168,0)
 . Q
"RTN","MAGDHWA",169,0)
 Q HIT
"RTN","MAGDHWA",170,0)
 ;
"RTN","MAGDHWA",171,0)
TIUXLINK ; create the cross-linkages to TIU EXTERNAL DATA LINK file
"RTN","MAGDHWA",172,0)
 N TIUXDIEN
"RTN","MAGDHWA",173,0)
 D PUTIMAGE^TIUSRVPL(.TIUXDIEN,TIUIEN,MAGGP)
"RTN","MAGDHWA",174,0)
 I TIUXDIEN D
"RTN","MAGDHWA",175,0)
 . S FILEDATA("PARENT FILE PTR")=TIUXDIEN
"RTN","MAGDHWA",176,0)
 . S $P(^MAG(2005,MAGGP,2),"^",8)=TIUXDIEN
"RTN","MAGDHWA",177,0)
 . Q
"RTN","MAGDHWA",178,0)
 E  D  ; fatal error
"RTN","MAGDHWA",179,0)
 . N MSG
"RTN","MAGDHWA",180,0)
 . S MSG(1)="ERROR ASSOCIATING WITH TIU EXTERNAL DATA LINK (file 8925.91):"
"RTN","MAGDHWA",181,0)
 . S MSG(2)=$P(TIUXDIEN,"^",2,999)
"RTN","MAGDHWA",182,0)
 . S X="ERR^MAGGTERR",@^%ZOSF("TRAP")
"RTN","MAGDHWA",183,0)
 . Q
"RTN","MAGDHWA",184,0)
 Q
"RTN","MAGDHWC")
0^21^B48238555
"RTN","MAGDHWC",1,0)
MAGDHWC ;WOIFO/PMK/NST - Capture Consult/Procedure Request data ; 27 Aug 2010 8:40 AM
"RTN","MAGDHWC",2,0)
 ;;3.0;IMAGING;**10,51,46,54,106**;Mar 19, 2002;Build 4;Feb 28, 2011
"RTN","MAGDHWC",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDHWC",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDHWC",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDHWC",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDHWC",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDHWC",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDHWC",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDHWC",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDHWC",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDHWC",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDHWC",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDHWC",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDHWC",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDHWC",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDHWC",17,0)
 ;;
"RTN","MAGDHWC",18,0)
ENTRY ;
"RTN","MAGDHWC",19,0)
 ; determine the kind of message and branch appropriately
"RTN","MAGDHWC",20,0)
 N APTSCHED,CONSULT,DATETIME,DEL,DEL2,DEL3,DEL4,DEL5,DFN
"RTN","MAGDHWC",21,0)
 N DIVISION,FILLER1,FWDFROM,FMDATE,FMDATETM,GMRCIEN,HL,HL7,HL7ORC,HL7REC
"RTN","MAGDHWC",22,0)
 N I,IGNORE,ITYPCODE,ITYPNAME,IGNORE,MSGTYPE,OBXSEGNO,ORIGSERV,SERVICE,X,Y,Z
"RTN","MAGDHWC",23,0)
 I $D(GMRCMSG) M HL7=GMRCMSG
"RTN","MAGDHWC",24,0)
 E  I $D(XQORHSTK(0)) M HL7=XQORHSTK(0)
"RTN","MAGDHWC",25,0)
 E  Q  ; can't find HL7 data to handle this!
"RTN","MAGDHWC",26,0)
 S HL7REC=HL7(1)
"RTN","MAGDHWC",27,0)
 S DEL=$E(HL7REC,4),X=$P(HL7REC,DEL,2)
"RTN","MAGDHWC",28,0)
 F I=1:1:$L(X) S @("DEL"_(I+1))=$E(X,I)
"RTN","MAGDHWC",29,0)
 S FMDATETM=$$NOW^XLFDT(),FMDATE=FMDATETM\1
"RTN","MAGDHWC",30,0)
 ;
"RTN","MAGDHWC",31,0)
 ; find PID segment and get the DFN
"RTN","MAGDHWC",32,0)
 S I=0 I '$$FINDSEG^MAGDHW0(.HL7,"PID",.I,.X) Q  ; no PID segment
"RTN","MAGDHWC",33,0)
 S DFN=$P(X,DEL,3)
"RTN","MAGDHWC",34,0)
 ;
"RTN","MAGDHWC",35,0)
 ; find ORC segment and get GMRCIEN
"RTN","MAGDHWC",36,0)
 S I=0 I '$$FINDSEG^MAGDHW0(.HL7,"ORC",.I,.HL7ORC) Q  ; no ORC segment
"RTN","MAGDHWC",37,0)
 S GMRCIEN=+$P(HL7ORC,DEL,3) ; GMRC request is in ^GMR(123,GMRCIEN,...)
"RTN","MAGDHWC",38,0)
 ;
"RTN","MAGDHWC",39,0)
 D ^MAGDTR01 ; update the Read/Unread list with the data from the HL7 message
"RTN","MAGDHWC",40,0)
 ;
"RTN","MAGDHWC",41,0)
 S IGNORE=1 ; decide if service is one that requires HL7->DICOM gateway
"RTN","MAGDHWC",42,0)
 ;
"RTN","MAGDHWC",43,0)
 ; find ORC segment and check for an "OK" order control value
"RTN","MAGDHWC",44,0)
 I $P(HL7ORC,DEL)="OK" D  Q  ; generate message by ^MAGDHWS
"RTN","MAGDHWC",45,0)
 . S SERVICE=$$GET1^DIQ(123,GMRCIEN,1,"I")
"RTN","MAGDHWC",46,0)
 . D SERVICE ; send this transaction to the DICOM gateway?
"RTN","MAGDHWC",47,0)
 . I 'IGNORE D
"RTN","MAGDHWC",48,0)
 . . D INIT^MAGDHW0 ; initialize variables
"RTN","MAGDHWC",49,0)
 . . S DATETIME=""
"RTN","MAGDHWC",50,0)
 . . D MESSAGE^MAGDHWS("O") ; indicates new order
"RTN","MAGDHWC",51,0)
 . . Q
"RTN","MAGDHWC",52,0)
 . Q
"RTN","MAGDHWC",53,0)
 ;
"RTN","MAGDHWC",54,0)
 I " CA CR DR OC OD "[(" "_$P(HL7ORC,DEL)_" ") D  Q  ; Discontinued order
"RTN","MAGDHWC",55,0)
 . S SERVICE=$$GET1^DIQ(123,GMRCIEN,1,"I")
"RTN","MAGDHWC",56,0)
 . D SERVICE ; send this transaction to the DICOM gateway?
"RTN","MAGDHWC",57,0)
 . I 'IGNORE D
"RTN","MAGDHWC",58,0)
 . . D INIT^MAGDHW0 ; initialize variables
"RTN","MAGDHWC",59,0)
 . . S DATETIME=""
"RTN","MAGDHWC",60,0)
 . . D MESSAGE^MAGDHWS("C") ; Cancelled/Discontinued order
"RTN","MAGDHWC",61,0)
 . . Q
"RTN","MAGDHWC",62,0)
 . Q
"RTN","MAGDHWC",63,0)
 ;
"RTN","MAGDHWC",64,0)
 ; check for a FORWARD in the ORC segment
"RTN","MAGDHWC",65,0)
 I $P($P(HL7ORC,DEL,16),DEL2,5)="FORWARD" D
"RTN","MAGDHWC",66,0)
 . ; get previous service from REQUEST PROCESSING ACTIVITY
"RTN","MAGDHWC",67,0)
 . S FWDFROM=$$FWDFROM^MAGDGMRC(GMRCIEN) ; FORWARDED FROM service
"RTN","MAGDHWC",68,0)
 . S Y=0 I FWDFROM S Y=$G(^MAG(2006.5831,FWDFROM,0))
"RTN","MAGDHWC",69,0)
 . I Y D  ; forwarded from location was one in the service group
"RTN","MAGDHWC",70,0)
 . . N DIVISION,Z
"RTN","MAGDHWC",71,0)
 . . ; original service request probably was sent to DICOM Gateway
"RTN","MAGDHWC",72,0)
 . . S ORIGSERV=DEL2_DEL2_DEL2_FWDFROM_DEL2
"RTN","MAGDHWC",73,0)
 . . S ORIGSERV=ORIGSERV_$S(FWDFROM:$$GET1^DIQ(123.5,FWDFROM,.01),1:"")
"RTN","MAGDHWC",74,0)
 . . S ORIGSERV=ORIGSERV_DEL2_"99CON"
"RTN","MAGDHWC",75,0)
 . . D DIVISION(Y)
"RTN","MAGDHWC",76,0)
 . . S Z=$P(Y,"^",2)
"RTN","MAGDHWC",77,0)
 . . S ITYPNAME=$P(^MAG(2005.84,Z,0),"^",1)
"RTN","MAGDHWC",78,0)
 . . S ITYPCODE=$P(^MAG(2005.84,Z,2),"^",1)
"RTN","MAGDHWC",79,0)
 . . S ORIGSERV=ORIGSERV_DEL_ITYPCODE_DEL2_ITYPNAME_DEL2_DIVISION
"RTN","MAGDHWC",80,0)
 . . S (ITYPCODE,ITYPNAME)="" ; may need them nulled in ZSV^MAGDHWA
"RTN","MAGDHWC",81,0)
 . . S IGNORE=0
"RTN","MAGDHWC",82,0)
 . . Q
"RTN","MAGDHWC",83,0)
 . Q
"RTN","MAGDHWC",84,0)
 ;
"RTN","MAGDHWC",85,0)
 ; find ZSV segment and requested service - check if appropriate
"RTN","MAGDHWC",86,0)
 S I=0 I '$$FINDSEG^MAGDHW0(.HL7,"ZSV",.I,.X) Q  ; no ZSV segment
"RTN","MAGDHWC",87,0)
 S SERVICE=$P($P(X,DEL),DEL2,4)
"RTN","MAGDHWC",88,0)
 D SERVICE ; send this transaction to the DICOM gateway?
"RTN","MAGDHWC",89,0)
 ;
"RTN","MAGDHWC",90,0)
 S Z=$P(HL7ORC,DEL,1) ; Order Control
"RTN","MAGDHWC",91,0)
 S Y=$P(HL7ORC,DEL,5) ; Order Status
"RTN","MAGDHWC",92,0)
 I Z="SC" S MSGTYPE="RECEIVED" ; received
"RTN","MAGDHWC",93,0)
 E  I Z="RE" D  ; result
"RTN","MAGDHWC",94,0)
 . I Y="A" S MSGTYPE="PARTIAL RESULT" ; unsigned TIU note
"RTN","MAGDHWC",95,0)
 . E  I Y="CM" D  ; check for a new unsigned note
"RTN","MAGDHWC",96,0)
 . . I $$UNSIGNED^MAGDGMRC(GMRCIEN) D
"RTN","MAGDHWC",97,0)
 . . . S MSGTYPE="PARTIAL RESULT" ; unsigned TIU note
"RTN","MAGDHWC",98,0)
 . . . S FILLER1="GMRC-NEW UNSIGNED RESULT"
"RTN","MAGDHWC",99,0)
 . . . Q
"RTN","MAGDHWC",100,0)
 . . E  S MSGTYPE="COMPLETE RESULT"  ; signed TIU note
"RTN","MAGDHWC",101,0)
 . . Q
"RTN","MAGDHWC",102,0)
 . Q
"RTN","MAGDHWC",103,0)
 E  S MSGTYPE="UNKNOWN"
"RTN","MAGDHWC",104,0)
 ;
"RTN","MAGDHWC",105,0)
 ;-- patch 106: In case the service is not in file #2006.5831
"RTN","MAGDHWC",106,0)
 I IGNORE D  Q  ; just ignore HL7 message, don't send it to DICOM gateway
"RTN","MAGDHWC",107,0)
 . N I
"RTN","MAGDHWC",108,0)
 . I MSGTYPE["RESULT" S I=$$NEWTIU^MAGDHWA(GMRCIEN)
"RTN","MAGDHWC",109,0)
 . Q
"RTN","MAGDHWC",110,0)
 ;
"RTN","MAGDHWC",111,0)
 D MSH^MAGDHWA,PID^MAGDHWA,ORC^MAGDHWA,OBR^MAGDHWA,ZSV^MAGDHWA
"RTN","MAGDHWC",112,0)
 I '$$OBX() D  ; get OBX segment from database
"RTN","MAGDHWC",113,0)
 . S I=$O(HL7(""),-1)+1 S I=$$OBX^MAGDHWS(I)
"RTN","MAGDHWC",114,0)
 . Q
"RTN","MAGDHWC",115,0)
 E  D  ; process existing OBX segment
"RTN","MAGDHWC",116,0)
 . D OBX1
"RTN","MAGDHWC",117,0)
 . Q
"RTN","MAGDHWC",118,0)
 D ALLERGY^MAGDHWA,POSTINGS^MAGDHWA
"RTN","MAGDHWC",119,0)
 D OUTPUT^MAGDHW0
"RTN","MAGDHWC",120,0)
 Q
"RTN","MAGDHWC",121,0)
 ;
"RTN","MAGDHWC",122,0)
SERVICE ; check if the service is in the DICOM Clinical Service dictionary
"RTN","MAGDHWC",123,0)
 N Y
"RTN","MAGDHWC",124,0)
 I SERVICE D  ; ignore SERVICE if it is null
"RTN","MAGDHWC",125,0)
 . S Y=$G(^MAG(2006.5831,SERVICE,0))
"RTN","MAGDHWC",126,0)
 . S DIVISION=DEL2
"RTN","MAGDHWC",127,0)
 . I Y D  ; new service is of interest to DICOM Gateway
"RTN","MAGDHWC",128,0)
 . . D DIVISION(Y)
"RTN","MAGDHWC",129,0)
 . . S Z=$P(Y,"^",2)
"RTN","MAGDHWC",130,0)
 . . S ITYPNAME=$P(^MAG(2005.84,Z,0),"^",1)
"RTN","MAGDHWC",131,0)
 . . S ITYPCODE=$P(^MAG(2005.84,Z,2),"^",1)
"RTN","MAGDHWC",132,0)
 . . S IGNORE=0
"RTN","MAGDHWC",133,0)
 . . D APPOINT
"RTN","MAGDHWC",134,0)
 . . Q
"RTN","MAGDHWC",135,0)
 . Q
"RTN","MAGDHWC",136,0)
 Q
"RTN","MAGDHWC",137,0)
 ;
"RTN","MAGDHWC",138,0)
DIVISION(Y) ;
"RTN","MAGDHWC",139,0)
 S DIVISION=$P(Y,"^",3)
"RTN","MAGDHWC",140,0)
 S DIVISION=DIVISION_DEL2_$S(DIVISION:$$GET1^DIQ(4,DIVISION,.01),1:"")
"RTN","MAGDHWC",141,0)
 Q
"RTN","MAGDHWC",142,0)
 ;
"RTN","MAGDHWC",143,0)
APPOINT ; quite often the appointment is entered before the order is entered
"RTN","MAGDHWC",144,0)
 ; if this is the case, see if we can find the corresponding appointment
"RTN","MAGDHWC",145,0)
 N CLINIC,HIT,I,LOCIEN,ORDERIEN,VASD,XE,XI
"RTN","MAGDHWC",146,0)
 ; look for appointments for today or later - don't need VASD parameters
"RTN","MAGDHWC",147,0)
 D SDA^VADPT ; get the list of the appointments
"RTN","MAGDHWC",148,0)
 ; first check the order record for the patient location
"RTN","MAGDHWC",149,0)
 ; it might be the clinic for the appointment
"RTN","MAGDHWC",150,0)
 S HIT=0 ; indicator for finding an appointment match
"RTN","MAGDHWC",151,0)
 S ORDERIEN=$$GET1^DIQ(123,GMRCIEN,.03,"I")
"RTN","MAGDHWC",152,0)
 S LOCIEN=$S(ORDERIEN:$$GET1^DIQ(100,ORDERIEN,6,"I"),1:"")
"RTN","MAGDHWC",153,0)
 I LOCIEN?1N.N1";SC(" D
"RTN","MAGDHWC",154,0)
 . S CLINIC=+LOCIEN
"RTN","MAGDHWC",155,0)
 . I $$ISCLINIC^MAGDGMRC(SERVICE,CLINIC) D
"RTN","MAGDHWC",156,0)
 . . S I=0 F  S I=$O(^UTILITY("VASD",$J,I)) Q:'I  Q:HIT  D
"RTN","MAGDHWC",157,0)
 . . . S XI=^UTILITY("VASD",$J,I,"I"),XE=^("E")
"RTN","MAGDHWC",158,0)
 . . . ; check if there is an appointment in this clinic
"RTN","MAGDHWC",159,0)
 . . . I CLINIC=$P(XI,"^",2) D APPOINT1 ; select first apt. in clinic
"RTN","MAGDHWC",160,0)
 . . . Q
"RTN","MAGDHWC",161,0)
 . . Q
"RTN","MAGDHWC",162,0)
 . Q
"RTN","MAGDHWC",163,0)
 I 'HIT D  ; no appointment for the pt. location, look for other clinics
"RTN","MAGDHWC",164,0)
 . S I=0 F  S I=$O(^UTILITY("VASD",$J,I)) Q:'I  Q:HIT  D
"RTN","MAGDHWC",165,0)
 . . S XI=^UTILITY("VASD",$J,I,"I"),XE=^("E")
"RTN","MAGDHWC",166,0)
 . . S CLINIC=$P(XI,"^",2)
"RTN","MAGDHWC",167,0)
 . . I $$ISCLINIC^MAGDGMRC(SERVICE,CLINIC) D APPOINT1
"RTN","MAGDHWC",168,0)
 . . Q
"RTN","MAGDHWC",169,0)
 . Q
"RTN","MAGDHWC",170,0)
 K ^UTILITY("VASD",$J)
"RTN","MAGDHWC",171,0)
 Q
"RTN","MAGDHWC",172,0)
 ;
"RTN","MAGDHWC",173,0)
APPOINT1 ; fill the appointment schedule array
"RTN","MAGDHWC",174,0)
 S APTSCHED("FM DATETIME")=$P(XI,"^")
"RTN","MAGDHWC",175,0)
 S APTSCHED("CLINIC IEN")=CLINIC
"RTN","MAGDHWC",176,0)
 S APTSCHED("DATETIME")=$P(XE,"^")
"RTN","MAGDHWC",177,0)
 S APTSCHED("CLINIC NAME")=$P(XE,"^",2)
"RTN","MAGDHWC",178,0)
 S HIT=1 ; to exit loop
"RTN","MAGDHWC",179,0)
 Q
"RTN","MAGDHWC",180,0)
 ;
"RTN","MAGDHWC",181,0)
OBX() ; find OBX segments to determine the highest value of OBXSEGNO
"RTN","MAGDHWC",182,0)
 N I,X
"RTN","MAGDHWC",183,0)
 S OBXSEGNO=0
"RTN","MAGDHWC",184,0)
 S I=0 F  D  Q:I=""  ; $o through HL7 message - quit when at end
"RTN","MAGDHWC",185,0)
 . I $$FINDSEG^MAGDHW0(.HL7,"OBX",.I,.X) S OBXSEGNO=$P(X,DEL,1)
"RTN","MAGDHWC",186,0)
 . Q
"RTN","MAGDHWC",187,0)
 Q OBXSEGNO
"RTN","MAGDHWC",188,0)
 ;
"RTN","MAGDHWC",189,0)
OBX1 ; if there are second level OBX data, add OBX segment prefix
"RTN","MAGDHWC",190,0)
 N I,J
"RTN","MAGDHWC",191,0)
 ; add additional OBX segments to convey the Reason for the Request
"RTN","MAGDHWC",192,0)
 ; more than one, so can't use "I $$FINDSEG^MAGDHW0(.HL7,"OBX",.I) D  "
"RTN","MAGDHWC",193,0)
 S I="" F  S I=$O(HL7(I)) Q:I=""  I $P(HL7(I),DEL)="OBX" D
"RTN","MAGDHWC",194,0)
 . I '$D(HL7(I,1)) Q  ; no additional OBX segments needed
"RTN","MAGDHWC",195,0)
 . S X=$P(HL7(I),DEL,1,5) ; copy pieces 1-5 to other segments
"RTN","MAGDHWC",196,0)
 . S J="" F  S J=$O(HL7(I,J)) Q:'J  S HL7(I,J)=X_DEL_HL7(I,J)
"RTN","MAGDHWC",197,0)
 . Q
"RTN","MAGDHWC",198,0)
 Q
"RTN","MAGDHWS")
0^22^B26963690
"RTN","MAGDHWS",1,0)
MAGDHWS ;WOIFO/PMK - Capture Consult/GMRC data ; 05/18/2007 11:23
"RTN","MAGDHWS",2,0)
 ;;3.0;IMAGING;**10,11,51,84,85,54**;03-July-2009;Build 4;Build 1424
"RTN","MAGDHWS",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGDHWS",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDHWS",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGDHWS",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGDHWS",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGDHWS",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGDHWS",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGDHWS",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGDHWS",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGDHWS",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGDHWS",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGDHWS",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGDHWS",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGDHWS",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGDHWS",17,0)
 ;;
"RTN","MAGDHWS",18,0)
 ; Called from PROTOCOL called MAGD APPOINTMENT (^ORD(101,...))
"RTN","MAGDHWS",19,0)
 ; through the scheduling package
"RTN","MAGDHWS",20,0)
 ;
"RTN","MAGDHWS",21,0)
 N %,AFTERSTS,APTSCHED,CLINIC,CONSULTM,CUTOFF,DATETIME
"RTN","MAGDHWS",22,0)
 N DEL,DEL2,DEL3,DEL4,DEL5,DFN,DIVISION,DONE,FILLER1,FMDATE,FMDATETM
"RTN","MAGDHWS",23,0)
 N GMRCIEN,HL,IGNORE,IREQ,ITYPCODE,ITYPNAME,MSGTYPE,REQUEST
"RTN","MAGDHWS",24,0)
 N SERVICE,STATUS,UNKNOWN,X,Y,Z
"RTN","MAGDHWS",25,0)
 ;
"RTN","MAGDHWS",26,0)
 Q:$P($G(SDATA("AFTER","STATUS")),"^",3)=""  ; Not a valid appointment
"RTN","MAGDHWS",27,0)
 ;
"RTN","MAGDHWS",28,0)
 D INIT^MAGDHW0 ; initialize variables
"RTN","MAGDHWS",29,0)
 S FMDATETM=$$NOW^XLFDT(),FMDATE=FMDATETM\1
"RTN","MAGDHWS",30,0)
 S CUTOFF=$$HTFM^XLFDT($H-90) ; cutoff date is 90 days ago
"RTN","MAGDHWS",31,0)
 S DFN=$P(SDATA,"^",2),DATETIME=$P(SDATA,"^",3),CLINIC=$P(SDATA,"^",4)
"RTN","MAGDHWS",32,0)
 S APTSCHED("CLINIC IEN")=CLINIC,APTSCHED("FM DATETIME")=DATETIME
"RTN","MAGDHWS",33,0)
 S AFTERSTS=SDATA("AFTER","STATUS"),X=$P(AFTERSTS,"^",3)
"RTN","MAGDHWS",34,0)
 ; appointment management transactions from ^SD(409.63)
"RTN","MAGDHWS",35,0)
 S FILLER1="" D  Q:FILLER1=""
"RTN","MAGDHWS",36,0)
 . I X["CHECK IN" S FILLER1="SDAM-CHECKIN" Q
"RTN","MAGDHWS",37,0)
 . I X["CHECKED IN" S FILLER1="SDAM-CHECKIN" Q
"RTN","MAGDHWS",38,0)
 . I X["CHECK OUT" S FILLER1="SDAM-CHECKOUT" Q
"RTN","MAGDHWS",39,0)
 . I X["CHECKED OUT" S FILLER1="SDAM-CHECKOUT" Q
"RTN","MAGDHWS",40,0)
 . I X["AUTO RE-" S FILLER1="SDAM-SCHEDULED" Q
"RTN","MAGDHWS",41,0)
 . I X["AUTO-RE" S FILLER1="SDAM-SCHEDULED" Q
"RTN","MAGDHWS",42,0)
 . I X["ACTION REQUIRED" S FILLER1="SDAM-SCHEDULED" Q
"RTN","MAGDHWS",43,0)
 . I X["ACT REQ" S FILLER1="SDAM-SCHEDULED" Q
"RTN","MAGDHWS",44,0)
 . I X["NON-COUNT" S FILLER1="SDAM-SCHEDULED" Q
"RTN","MAGDHWS",45,0)
 . I X["CANCELLED" S FILLER1="SDAM-CANCELLED" Q
"RTN","MAGDHWS",46,0)
 . I X["NO-SHOW" S FILLER1="SDAM-CANCELLED" Q
"RTN","MAGDHWS",47,0)
 . I X["DELETED" S FILLER1="SDAM-CANCELLED" Q
"RTN","MAGDHWS",48,0)
 . I X["FUTURE" S FILLER1="SDAM-FUTURE" Q
"RTN","MAGDHWS",49,0)
 . I X["NO ACTION TAKEN" S FILLER1="SDAM-SCHEDULED" Q
"RTN","MAGDHWS",50,0)
 . I X["NO ACT TAKN" S FILLER1="SDAM-SCHEDULED" Q
"RTN","MAGDHWS",51,0)
 . I X["INPATIENT" S FILLER1="SDAM-SCHEDULED" Q
"RTN","MAGDHWS",52,0)
 . ;
"RTN","MAGDHWS",53,0)
 . W !!,"Unexpected Status: """,X,""" in protocol MAGD APPOINTMENT."
"RTN","MAGDHWS",54,0)
 . W !,"Please notify Customer Support"
"RTN","MAGDHWS",55,0)
 . W !!,"Press <Enter> to continue: " R X:$G(DTIME,300)
"RTN","MAGDHWS",56,0)
 . Q
"RTN","MAGDHWS",57,0)
 ;
"RTN","MAGDHWS",58,0)
 S APTSCHED("CLINIC NAME")=$S(CLINIC:$$GET1^DIQ(44,CLINIC,.01),1:"")
"RTN","MAGDHWS",59,0)
 ;
"RTN","MAGDHWS",60,0)
 ; find requests that can be performed in this clinic
"RTN","MAGDHWS",61,0)
 D SEARCH^MAGDGMRC(DFN,CUTOFF,CLINIC,.REQUEST)
"RTN","MAGDHWS",62,0)
 ;
"RTN","MAGDHWS",63,0)
 ; output an HL7 message for each request related to this appointment
"RTN","MAGDHWS",64,0)
 F IREQ=1:1:REQUEST D
"RTN","MAGDHWS",65,0)
 . S GMRCIEN=$P(REQUEST(IREQ),"^",1),SERVICE=$P(REQUEST(IREQ),"^",2)
"RTN","MAGDHWS",66,0)
 . S STATUS=$P(REQUEST(IREQ),"^",3)
"RTN","MAGDHWS",67,0)
 . S IGNORE=1 D SERVICE^MAGDHWC Q:IGNORE  ; not a service of interest
"RTN","MAGDHWS",68,0)
 . ; if {pending, active, scheduled, partially resulted, or complete}
"RTN","MAGDHWS",69,0)
 . I "^p^a^s^pr^c^"[("^"_STATUS_"^") D
"RTN","MAGDHWS",70,0)
 . . ; completed requests can only be checked out or cancelled
"RTN","MAGDHWS",71,0)
 . . I STATUS="c","SDAM-CHECKOUT^SDAM-CANCELLED"'[FILLER1 Q
"RTN","MAGDHWS",72,0)
 . . D MESSAGE("S")
"RTN","MAGDHWS",73,0)
 . . Q
"RTN","MAGDHWS",74,0)
 . Q
"RTN","MAGDHWS",75,0)
 Q
"RTN","MAGDHWS",76,0)
 ;
"RTN","MAGDHWS",77,0)
MESSAGE(MSGTYPE) ; invoked above and also from ^MAGDHWC for the initial order
"RTN","MAGDHWS",78,0)
 N CONSULT,HL7,MSG,NEXT,OBXSEGNO,ORCTRL,ORSTATUS
"RTN","MAGDHWS",79,0)
 I MSGTYPE="O" D  ; ordered - set in ^MAGDHWC
"RTN","MAGDHWS",80,0)
 . S MSGTYPE="ORDERED"
"RTN","MAGDHWS",81,0)
 . S ORCTRL="NW" ; order control
"RTN","MAGDHWS",82,0)
 . S ORSTATUS="IP" ; order status
"RTN","MAGDHWS",83,0)
 . Q
"RTN","MAGDHWS",84,0)
 E  D
"RTN","MAGDHWS",85,0)
 . S MSGTYPE="SCHEDULED"
"RTN","MAGDHWS",86,0)
 . S ORCTRL="SC" ; order control -- status changed
"RTN","MAGDHWS",87,0)
 . S ORSTATUS="ZC" ; scheduling
"RTN","MAGDHWS",88,0)
 . Q
"RTN","MAGDHWS",89,0)
 D MSH^HLFNC2(.HL,100000,.MSG) S $P(MSG,DEL,9)="ORM"
"RTN","MAGDHWS",90,0)
 S NEXT=0
"RTN","MAGDHWS",91,0)
 S NEXT=NEXT+1,HL7(NEXT)=MSG D MSH^MAGDHWA
"RTN","MAGDHWS",92,0)
 S NEXT=NEXT+1,HL7(NEXT)="PID",$P(HL7(NEXT),DEL,1+3)=DFN
"RTN","MAGDHWS",93,0)
 S NEXT=NEXT+1,HL7(NEXT)="PV1"
"RTN","MAGDHWS",94,0)
 D PID^MAGDHWA ; generate PID and PV1 segments
"RTN","MAGDHWS",95,0)
 S NEXT=NEXT+1,HL7(NEXT)=$$ORC D ORC^MAGDHWA
"RTN","MAGDHWS",96,0)
 S NEXT=NEXT+1,HL7(NEXT)=$$OBR D OBR^MAGDHWA
"RTN","MAGDHWS",97,0)
 S NEXT=NEXT+1,HL7(NEXT)=$$ZSV D ZSV^MAGDHWA
"RTN","MAGDHWS",98,0)
 S NEXT=NEXT+1,NEXT=$$OBX(NEXT)
"RTN","MAGDHWS",99,0)
 D ALLERGY^MAGDHWA,POSTINGS^MAGDHWA
"RTN","MAGDHWS",100,0)
 D OUTPUT^MAGDHW0
"RTN","MAGDHWS",101,0)
 Q
"RTN","MAGDHWS",102,0)
 ;
"RTN","MAGDHWS",103,0)
PV1() ; build a PV1 segment
"RTN","MAGDHWS",104,0)
 N X,Z
"RTN","MAGDHWS",105,0)
 S FROM=$$GET1^DIQ(123,GMRCIEN,.04,"I") ; patient location
"RTN","MAGDHWS",106,0)
 S Z=FROM_DEL3_$S(FROM:$$GET1^DIQ(44,FROM,.01),1:"")_DEL3_SERVICE
"RTN","MAGDHWS",107,0)
 S $P(X,DEL,10)=Z
"RTN","MAGDHWS",108,0)
 Q "PV1"_DEL_X
"RTN","MAGDHWS",109,0)
 ;
"RTN","MAGDHWS",110,0)
ORC() ; build an ORC segment
"RTN","MAGDHWS",111,0)
 N ORC,ORCPLCR,ORURG
"RTN","MAGDHWS",112,0)
 S ORCPLCR=$$GET1^DIQ(123,GMRCIEN,10,"I") ; sending provider
"RTN","MAGDHWS",113,0)
 D ORC^GMRCHL7(GMRCIEN,ORCTRL,ORCPLCR,,FMDATETM)
"RTN","MAGDHWS",114,0)
 S $P(ORC,DEL,5+1)=ORSTATUS
"RTN","MAGDHWS",115,0)
 Q ORC
"RTN","MAGDHWS",116,0)
 ;
"RTN","MAGDHWS",117,0)
ZSV() ; build a ZSV segment
"RTN","MAGDHWS",118,0)
 N ZSV
"RTN","MAGDHWS",119,0)
 D ZSV^GMRCHL7(GMRCIEN)
"RTN","MAGDHWS",120,0)
 Q ZSV
"RTN","MAGDHWS",121,0)
 ;
"RTN","MAGDHWS",122,0)
OBR() ; build an OBR segment
"RTN","MAGDHWS",123,0)
 N NOTIFY,OBR
"RTN","MAGDHWS",124,0)
 D OBR^GMRCHL72(GMRCIEN,"",FMDATETM)
"RTN","MAGDHWS",125,0)
 Q OBR
"RTN","MAGDHWS",126,0)
 ;
"RTN","MAGDHWS",127,0)
OBX(NEXT) ; build one or more OBX segments
"RTN","MAGDHWS",128,0)
 N GMRCND,GMRCND1,I,J,OBX,X
"RTN","MAGDHWS",129,0)
 D OBX^GMRCHL72(GMRCIEN)
"RTN","MAGDHWS",130,0)
 S OBXSEGNO=0
"RTN","MAGDHWS",131,0)
 F I=1:1 Q:'$D(OBX(I))  D
"RTN","MAGDHWS",132,0)
 . D OBX1(OBX(I))
"RTN","MAGDHWS",133,0)
 . I $D(OBX(I,1)) S X=$P(OBX(I),DEL,1,5) F J=1:1 Q:'$D(OBX(I,J))  D
"RTN","MAGDHWS",134,0)
 . . D OBX1(X_DEL_OBX(I,J))
"RTN","MAGDHWS",135,0)
 . . Q
"RTN","MAGDHWS",136,0)
 . Q
"RTN","MAGDHWS",137,0)
 Q NEXT
"RTN","MAGDHWS",138,0)
 ;
"RTN","MAGDHWS",139,0)
OBX1(RECORD) ; store one OBX segment into the HL7 array
"RTN","MAGDHWS",140,0)
 S HL7(NEXT)=RECORD
"RTN","MAGDHWS",141,0)
 S OBXSEGNO=$P(RECORD,DEL,2) ; get the highest value of OBXSEGNO
"RTN","MAGDHWS",142,0)
 S NEXT=NEXT+1
"RTN","MAGDHWS",143,0)
 Q
"RTN","MAGI873T")
0^1^B3618094
"RTN","MAGI873T",1,0)
MAGI873T ;WOIFO/JL,MLH,CPT - Install code for TP - default report templates ; 1/9/2013 2:47 pm
"RTN","MAGI873T",2,0)
 ;;3.0;IMAGING;**I873**;Mar 19, 2002;Build 4;Oct 30, 2012
"RTN","MAGI873T",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGI873T",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGI873T",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGI873T",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGI873T",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGI873T",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGI873T",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGI873T",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGI873T",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGI873T",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGI873T",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGI873T",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGI873T",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGI873T",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGI873T",17,0)
 ;;
"RTN","MAGI873T",18,0)
 Q
"RTN","MAGI873T",19,0)
 ;
"RTN","MAGI873T",20,0)
 ;+++++ INSTALL DEFAULT XML REPORT TEMPLATES
"RTN","MAGI873T",21,0)
 ;
"RTN","MAGI873T",22,0)
RPTXTPL ;
"RTN","MAGI873T",23,0)
 D RPTXTPL^MAGI873U ;CYTOPATHOLOGY
"RTN","MAGI873T",24,0)
 D RPTXTPL^MAGI873V ;ELECTRON MICROSCOPY
"RTN","MAGI873T",25,0)
 D RPTXTPL^MAGI873W ;SURGICAL PATHOLOGY
"RTN","MAGI873T",26,0)
 Q
"RTN","MAGI873U")
0^2^B5237104
"RTN","MAGI873U",1,0)
MAGI873U ;WOIFO/JL,MLH,NST - Install code for TP - default report template (CY) ; 1/14/2013 2:39 pm
"RTN","MAGI873U",2,0)
 ;;3.0;IMAGING;**138**;Mar 19, 2002;Build 4;Oct 30, 2012
"RTN","MAGI873U",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGI873U",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGI873U",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGI873U",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGI873U",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGI873U",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGI873U",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGI873U",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGI873U",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGI873U",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGI873U",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGI873U",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGI873U",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGI873U",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGI873U",17,0)
 ;;
"RTN","MAGI873U",18,0)
 Q
"RTN","MAGI873U",19,0)
 ;
"RTN","MAGI873U",20,0)
 ;+++++ INSTALL DEFAULT XML REPORT TEMPLATES
"RTN","MAGI873U",21,0)
 ;
"RTN","MAGI873U",22,0)
RPTXTPL ;
"RTN","MAGI873U",23,0)
 N XML,MAGERR,D0,FLD,XMLIX,XMLDTA
"RTN","MAGI873U",24,0)
 S D0=$O(^MAG(2006.13,0)) Q:'D0
"RTN","MAGI873U",25,0)
 S FLD=1 ;CY
"RTN","MAGI873U",26,0)
 Q:$D(^MAG(2006.13,D0,FLD))>0  ;EXIST
"RTN","MAGI873U",27,0)
 F XMLIX=1:1 S XMLDTA=$P($T(XML+XMLIX),";",2) Q:XMLDTA=""  S XML(XMLIX)=XMLDTA
"RTN","MAGI873U",28,0)
 D WP^DIE(2006.13,D0_",",FLD,"A","XML","MAGERR")
"RTN","MAGI873U",29,0)
 I $D(MAGERR) D MES^MAGKIDS($G(MAGERR("DIERR",1,"TEXT",1)))
"RTN","MAGI873U",30,0)
 Q
"RTN","MAGI873U",31,0)
XML ;;Begin contents of XML template for cytopathology
"RTN","MAGI873U",32,0)
 ;<ReportTemplate xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
"RTN","MAGI873U",33,0)
 ;<ReportTypeShort>CY</ReportTypeShort>
"RTN","MAGI873U",34,0)
 ;<ReportTypeLong>Cytopathology</ReportTypeLong>
"RTN","MAGI873U",35,0)
 ;<ReportFields>
"RTN","MAGI873U",36,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873U",37,0)
 ;<DatabaseName>SPECIMEN</DatabaseName>
"RTN","MAGI873U",38,0)
 ;<DisplayName>Specimens</DisplayName>
"RTN","MAGI873U",39,0)
 ;<FieldNumber>.012</FieldNumber>
"RTN","MAGI873U",40,0)
 ;<InputType>MultiText</InputType>
"RTN","MAGI873U",41,0)
 ;<DisplayPosition>1</DisplayPosition>
"RTN","MAGI873U",42,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873U",43,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873U",44,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873U",45,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873U",46,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873U",47,0)
 ;<DatabaseName>BRIEF CLINICAL HISTORY</DatabaseName>
"RTN","MAGI873U",48,0)
 ;<DisplayName>Brief Clinical History</DisplayName>
"RTN","MAGI873U",49,0)
 ;<FieldNumber>.013</FieldNumber>
"RTN","MAGI873U",50,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873U",51,0)
 ;<DisplayPosition>2</DisplayPosition>
"RTN","MAGI873U",52,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873U",53,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873U",54,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873U",55,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873U",56,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873U",57,0)
 ;<DatabaseName>PREOPERATIVE DIAGNOSIS</DatabaseName>
"RTN","MAGI873U",58,0)
 ;<DisplayName>Preoperative Diagnosis</DisplayName>
"RTN","MAGI873U",59,0)
 ;<FieldNumber>.014</FieldNumber>
"RTN","MAGI873U",60,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873U",61,0)
 ;<DisplayPosition>3</DisplayPosition>
"RTN","MAGI873U",62,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873U",63,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873U",64,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873U",65,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873U",66,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873U",67,0)
 ;<DatabaseName>OPERATIVE FINDINGS</DatabaseName>
"RTN","MAGI873U",68,0)
 ;<DisplayName>Operative Findings</DisplayName>
"RTN","MAGI873U",69,0)
 ;<FieldNumber>.015</FieldNumber>
"RTN","MAGI873U",70,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873U",71,0)
 ;<DisplayPosition>4</DisplayPosition>
"RTN","MAGI873U",72,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873U",73,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873U",74,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873U",75,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873U",76,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873U",77,0)
 ;<DatabaseName>POSTOPERATIVE DIAGNOSIS</DatabaseName>
"RTN","MAGI873U",78,0)
 ;<DisplayName>Postoperative Diagnosis</DisplayName>
"RTN","MAGI873U",79,0)
 ;<FieldNumber>.016</FieldNumber>
"RTN","MAGI873U",80,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873U",81,0)
 ;<DisplayPosition>5</DisplayPosition>
"RTN","MAGI873U",82,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873U",83,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873U",84,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873U",85,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873U",86,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873U",87,0)
 ;<DatabaseName>GROSS DESCRIPTION</DatabaseName>
"RTN","MAGI873U",88,0)
 ;<DisplayName>Gross Description</DisplayName>
"RTN","MAGI873U",89,0)
 ;<FieldNumber>1</FieldNumber>
"RTN","MAGI873U",90,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873U",91,0)
 ;<DisplayPosition>6</DisplayPosition>
"RTN","MAGI873U",92,0)
 ;<IsRequired>true</IsRequired>
"RTN","MAGI873U",93,0)
 ;<AlwaysRequired>true</AlwaysRequired>
"RTN","MAGI873U",94,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873U",95,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873U",96,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873U",97,0)
 ;<DatabaseName>MICROSCOPIC EXAMINATION</DatabaseName>
"RTN","MAGI873U",98,0)
 ;<DisplayName>Microscopic Examination</DisplayName>
"RTN","MAGI873U",99,0)
 ;<FieldNumber>1.1</FieldNumber>
"RTN","MAGI873U",100,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873U",101,0)
 ;<DisplayPosition>7</DisplayPosition>
"RTN","MAGI873U",102,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873U",103,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873U",104,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873U",105,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873U",106,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873U",107,0)
 ;<DatabaseName>REVIEWED BY PATHOLOGIST</DatabaseName>
"RTN","MAGI873U",108,0)
 ;<DisplayName>Reviewed by Pathologist</DisplayName>
"RTN","MAGI873U",109,0)
 ;<FieldNumber>.101</FieldNumber>
"RTN","MAGI873U",110,0)
 ;<InputType>Boolean</InputType>
"RTN","MAGI873U",111,0)
 ;<DisplayPosition>9</DisplayPosition>
"RTN","MAGI873U",112,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873U",113,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873U",114,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873U",115,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873U",116,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873U",117,0)
 ;<DatabaseName>CYTOPATHOLOGY DIAGNOSIS</DatabaseName>
"RTN","MAGI873U",118,0)
 ;<DisplayName>Cytopathology Diagnosis</DisplayName>
"RTN","MAGI873U",119,0)
 ;<FieldNumber>1.4</FieldNumber>
"RTN","MAGI873U",120,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873U",121,0)
 ;<DisplayPosition>8</DisplayPosition>
"RTN","MAGI873U",122,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873U",123,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873U",124,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873U",125,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873U",126,0)
 ;</ReportFields>
"RTN","MAGI873U",127,0)
 ;</ReportTemplate>
"RTN","MAGI873U",128,0)
 ;;End contents of XML template for cytopathology
"RTN","MAGI873V")
0^3^B5337536
"RTN","MAGI873V",1,0)
MAGI873V ;WOIFO/JL,MLH,NST - Install code for TP - default report template (EM) ; 1/14/2013 3:07 pm
"RTN","MAGI873V",2,0)
 ;;3.0;IMAGING;**138**;Mar 19, 2002;Build 4;Oct 30, 2012
"RTN","MAGI873V",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGI873V",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGI873V",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGI873V",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGI873V",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGI873V",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGI873V",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGI873V",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGI873V",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGI873V",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGI873V",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGI873V",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGI873V",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGI873V",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGI873V",17,0)
 ;;
"RTN","MAGI873V",18,0)
 Q
"RTN","MAGI873V",19,0)
 ;
"RTN","MAGI873V",20,0)
 ;+++++ INSTALL DEFAULT XML REPORT TEMPLATES
"RTN","MAGI873V",21,0)
 ;
"RTN","MAGI873V",22,0)
RPTXTPL ;
"RTN","MAGI873V",23,0)
 N XML,MAGERR,D0,FLD,XMLIX,XMLDTA
"RTN","MAGI873V",24,0)
 S D0=$O(^MAG(2006.13,0)) Q:'D0
"RTN","MAGI873V",25,0)
 S FLD=2 ;EM
"RTN","MAGI873V",26,0)
 Q:$D(^MAG(2006.13,D0,FLD))>0  ;EXIST
"RTN","MAGI873V",27,0)
 F XMLIX=1:1 S XMLDTA=$P($T(XML+XMLIX),";",2) Q:XMLDTA=""  S XML(XMLIX)=XMLDTA
"RTN","MAGI873V",28,0)
 D WP^DIE(2006.13,D0_",",FLD,"A","XML","MAGERR")
"RTN","MAGI873V",29,0)
 I $D(MAGERR) D MES^MAGKIDS($G(MAGERR("DIERR",1,"TEXT",1)))
"RTN","MAGI873V",30,0)
 Q
"RTN","MAGI873V",31,0)
XML ;;Begin contents of XML template for electron microscopy
"RTN","MAGI873V",32,0)
 ;<ReportTemplate xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
"RTN","MAGI873V",33,0)
 ;<ReportTypeShort>EM</ReportTypeShort>
"RTN","MAGI873V",34,0)
 ;<ReportTypeLong>Electron Microscopy</ReportTypeLong>
"RTN","MAGI873V",35,0)
 ;<ReportFields>
"RTN","MAGI873V",36,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873V",37,0)
 ;<DatabaseName>SPECIMEN</DatabaseName>
"RTN","MAGI873V",38,0)
 ;<DisplayName>Specimens</DisplayName>
"RTN","MAGI873V",39,0)
 ;<FieldNumber>.012</FieldNumber>
"RTN","MAGI873V",40,0)
 ;<InputType>MultiText</InputType>
"RTN","MAGI873V",41,0)
 ;<DisplayPosition>1</DisplayPosition>
"RTN","MAGI873V",42,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873V",43,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873V",44,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873V",45,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873V",46,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873V",47,0)
 ;<DatabaseName>BRIEF CLINICAL HISTORY</DatabaseName>
"RTN","MAGI873V",48,0)
 ;<DisplayName>Brief Clinical History</DisplayName>
"RTN","MAGI873V",49,0)
 ;<FieldNumber>.013</FieldNumber>
"RTN","MAGI873V",50,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873V",51,0)
 ;<DisplayPosition>2</DisplayPosition>
"RTN","MAGI873V",52,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873V",53,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873V",54,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873V",55,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873V",56,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873V",57,0)
 ;<DatabaseName>PREOPERATIVE DIAGNOSIS</DatabaseName>
"RTN","MAGI873V",58,0)
 ;<DisplayName>Preoperative Diagnosis</DisplayName>
"RTN","MAGI873V",59,0)
 ;<FieldNumber>.014</FieldNumber>
"RTN","MAGI873V",60,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873V",61,0)
 ;<DisplayPosition>3</DisplayPosition>
"RTN","MAGI873V",62,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873V",63,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873V",64,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873V",65,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873V",66,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873V",67,0)
 ;<DatabaseName>OPERATIVE FINDINGS</DatabaseName>
"RTN","MAGI873V",68,0)
 ;<DisplayName>Operative Findings</DisplayName>
"RTN","MAGI873V",69,0)
 ;<FieldNumber>.015</FieldNumber>
"RTN","MAGI873V",70,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873V",71,0)
 ;<DisplayPosition>4</DisplayPosition>
"RTN","MAGI873V",72,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873V",73,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873V",74,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873V",75,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873V",76,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873V",77,0)
 ;<DatabaseName>POSTOPERATIVE DIAGNOSIS</DatabaseName>
"RTN","MAGI873V",78,0)
 ;<DisplayName>Postoperative Diagnosis</DisplayName>
"RTN","MAGI873V",79,0)
 ;<FieldNumber>.016</FieldNumber>
"RTN","MAGI873V",80,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873V",81,0)
 ;<DisplayPosition>5</DisplayPosition>
"RTN","MAGI873V",82,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873V",83,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873V",84,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873V",85,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873V",86,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873V",87,0)
 ;<DatabaseName>GROSS DESCRIPTION</DatabaseName>
"RTN","MAGI873V",88,0)
 ;<DisplayName>Gross Description</DisplayName>
"RTN","MAGI873V",89,0)
 ;<FieldNumber>1</FieldNumber>
"RTN","MAGI873V",90,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873V",91,0)
 ;<DisplayPosition>6</DisplayPosition>
"RTN","MAGI873V",92,0)
 ;<IsRequired>true</IsRequired>
"RTN","MAGI873V",93,0)
 ;<AlwaysRequired>true</AlwaysRequired>
"RTN","MAGI873V",94,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873V",95,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873V",96,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873V",97,0)
 ;<DatabaseName>MICROSCOPIC EXAMINATION</DatabaseName>
"RTN","MAGI873V",98,0)
 ;<DisplayName>Microscopic Examination</DisplayName>
"RTN","MAGI873V",99,0)
 ;<FieldNumber>1.1</FieldNumber>
"RTN","MAGI873V",100,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873V",101,0)
 ;<DisplayPosition>7</DisplayPosition>
"RTN","MAGI873V",102,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873V",103,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873V",104,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873V",105,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873V",106,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873V",107,0)
 ;<DatabaseName>EM DIAGNOSIS</DatabaseName>
"RTN","MAGI873V",108,0)
 ;<DisplayName>EM Diagnosis</DisplayName>
"RTN","MAGI873V",109,0)
 ;<FieldNumber>1.4</FieldNumber>
"RTN","MAGI873V",110,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873V",111,0)
 ;<DisplayPosition>8</DisplayPosition>
"RTN","MAGI873V",112,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873V",113,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873V",114,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873V",115,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873V",116,0)
 ;</ReportFields>
"RTN","MAGI873V",117,0)
 ;</ReportTemplate>
"RTN","MAGI873V",118,0)
 ;;End contents of XML template for electron microscopy
"RTN","MAGI873W")
0^4^B5317918
"RTN","MAGI873W",1,0)
MAGI873W ;WOIFO/JL,MLH,NST - Install code for TP - default report template (SP) ; 1/14/2013 3:20 pm
"RTN","MAGI873W",2,0)
 ;;3.0;IMAGING;**138**;Mar 19, 2002;Build 4;Oct 30, 2012
"RTN","MAGI873W",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGI873W",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGI873W",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGI873W",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGI873W",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGI873W",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGI873W",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGI873W",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGI873W",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGI873W",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGI873W",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGI873W",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGI873W",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGI873W",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGI873W",17,0)
 ;;
"RTN","MAGI873W",18,0)
 Q
"RTN","MAGI873W",19,0)
 ;
"RTN","MAGI873W",20,0)
 ;+++++ INSTALL DEFAULT XML REPORT TEMPLATES
"RTN","MAGI873W",21,0)
 ;
"RTN","MAGI873W",22,0)
RPTXTPL ;
"RTN","MAGI873W",23,0)
 N XML,MAGERR,D0,FLD,XMLIX,XMLDTA
"RTN","MAGI873W",24,0)
 S D0=$O(^MAG(2006.13,0)) Q:'D0
"RTN","MAGI873W",25,0)
 S FLD=3 ;SP
"RTN","MAGI873W",26,0)
 Q:$D(^MAG(2006.13,D0,FLD))>0  ;EXIST
"RTN","MAGI873W",27,0)
 F XMLIX=1:1 S XMLDTA=$P($T(XML+XMLIX),";",2) Q:XMLDTA=""  S XML(XMLIX)=XMLDTA
"RTN","MAGI873W",28,0)
 D WP^DIE(2006.13,D0_",",FLD,"A","XML","MAGERR")
"RTN","MAGI873W",29,0)
 I $D(MAGERR) D MES^MAGKIDS($G(MAGERR("DIERR",1,"TEXT",1)))
"RTN","MAGI873W",30,0)
 Q
"RTN","MAGI873W",31,0)
XML ;;Begin contents of XML template for cytopathology
"RTN","MAGI873W",32,0)
 ;<ReportTemplate xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
"RTN","MAGI873W",33,0)
 ;<ReportTypeShort>SP</ReportTypeShort>
"RTN","MAGI873W",34,0)
 ;<ReportTypeLong>Surgical Pathology</ReportTypeLong>
"RTN","MAGI873W",35,0)
 ;<ReportFields>
"RTN","MAGI873W",36,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873W",37,0)
 ;<DatabaseName>SPECIMEN</DatabaseName>
"RTN","MAGI873W",38,0)
 ;<DisplayName>Specimens</DisplayName>
"RTN","MAGI873W",39,0)
 ;<FieldNumber>.012</FieldNumber>
"RTN","MAGI873W",40,0)
 ;<InputType>MultiText</InputType>
"RTN","MAGI873W",41,0)
 ;<DisplayPosition>1</DisplayPosition>
"RTN","MAGI873W",42,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873W",43,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873W",44,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873W",45,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873W",46,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873W",47,0)
 ;<DatabaseName>BRIEF CLINICAL HISTORY</DatabaseName>
"RTN","MAGI873W",48,0)
 ;<DisplayName>Brief Clinical History</DisplayName>
"RTN","MAGI873W",49,0)
 ;<FieldNumber>.013</FieldNumber>
"RTN","MAGI873W",50,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873W",51,0)
 ;<DisplayPosition>2</DisplayPosition>
"RTN","MAGI873W",52,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873W",53,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873W",54,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873W",55,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873W",56,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873W",57,0)
 ;<DatabaseName>PREOPERATIVE DIAGNOSIS</DatabaseName>
"RTN","MAGI873W",58,0)
 ;<DisplayName>Preoperative Diagnosis</DisplayName>
"RTN","MAGI873W",59,0)
 ;<FieldNumber>.014</FieldNumber>
"RTN","MAGI873W",60,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873W",61,0)
 ;<DisplayPosition>3</DisplayPosition>
"RTN","MAGI873W",62,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873W",63,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873W",64,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873W",65,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873W",66,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873W",67,0)
 ;<DatabaseName>OPERATIVE FINDINGS</DatabaseName>
"RTN","MAGI873W",68,0)
 ;<DisplayName>Operative Findings</DisplayName>
"RTN","MAGI873W",69,0)
 ;<FieldNumber>.015</FieldNumber>
"RTN","MAGI873W",70,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873W",71,0)
 ;<DisplayPosition>4</DisplayPosition>
"RTN","MAGI873W",72,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873W",73,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873W",74,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873W",75,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873W",76,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873W",77,0)
 ;<DatabaseName>POSTOPERATIVE DIAGNOSIS</DatabaseName>
"RTN","MAGI873W",78,0)
 ;<DisplayName>Postoperative Diagnosis</DisplayName>
"RTN","MAGI873W",79,0)
 ;<FieldNumber>.016</FieldNumber>
"RTN","MAGI873W",80,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873W",81,0)
 ;<DisplayPosition>5</DisplayPosition>
"RTN","MAGI873W",82,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873W",83,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873W",84,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873W",85,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873W",86,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873W",87,0)
 ;<DatabaseName>GROSS DESCRIPTION</DatabaseName>
"RTN","MAGI873W",88,0)
 ;<DisplayName>Gross Description</DisplayName>
"RTN","MAGI873W",89,0)
 ;<FieldNumber>1</FieldNumber>
"RTN","MAGI873W",90,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873W",91,0)
 ;<DisplayPosition>6</DisplayPosition>
"RTN","MAGI873W",92,0)
 ;<IsRequired>true</IsRequired>
"RTN","MAGI873W",93,0)
 ;<AlwaysRequired>true</AlwaysRequired>
"RTN","MAGI873W",94,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873W",95,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873W",96,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873W",97,0)
 ;<DatabaseName>MICROSCOPIC DESCRIPTION</DatabaseName>
"RTN","MAGI873W",98,0)
 ;<DisplayName>Microscopic Description</DisplayName>
"RTN","MAGI873W",99,0)
 ;<FieldNumber>1.1</FieldNumber>
"RTN","MAGI873W",100,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873W",101,0)
 ;<DisplayPosition>7</DisplayPosition>
"RTN","MAGI873W",102,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873W",103,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873W",104,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873W",105,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873W",106,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873W",107,0)
 ;<DatabaseName>FROZEN SECTION</DatabaseName>
"RTN","MAGI873W",108,0)
 ;<DisplayName>Frozen Section</DisplayName>
"RTN","MAGI873W",109,0)
 ;<FieldNumber>1.3</FieldNumber>
"RTN","MAGI873W",110,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873W",111,0)
 ;<DisplayPosition>8</DisplayPosition>
"RTN","MAGI873W",112,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873W",113,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873W",114,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873W",115,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873W",116,0)
 ;<ReportFieldTemplate>
"RTN","MAGI873W",117,0)
 ;<DatabaseName>SURGICALPATH DIAGNOSIS</DatabaseName>
"RTN","MAGI873W",118,0)
 ;<DisplayName>Surgical Pathology Diagnosis</DisplayName>
"RTN","MAGI873W",119,0)
 ;<FieldNumber>1.4</FieldNumber>
"RTN","MAGI873W",120,0)
 ;<InputType>WordProcessing</InputType>
"RTN","MAGI873W",121,0)
 ;<DisplayPosition>9</DisplayPosition>
"RTN","MAGI873W",122,0)
 ;<IsRequired>false</IsRequired>
"RTN","MAGI873W",123,0)
 ;<AlwaysRequired>false</AlwaysRequired>
"RTN","MAGI873W",124,0)
 ;<TemplateList>Display</TemplateList>
"RTN","MAGI873W",125,0)
 ;</ReportFieldTemplate>
"RTN","MAGI873W",126,0)
 ;</ReportFields>
"RTN","MAGI873W",127,0)
 ;</ReportTemplate>
"RTN","MAGI873W",128,0)
 ;;End contents of XML template for surgical pathology
"RTN","MAGT7SS1")
0^23^B13413644
"RTN","MAGT7SS1",1,0)
MAGT7SS1 ;WOIFO/MLH - telepathology - create HL7 message to DPS - segment build - set up OBXs for each SPM ; 11/26/2012 4:10 PM
"RTN","MAGT7SS1",2,0)
 ;;3.0;IMAGING;**138**;Mar 19, 2002;Build 4;Nov 21, 2012
"RTN","MAGT7SS1",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGT7SS1",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGT7SS1",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGT7SS1",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGT7SS1",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGT7SS1",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGT7SS1",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGT7SS1",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGT7SS1",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGT7SS1",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGT7SS1",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGT7SS1",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGT7SS1",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGT7SS1",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGT7SS1",17,0)
 ;;
"RTN","MAGT7SS1",18,0)
 Q
"RTN","MAGT7SS1",19,0)
 ;
"RTN","MAGT7SS1",20,0)
SPMANC(MSG,DFN,LRDFN,LRSS,LRI,SPMIX) ; FUNCTION - main entry point - create ancillary OBX segments
"RTN","MAGT7SS1",21,0)
 I $G(DFN)'?1.N Q "-910`Invalid DFN ("_$G(DFN)_")"
"RTN","MAGT7SS1",22,0)
 I $G(LRDFN)'?1.N Q "-920`Invalid LRDFN ("_$G(LRDFN)_")"
"RTN","MAGT7SS1",23,0)
 I "^AU^CY^EM^SP^"'[("^"_$G(LRSS)_"^") Q "-930`Invalid LRSS ("_$G(LRSS)_")"
"RTN","MAGT7SS1",24,0)
 I $G(LRI)'?1.N.1"."1.N Q "-940`Invalid LRI ("_$G(LRI)_")"
"RTN","MAGT7SS1",25,0)
 I $G(SPMIX)'?1.N Q "-950`Invalid SPMIX ("_$G(SPMIX)_")"
"RTN","MAGT7SS1",26,0)
 I '$D(^LR(LRDFN,LRSS,LRI,.1,SPMIX)) Q "-955`SPMIX ("_SPMIX_") not found on file"
"RTN","MAGT7SS1",27,0)
 N BLKTYPSTGSTR ; block type/stage string
"RTN","MAGT7SS1",28,0)
 N BLKTYPSTG ; block type/stage
"RTN","MAGT7SS1",29,0)
 N BLKTYPSTGIX ; block type/stage index
"RTN","MAGT7SS1",30,0)
 N OUT
"RTN","MAGT7SS1",31,0)
 S OUT=0 ; assume nothing to report
"RTN","MAGT7SS1",32,0)
 D  ; make OBX segments, bail if a problem arises
"RTN","MAGT7SS1",33,0)
 . D  Q:OUT  ;subspecialty
"RTN","MAGT7SS1",34,0)
 . . N SUBSPEC ; subspecialty name
"RTN","MAGT7SS1",35,0)
 . . S SUBSPEC=$S(LRSS="AU":"AUTOPSY",LRSS="CY":"CYTOPATHOLOGY",LRSS="EM":"ELECTRON MICROSCOPY",LRSS="SP":"SURGICAL PATHOLOGY",1:"")
"RTN","MAGT7SS1",36,0)
 . . S OUT=$$OBXSEG^MAGT7SX(.MSG,"SUBSPECIALTY","ST",SUBSPEC)
"RTN","MAGT7SS1",37,0)
 . . Q
"RTN","MAGT7SS1",38,0)
 . D  Q:OUT  ; block type/stage
"RTN","MAGT7SS1",39,0)
 . . I LRSS="CY" D  Q  ; blocks/stages for cytopathology
"RTN","MAGT7SS1",40,0)
 . . . S BLKTYPSTGSTR="SMEAR PREP^CELL BLOCK^MEMBRANE FILTER^PREPARED SLIDES^CYTOSPIN"
"RTN","MAGT7SS1",41,0)
 . . . F BLKTYPSTG=1:1:$L(BLKTYPSTGSTR,"^") D:$D(^LR(LRDFN,LRSS,LRI,.1,SPMIX,BLKTYPSTG))  Q:OUT
"RTN","MAGT7SS1",42,0)
 . . . . S OUT=$$OBXSEG^MAGT7SX(.MSG,"BLOCK TYPE/STAGE","ST",$P(BLKTYPSTGSTR,"^",BLKTYPSTG)) Q:OUT
"RTN","MAGT7SS1",43,0)
 . . . . ;S OUT=$$BLOCKSEGS^MAGT7SS2(MSG,DFN,LRDFN,LRSS,LRI,SPMIX,BLKTYPSTGIX)
"RTN","MAGT7SS1",44,0)
 . . . . Q
"RTN","MAGT7SS1",45,0)
 . . . Q
"RTN","MAGT7SS1",46,0)
 . . I LRSS="SP" D  Q  ; blocks/stages for surgical pathology
"RTN","MAGT7SS1",47,0)
 . . . S BLKTYPSTGSTR="PARAFFIN BLOCK^PLASTIC BLOCK^FROZEN TISSUE"
"RTN","MAGT7SS1",48,0)
 . . . F BLKTYPSTG=1:1:$L(BLKTYPSTGSTR,"^") D:$D(^LR(LRDFN,LRSS,LRI,.1,SPMIX,BLKTYPSTG))  Q:OUT
"RTN","MAGT7SS1",49,0)
 . . . . S OUT=$$OBXSEG^MAGT7SX(.MSG,"BLOCK TYPE/STAGE","ST",$P(BLKTYPSTGSTR,"^",BLKTYPSTG)) Q:OUT
"RTN","MAGT7SS1",50,0)
 . . . . S BLKTYPSTGIX=0 ; block type/stage index
"RTN","MAGT7SS1",51,0)
 . . . . F  S BLKTYPSTGIX=$O(^LR(LRDFN,LRSS,LRI,.1,SPMIX,BLKTYPSTG,BLKTYPSTGIX)) Q:'BLKTYPSTGIX  D  Q:OUT
"RTN","MAGT7SS1",52,0)
 . . . . . S OUT=$$BLOKSEGS^MAGT7SS2(.MSG,DFN,LRDFN,LRSS,LRI,SPMIX,BLKTYPSTG,BLKTYPSTGIX)
"RTN","MAGT7SS1",53,0)
 . . . . . Q
"RTN","MAGT7SS1",54,0)
 . . . . Q
"RTN","MAGT7SS1",55,0)
 . . . Q
"RTN","MAGT7SS1",56,0)
 . . Q
"RTN","MAGT7SS1",57,0)
 . Q
"RTN","MAGT7SS1",58,0)
 Q OUT
"RTN","MAGT7SS2")
0^24^B35909249
"RTN","MAGT7SS2",1,0)
MAGT7SS2 ;WOIFO/MLH - telepathology - create HL7 message to DPS - segment build - set up OBXs for each SPM - block level segments ; 11/26/2012 5:07 PM
"RTN","MAGT7SS2",2,0)
 ;;3.0;IMAGING;**138**;Mar 19, 2002;Build 4;Nov 21, 2012
"RTN","MAGT7SS2",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGT7SS2",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGT7SS2",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGT7SS2",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGT7SS2",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGT7SS2",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGT7SS2",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGT7SS2",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGT7SS2",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGT7SS2",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGT7SS2",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGT7SS2",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGT7SS2",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGT7SS2",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGT7SS2",17,0)
 ;;
"RTN","MAGT7SS2",18,0)
 Q
"RTN","MAGT7SS2",19,0)
 ;
"RTN","MAGT7SS2",20,0)
BLOKSEGS(MSG,DFN,LRDFN,LRSS,LRI,SPMIX,BLKTYPSTG,BLKTYPSTGIX) ; FUNCTION - main entry point - create ancillary OBX segments
"RTN","MAGT7SS2",21,0)
 I $G(DFN)'?1.N Q "-1110`Invalid DFN ("_$G(DFN)_")"
"RTN","MAGT7SS2",22,0)
 I $G(LRDFN)'?1.N Q "-1120`Invalid LRDFN ("_$G(LRDFN)_")"
"RTN","MAGT7SS2",23,0)
 I "^AU^CY^EM^SP^"'[("^"_$G(LRSS)_"^") Q "-1130`Invalid LRSS ("_$G(LRSS)_")"
"RTN","MAGT7SS2",24,0)
 I $G(LRI)'?1.N.1"."1.N Q "-1140`Invalid LRI ("_$G(LRI)_")"
"RTN","MAGT7SS2",25,0)
 I $G(SPMIX)'?1.N Q "-1150`Invalid SPMIX ("_$G(SPMIX)_")"
"RTN","MAGT7SS2",26,0)
 I '$D(^LR(LRDFN,LRSS,LRI,.1,SPMIX)) Q "-1155`SPMIX ("_SPMIX_") not found on file"
"RTN","MAGT7SS2",27,0)
 I $G(BLKTYPSTG)'?1.N Q "-1156`Invalid BLKTYPSTG ("_$G(BLKTYPSTG)_")"
"RTN","MAGT7SS2",28,0)
 I '$D(^LR(LRDFN,LRSS,LRI,.1,SPMIX,BLKTYPSTG)) Q "-1158`BLKTYPSTG ("_BLKTYPSTG_") not found on file"
"RTN","MAGT7SS2",29,0)
 I $G(BLKTYPSTGIX)'?1.N Q "-1160`Invalid BLKTYPSTGIX ("_$G(BLKTYPSTGIX)_")"
"RTN","MAGT7SS2",30,0)
 I '$D(^LR(LRDFN,LRSS,LRI,.1,SPMIX,BLKTYPSTG,BLKTYPSTGIX)) Q "-1165`BLKTYPSTGIX ("_$G(BLKTYPSTGIX)_") not found on file"
"RTN","MAGT7SS2",31,0)
 N BLKTYPSTGINSTDTA ; block type/stage instance data
"RTN","MAGT7SS2",32,0)
 N DTTMBLKPREP ; date/time block prepared
"RTN","MAGT7SS2",33,0)
 N STAPROINSTIX ; stain/procedure instance index
"RTN","MAGT7SS2",34,0)
 N STAPROINSTDTA ; stain/procedure instance data
"RTN","MAGT7SS2",35,0)
 N STAPROIX ; stain/procedure index on ^LAB(60)
"RTN","MAGT7SS2",36,0)
 N STAPRODESC ; stain/procedure description
"RTN","MAGT7SS2",37,0)
 N NUMSLISECT ; slides/sections prepared
"RTN","MAGT7SS2",38,0)
 N NUMCTLSLI ; control slides
"RTN","MAGT7SS2",39,0)
 N DTTMSTNPREP ; date/time slides stained or sections prepared
"RTN","MAGT7SS2",40,0)
 N DTTMEXAM ; date/time slides/sections examined
"RTN","MAGT7SS2",41,0)
 N SLISECTKT ; slides/sections counted
"RTN","MAGT7SS2",42,0)
 N NUSECTLBLKT ; new sections / labels to print
"RTN","MAGT7SS2",43,0)
 N SLSCRSECTEXKT ; slides screened / sections examined
"RTN","MAGT7SS2",44,0)
 N NCTRLSLSECTKT ; non-control slides counted
"RTN","MAGT7SS2",45,0)
 N PRMADEKT ; prints made
"RTN","MAGT7SS2",46,0)
 N DTTMPRMADE ; date/time prints made
"RTN","MAGT7SS2",47,0)
 N PRINTKT ; prints counted
"RTN","MAGT7SS2",48,0)
 N EXAMSECKT ; examined sections counted
"RTN","MAGT7SS2",49,0)
 S OUT=0 ; assume nothing to report
"RTN","MAGT7SS2",50,0)
 D  ; make OBX segments, bail if a problem arises
"RTN","MAGT7SS2",51,0)
 . D  Q:OUT  ; block type/stage instance ID
"RTN","MAGT7SS2",52,0)
 . . S BLKTYPSTGINSTDTA=$G(^LR(LRDFN,LRSS,LRI,.1,SPMIX,BLKTYPSTG,BLKTYPSTGIX,0))
"RTN","MAGT7SS2",53,0)
 . . S DTTMBLKPREP=$P(BLKTYPSTGINSTDTA,"^",2)
"RTN","MAGT7SS2",54,0)
 . . S OUT=$$OBXSEG^MAGT7SX(.MSG,"BLOCK INDEX","ST",$P(BLKTYPSTGINSTDTA,"^",1),DTTMBLKPREP)
"RTN","MAGT7SS2",55,0)
 . . Q
"RTN","MAGT7SS2",56,0)
 . S SLISECWORD=$S(LRSS'="EM":"SLIDE",1:"SECTION")
"RTN","MAGT7SS2",57,0)
 . S STAPROINSTIX=0
"RTN","MAGT7SS2",58,0)
 . F  S STAPROINSTIX=$O(^LR(LRDFN,LRSS,LRI,.1,SPMIX,BLKTYPSTG,BLKTYPSTGIX,1,STAPROINSTIX)) Q:'STAPROINSTIX  D  Q:OUT
"RTN","MAGT7SS2",59,0)
 . . S STAPROINSTDTA=$G(^LR(LRDFN,LRSS,LRI,.1,SPMIX,BLKTYPSTG,BLKTYPSTGIX,1,STAPROINSTIX,0))
"RTN","MAGT7SS2",60,0)
 . . S DTTMSTNPREP=$P(STAPROINSTDTA,"^",4) ; date/time slides stained or sections prepared
"RTN","MAGT7SS2",61,0)
 . . S DTTMEXAM=$P(STAPROINSTDTA,"^",5) ; date/time slides/sections examined
"RTN","MAGT7SS2",62,0)
 . . S DTTMPRMADE=$P(STAPROINSTDTA,"^",11) ; date/time prints made
"RTN","MAGT7SS2",63,0)
 . . D  Q:OUT  ; procedure index
"RTN","MAGT7SS2",64,0)
 . . . S OUT=$$OBXSEG^MAGT7SX(.MSG,"PROCEDURE INDEX","ST",$P(STAPROINSTDTA,"^",1),DTTMSTNPREP)
"RTN","MAGT7SS2",65,0)
 . . . Q
"RTN","MAGT7SS2",66,0)
 . . D  Q:OUT  ; procedure description
"RTN","MAGT7SS2",67,0)
 . . . S STAPROIX=$P(STAPROINSTDTA,"^",1)
"RTN","MAGT7SS2",68,0)
 . . . D:STAPROIX
"RTN","MAGT7SS2",69,0)
 . . . . S STAPRODESC=$P($G(^LAB(60,STAPROIX,0)),"^",1)
"RTN","MAGT7SS2",70,0)
 . . . . S OUT=$$OBXSEG^MAGT7SX(.MSG,"PROCEDURE DESCRIPTION","ST",STAPRODESC,DTTMSTNPREP)
"RTN","MAGT7SS2",71,0)
 . . . . Q
"RTN","MAGT7SS2",72,0)
 . . . Q
"RTN","MAGT7SS2",73,0)
 . . D  Q:OUT  ; slides/sections prepared
"RTN","MAGT7SS2",74,0)
 . . . S NUMSLISECT=$P(STAPROINSTDTA,"^",2)
"RTN","MAGT7SS2",75,0)
 . . . S:NUMSLISECT OUT=$$OBXSEG^MAGT7SX(.MSG,SLISECWORD_"S PREPARED","NM",NUMSLISECT,DTTMSTNPREP)
"RTN","MAGT7SS2",76,0)
 . . . Q
"RTN","MAGT7SS2",77,0)
 . . D  Q:OUT  ; control slides
"RTN","MAGT7SS2",78,0)
 . . . S NUMCTLSLI=$P(STAPROINSTDTA,"^",3)
"RTN","MAGT7SS2",79,0)
 . . . S:NUMCTLSLI OUT=$$OBXSEG^MAGT7SX(.MSG,"CONTROL "_SLISECWORD_"S","NM",NUMCTLSLI,DTTMSTNPREP)
"RTN","MAGT7SS2",80,0)
 . . . Q
"RTN","MAGT7SS2",81,0)
 . . D  Q:OUT  ; slides/sections counted
"RTN","MAGT7SS2",82,0)
 . . . S SLISECTKT=$P(STAPROINSTDTA,"^",6)
"RTN","MAGT7SS2",83,0)
 . . . S:SLISECTKT OUT=$$OBXSEG^MAGT7SX(.MSG,SLISECWORD_"S COUNTED","NM",SLISECTKT,DTTMEXAM)
"RTN","MAGT7SS2",84,0)
 . . . Q
"RTN","MAGT7SS2",85,0)
 . . D  Q:OUT  ; new sections / labels to print
"RTN","MAGT7SS2",86,0)
 . . . S NUSECTLBLKT=$P(STAPROINSTDTA,"^",7)
"RTN","MAGT7SS2",87,0)
 . . . S:NUSECTLBLKT OUT=$$OBXSEG^MAGT7SX(.MSG,$S(LRSS'="EM":"LABELS TO PRINT",1:"NEW SECTIONS"),"NM",NUSECTLBLKT,DTTMSTNPREP)
"RTN","MAGT7SS2",88,0)
 . . . Q
"RTN","MAGT7SS2",89,0)
 . . D:LRSS'="SP"  Q:OUT  ; slides screened / sections examined
"RTN","MAGT7SS2",90,0)
 . . . S SLSCRSECTEXKT=$P(STAPROINSTDTA,"^",8)
"RTN","MAGT7SS2",91,0)
 . . . S:SLSCRSECTEXKT OUT=$$OBXSEG^MAGT7SX(.MSG,SLISECWORD_"S "_$S(LRSS="CY":" SCREENED",1:" EXAMINED"),"NM",SLSCRSETEXKT,DTTMEXAM)
"RTN","MAGT7SS2",92,0)
 . . . Q
"RTN","MAGT7SS2",93,0)
 . . D  Q:OUT  ; non-control slides counted
"RTN","MAGT7SS2",94,0)
 . . . S NCTRLSLSECTKT=$P(STAPROINSTDTA,"^",9)
"RTN","MAGT7SS2",95,0)
 . . . S:NCTRLSLSECTKT OUT=$$OBXSEG^MAGT7SX(.MSG,"NON-CONTROL SLIDES COUNTED","NM",NCTRLSLSECTKT,DTTMEXAM)
"RTN","MAGT7SS2",96,0)
 . . . Q
"RTN","MAGT7SS2",97,0)
 . . D:LRSS="EM"  Q:OUT  ; fields for electron microscopy only
"RTN","MAGT7SS2",98,0)
 . . . D  Q:OUT  ; prints made
"RTN","MAGT7SS2",99,0)
 . . . . S PRMADEKT=$P(STAPROINSTDTA,"^",10)
"RTN","MAGT7SS2",100,0)
 . . . . S:PRMADEKT OUT=$$OBXSEG^MAGT7SX(.MSG,"PRINTS MADE","NM",PRMADEKT,DTTMPRMADE)
"RTN","MAGT7SS2",101,0)
 . . . . Q
"RTN","MAGT7SS2",102,0)
 . . . D  Q:OUT  ; prints counted
"RTN","MAGT7SS2",103,0)
 . . . . S PRINTKT=$P(STAPROINSTDTA,"^",12)
"RTN","MAGT7SS2",104,0)
 . . . . S:PRINTKT OUT=$$OBXSEG^MAGT7SX(.MSG,"PRINTS COUNTED","NM",PRINTKT,DTTMPRMADE)
"RTN","MAGT7SS2",105,0)
 . . . . Q
"RTN","MAGT7SS2",106,0)
 . . . D  Q:OUT  ; examined sections counted
"RTN","MAGT7SS2",107,0)
 . . . . S EXAMSECKT=$P(STAPROINSTDTA,"^",13)
"RTN","MAGT7SS2",108,0)
 . . . . S:EXAMSECKT OUT=$$OBXSEG^MAGT7SX(.MSG,"EXAMINED SECTIONS COUNTED","NM",EXAMSECKT,DTTMPRMADE)
"RTN","MAGT7SS2",109,0)
 . . . . Q
"RTN","MAGT7SS2",110,0)
 . . . Q
"RTN","MAGT7SS2",111,0)
 . . Q
"RTN","MAGT7SS2",112,0)
 . Q
"RTN","MAGT7SS2",113,0)
 Q OUT
"RTN","MAGTP001")
0^7^B124242809
"RTN","MAGTP001",1,0)
MAGTP001 ;WOIFO/FG,JSL - TELEPATHOLOGY RPCS ; 06/10/2012 2:50pm
"RTN","MAGTP001",2,0)
 ;;3.0;IMAGING;**138**;Mar 19, 2002;Build 4;Apr 03, 2013
"RTN","MAGTP001",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGTP001",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP001",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGTP001",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGTP001",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGTP001",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGTP001",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGTP001",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGTP001",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGTP001",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGTP001",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGTP001",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGTP001",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGTP001",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP001",17,0)
 ;;
"RTN","MAGTP001",18,0)
 Q  ;
"RTN","MAGTP001",19,0)
 ;
"RTN","MAGTP001",20,0)
 ;***** GET LAB DATA INFO FOR SELECTED FIELDS LISTED IN A TEMPLATE
"RTN","MAGTP001",21,0)
 ; RPC: MAGTP GET TEMPLATE DATA
"RTN","MAGTP001",22,0)
 ;
"RTN","MAGTP001",23,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP001",24,0)
 ;               are returned to.
"RTN","MAGTP001",25,0)
 ;
"RTN","MAGTP001",26,0)
 ; .ENT          Input array. The field numbers must be
"RTN","MAGTP001",27,0)
 ;               listed one on each line.
"RTN","MAGTP001",28,0)
 ;
"RTN","MAGTP001",29,0)
 ; LRSS          AP Section
"RTN","MAGTP001",30,0)
 ;
"RTN","MAGTP001",31,0)
 ; YEAR          Accession Year (Two figures)
"RTN","MAGTP001",32,0)
 ;
"RTN","MAGTP001",33,0)
 ; LRAN          Accession Number
"RTN","MAGTP001",34,0)
 ;
"RTN","MAGTP001",35,0)
 ; Return Values
"RTN","MAGTP001",36,0)
 ; =============
"RTN","MAGTP001",37,0)
 ;
"RTN","MAGTP001",38,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP001",39,0)
 ; occurred during execution of the procedure:
"RTN","MAGTP001",40,0)
 ;
"RTN","MAGTP001",41,0)
 ; 0^0^ ERROR explanation: When no other lines of output are generated
"RTN","MAGTP001",42,0)
 ;
"RTN","MAGTP001",43,0)
 ; 0^ Total Number of Lines: if an error occurred while
"RTN","MAGTP001",44,0)
 ; extracting one of the fields
"RTN","MAGTP001",45,0)
 ;
"RTN","MAGTP001",46,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP001",47,0)
 ;
"RTN","MAGTP001",48,0)
 ; MAGRY(0)     Description
"RTN","MAGTP001",49,0)
 ;                ^01: 1
"RTN","MAGTP001",50,0)
 ;                ^02: Total Number of Lines
"RTN","MAGTP001",51,0)
 ;
"RTN","MAGTP001",52,0)
 ; MAGRY(i)     Description
"RTN","MAGTP001",53,0)
 ;                ^01: Field Number
"RTN","MAGTP001",54,0)
 ;                ^02: Field Label
"RTN","MAGTP001",55,0)
 ;                ^03: Data [entries separated by pipes (|)]
"RTN","MAGTP001",56,0)
 ;
"RTN","MAGTP001",57,0)
GETTD(MAGRY,ENT,LRSS,YEAR,LRAN) ; RPC [MAGTP GET TEMPLATE DATA]
"RTN","MAGTP001",58,0)
 K MAGRY
"RTN","MAGTP001",59,0)
 I $D(ENT)<10 S MAGRY(0)="0^0^No Input" Q 
"RTN","MAGTP001",60,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP001",61,0)
 I $G(LRSS)=""!($G(YEAR)="")!($G(LRAN)="") D  Q
"RTN","MAGTP001",62,0)
 . S MAGRY(0)="0^0^One or more input parameters are missing"
"RTN","MAGTP001",63,0)
 N INPUT
"RTN","MAGTP001",64,0)
 S INPUT=$$CONTEXT^MAGTP006(.MAGRY,LRSS,YEAR,LRAN) Q:'MAGRY(0)
"RTN","MAGTP001",65,0)
 N MAGOUT,MAGERR
"RTN","MAGTP001",66,0)
 N LRSF,LRDFN,IEN,CT,LINE,NUM
"RTN","MAGTP001",67,0)
 N FIELD,LABEL,SUBF,IE,INDX,NIEN,N,I,DATA
"RTN","MAGTP001",68,0)
 S LRSF=$P(INPUT,","),LRDFN=$P(INPUT,",",3)
"RTN","MAGTP001",69,0)
 S IEN=$P(INPUT,",",2,4)
"RTN","MAGTP001",70,0)
 D GETS^DIQ(LRSF,IEN,"**","IE","MAGOUT","MAGERR")
"RTN","MAGTP001",71,0)
 I $D(MAGERR) S MAGRY(0)="0^0^Access Error: "_MAGERR("DIERR",1,"TEXT",1) Q
"RTN","MAGTP001",72,0)
 S CT=0,LINE=""
"RTN","MAGTP001",73,0)
 F  S LINE=$O(ENT(LINE)) Q:LINE=""!('MAGRY(0))  D
"RTN","MAGTP001",74,0)
 . S NUM=ENT(LINE)
"RTN","MAGTP001",75,0)
 . S CT=CT+1
"RTN","MAGTP001",76,0)
 . K FIELD
"RTN","MAGTP001",77,0)
 . D FIELD^DID(LRSF,NUM,"","MULTIPLE-VALUED;TYPE;LABEL;SPECIFIER","FIELD")
"RTN","MAGTP001",78,0)
 . I '$D(FIELD) D  Q
"RTN","MAGTP001",79,0)
 . . K MAGRY
"RTN","MAGTP001",80,0)
 . . S MAGRY(0)="0^0^"_NUM_": Invalid Field Number"
"RTN","MAGTP001",81,0)
 . . Q
"RTN","MAGTP001",82,0)
 . S LABEL=FIELD("LABEL")
"RTN","MAGTP001",83,0)
 . S SUBF=+FIELD("SPECIFIER")
"RTN","MAGTP001",84,0)
 . S MAGRY(CT)=NUM_U_LABEL_U
"RTN","MAGTP001",85,0)
 . S IE=$S(FIELD("TYPE")="DATE/TIME":"I",1:"E")  ; "I" for dates only
"RTN","MAGTP001",86,0)
 . I SUBF>0,$D(MAGOUT(SUBF)) D  Q
"RTN","MAGTP001",87,0)
 . . K INDX S NIEN=""
"RTN","MAGTP001",88,0)
 . . F  S NIEN=$O(MAGOUT(SUBF,NIEN)) Q:NIEN=""  D
"RTN","MAGTP001",89,0)
 . . . S INDX($P(NIEN,","))=""
"RTN","MAGTP001",90,0)
 . . S N="" F  S N=$O(INDX(N)) Q:N=""  D       ; NIEN may be ordered incorrectly
"RTN","MAGTP001",91,0)
 . . . S NIEN=N_","_IEN
"RTN","MAGTP001",92,0)
 . . . S MAGRY(CT)=MAGRY(CT)_$$FRMTVAL^MAGTP006(MAGOUT(SUBF,NIEN,.01,IE),IE)_"|"
"RTN","MAGTP001",93,0)
 . . . Q
"RTN","MAGTP001",94,0)
 . . Q
"RTN","MAGTP001",95,0)
 . I $G(FIELD("MULTIPLE-VALUED"))=1 D
"RTN","MAGTP001",96,0)
 . . S I="" F  S I=$O(MAGOUT(LRSF,IEN,NUM,I)) Q:+I=0  D
"RTN","MAGTP001",97,0)
 . . . S DATA=MAGOUT(LRSF,IEN,NUM,I)
"RTN","MAGTP001",98,0)
 . . . S MAGRY(CT)=MAGRY(CT)_$$FRMTVAL^MAGTP006(DATA,IE)_"|"
"RTN","MAGTP001",99,0)
 . . . Q
"RTN","MAGTP001",100,0)
 . . Q
"RTN","MAGTP001",101,0)
 . E  S MAGRY(CT)=MAGRY(CT)_$$FRMTVAL^MAGTP006(MAGOUT(LRSF,IEN,NUM,IE),IE)_"|"
"RTN","MAGTP001",102,0)
 . Q
"RTN","MAGTP001",103,0)
 S:+MAGRY(0)>0 MAGRY(0)=1_U_CT                 ; If no errors update node 0
"RTN","MAGTP001",104,0)
 Q  ;
"RTN","MAGTP001",105,0)
 ;
"RTN","MAGTP001",106,0)
 ;*****  ADD/REPLACE ENTRIES FOR ONE OR MORE FIELDS
"RTN","MAGTP001",107,0)
 ; RPC: MAGTP PUT REPORT FIELD
"RTN","MAGTP001",108,0)
 ;
"RTN","MAGTP001",109,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP001",110,0)
 ;               are returned to.
"RTN","MAGTP001",111,0)
 ;
"RTN","MAGTP001",112,0)
 ; .ENT          Input array. The field numbers and entry data
"RTN","MAGTP001",113,0)
 ;               must be listed one on each line as:
"RTN","MAGTP001",114,0)
 ;
"RTN","MAGTP001",115,0)
 ;               ENT(n)   = Field Number ^ N: Total Number of lines of data
"RTN","MAGTP001",116,0)
 ;               ENT(n+1) = Field Number ^ DATA (1)
"RTN","MAGTP001",117,0)
 ;               ...
"RTN","MAGTP001",118,0)
 ;               ENT(n+N) = Field Number ^ DATA (N)
"RTN","MAGTP001",119,0)
 ;
"RTN","MAGTP001",120,0)
 ; LRSS          AP Section
"RTN","MAGTP001",121,0)
 ;
"RTN","MAGTP001",122,0)
 ; YEAR          Accession Year (Two figures)
"RTN","MAGTP001",123,0)
 ;
"RTN","MAGTP001",124,0)
 ; LRAN          Accession Number
"RTN","MAGTP001",125,0)
 ;
"RTN","MAGTP001",126,0)
 ; Return Values
"RTN","MAGTP001",127,0)
 ; =============
"RTN","MAGTP001",128,0)
 ;
"RTN","MAGTP001",129,0)
 ; If MAGRY(0) 1st '^'-piece is < 0, then an error
"RTN","MAGTP001",130,0)
 ; occurred during execution of the procedure: [code]^^[error explanation]
"RTN","MAGTP001",131,0)
 ;
"RTN","MAGTP001",132,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP001",133,0)
 ;
"RTN","MAGTP001",134,0)
 ; MAGRY(0)     Description
"RTN","MAGTP001",135,0)
 ;                ^01: 0 if field update only 
"RTN","MAGTP001",136,0)
 ;                     1 if Field #.11 updated with notification to providers
"RTN","MAGTP001",137,0)
 ;                ^02: [empty]
"RTN","MAGTP001",138,0)
 ;                ^03: In the case of entry of Field # .11
"RTN","MAGTP001",139,0)
 ;                     (Release Report Date), the entry will
"RTN","MAGTP001",140,0)
 ;                     read "Release alert will be sent to: "
"RTN","MAGTP001",141,0)
 ;                     followed by the name(s) of the
"RTN","MAGTP001",142,0)
 ;                     providers to which the alert was sent
"RTN","MAGTP001",143,0)
 ;              -6^^Study context not found
"RTN","MAGTP001",144,0)
 ;              -5^^No Input
"RTN","MAGTP001",145,0)
 ;              -4^^One or more input parameters are missing
"RTN","MAGTP001",146,0)
 ;              -3^^[fldnum]: Invalid Field Number
"RTN","MAGTP001",147,0)
 ;              -2^^[fldnam] - Updating Error: [Fileman error description]
"RTN","MAGTP001",148,0)
 ;              -1^^ERROR [MUMPS error]
"RTN","MAGTP001",149,0)
 ;               0^^Data entries updated
"RTN","MAGTP001",150,0)
 ;               1^^[alert message text if report was released]
"RTN","MAGTP001",151,0)
 ;
"RTN","MAGTP001",152,0)
PUTFIELD(MAGRY,ENT,LRSS,YEAR,LRAN) ; RPC [MAGTP PUT REPORT FIELD]
"RTN","MAGTP001",153,0)
 K MAGRY
"RTN","MAGTP001",154,0)
 I $D(ENT)<10 S MAGRY(0)="-5^0^No Input" Q      ; Input: NUM^Total Number of lines, then NUM^DATA1, etc.
"RTN","MAGTP001",155,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGUTERR"
"RTN","MAGTP001",156,0)
 I $G(LRSS)=""!($G(YEAR)="")!($G(LRAN)="") D  Q
"RTN","MAGTP001",157,0)
 . S MAGRY(0)="-4^0^One or more input parameters are missing"
"RTN","MAGTP001",158,0)
 . Q
"RTN","MAGTP001",159,0)
 N INPUT
"RTN","MAGTP001",160,0)
 S INPUT=$$CONTEXT^MAGTP006(.MAGRY,LRSS,YEAR,LRAN)
"RTN","MAGTP001",161,0)
 I '$G(MAGRY(0)) S MAGRY(0)="-6^0^Study context not found" Q 
"RTN","MAGTP001",162,0)
 N MAGERR,LRFDA
"RTN","MAGTP001",163,0)
 N LRSF,LRDFN,LRI,IEN,BDFLG,LINE,NUM,I,NVAL
"RTN","MAGTP001",164,0)
 N VAL,FIELD,LRMSG,SUBF,FLOC,SFROOT,DA,DIK,Y,LRAC,STAT
"RTN","MAGTP001",165,0)
 S LRSF=$P(INPUT,","),LRI=$P(INPUT,",",2)
"RTN","MAGTP001",166,0)
 S LRDFN=$P(INPUT,",",3),IEN=$P(INPUT,",",2,4)
"RTN","MAGTP001",167,0)
 S BDFLG=1                                     ; If BDFLG=0 there's a bad entry
"RTN","MAGTP001",168,0)
 S LINE="" F  S LINE=$O(ENT(LINE)) Q:LINE=""!('BDFLG)  D
"RTN","MAGTP001",169,0)
 . K VAL,FIELD,LRFDA,MAGERR,DIK,Y
"RTN","MAGTP001",170,0)
 . S NUM=+$P(ENT(LINE),U)                      ; Field number
"RTN","MAGTP001",171,0)
 . D FIELD^DID(LRSF,NUM,"","MULTIPLE-VALUED;TYPE;LABEL;SPECIFIER;GLOBAL SUBSCRIPT LOCATION","FIELD")
"RTN","MAGTP001",172,0)
 . I '$D(FIELD) D  Q
"RTN","MAGTP001",173,0)
 . . S MAGRY(0)="-3^0^"_NUM_": Invalid Field Number"
"RTN","MAGTP001",174,0)
 . . S BDFLG=0
"RTN","MAGTP001",175,0)
 . . Q
"RTN","MAGTP001",176,0)
 . S NVAL=$P(ENT(LINE),U,2)                    ; Number of entries in multiple field
"RTN","MAGTP001",177,0)
 . F I=1:1:NVAL S VAL(I)=$P(ENT(LINE+I),U,2)   ; Extract values from NVAL lines of ENT
"RTN","MAGTP001",178,0)
 . ; Word-processing fields
"RTN","MAGTP001",179,0)
 . I $G(FIELD("TYPE"))="WORD-PROCESSING" D
"RTN","MAGTP001",180,0)
 . . M LRFDA=VAL                               ; Whole text killed for WP
"RTN","MAGTP001",181,0)
 . . I '$D(LRFDA) S LRFDA(0)=1,LRFDA(1)=""     ; User deleted all 
"RTN","MAGTP001",182,0)
 . . D WP^DIE(LRSF,IEN,NUM,"K","LRFDA","MAGERR")
"RTN","MAGTP001",183,0)
 . . Q
"RTN","MAGTP001",184,0)
 . ; Single valued fields
"RTN","MAGTP001",185,0)
 . I '$G(FIELD("MULTIPLE-VALUED")) D
"RTN","MAGTP001",186,0)
 . . Q:$G(VAL(1))=""
"RTN","MAGTP001",187,0)
 . . S LRFDA(LRSF,IEN,NUM)=VAL(1)              ; Single valued always replaced by first entry
"RTN","MAGTP001",188,0)
 . . D UPDATE^DIE("E","LRFDA","","MAGERR")
"RTN","MAGTP001",189,0)
 . . Q
"RTN","MAGTP001",190,0)
 . ; Multiple valued fields - non WP
"RTN","MAGTP001",191,0)
 . I $G(FIELD("MULTIPLE-VALUED")),($G(FIELD("TYPE"))'="WORD-PROCESSING") D
"RTN","MAGTP001",192,0)
 . . S SUBF=+FIELD("SPECIFIER")
"RTN","MAGTP001",193,0)
 . . S FLOC=$P(FIELD("GLOBAL SUBSCRIPT LOCATION"),";")  ; Set LR subscript
"RTN","MAGTP001",194,0)
 . . S SFROOT=$NA(^LR(LRDFN,LRSS,LRI,FLOC))
"RTN","MAGTP001",195,0)
 . . S DIK=$E(SFROOT,1,$L(SFROOT)-1)_","
"RTN","MAGTP001",196,0)
 . . D                                         ; Delete everything first for multiple fields
"RTN","MAGTP001",197,0)
 . . . N DA
"RTN","MAGTP001",198,0)
 . . . S DA(1)=LRI,DA(2)=LRDFN
"RTN","MAGTP001",199,0)
 . . . S DA=0 F  S DA=$O(@SFROOT@(DA)) Q:'DA  D ^DIK
"RTN","MAGTP001",200,0)
 . . . Q
"RTN","MAGTP001",201,0)
 . . S:$G(Y) @(DIK_"0)")=Y                     ; Reinstate 0 subnode if necessary
"RTN","MAGTP001",202,0)
 . . F I=1:1:NVAL D
"RTN","MAGTP001",203,0)
 . . . S:$G(VAL(I))]"" LRFDA(SUBF,"+"_I_","_IEN,.01)=VAL(I)
"RTN","MAGTP001",204,0)
 . . . Q
"RTN","MAGTP001",205,0)
 . . D:$D(LRFDA) UPDATE^DIE("E","LRFDA","","MAGERR")
"RTN","MAGTP001",206,0)
 . . Q
"RTN","MAGTP001",207,0)
 . ; Update LINE number to next field entry
"RTN","MAGTP001",208,0)
 . S LINE=LINE+NVAL
"RTN","MAGTP001",209,0)
 . ; Error handling
"RTN","MAGTP001",210,0)
 . I $D(MAGERR) D  Q
"RTN","MAGTP001",211,0)
 . . S MAGRY(0)="-2^0^"_FIELD("LABEL")_" - Updating Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP001",212,0)
 . . S BDFLG=0
"RTN","MAGTP001",213,0)
 . . Q
"RTN","MAGTP001",214,0)
 . ; If released:
"RTN","MAGTP001",215,0)
 . ; 1) Cancel the corresponding reservation on the case
"RTN","MAGTP001",216,0)
 . ; 2) Send alert to ordering provider/PCP
"RTN","MAGTP001",217,0)
 . ; 3) For CY or SP set default CPT codes
"RTN","MAGTP001",218,0)
 . I (NUM=.11),(VAL(1)]"") D  S:$P(MAGRY(0),U)'<0 BDFLG=2
"RTN","MAGTP001",219,0)
 . . D LOCKR^MAGTP003(.MAGRY,0,LRSS,YEAR,LRAN) Q:MAGRY(0)<0
"RTN","MAGTP001",220,0)
 . . D SNDALRT^MAGTP006(.LRMSG,LRDFN,LRSS,LRI,LRSF)
"RTN","MAGTP001",221,0)
 . . D:("CYSP"[LRSS) VERADCPT^MAGTP009(.MAGRY,LRSS,YEAR,LRAN,LRI,LRDFN)
"RTN","MAGTP001",222,0)
 . . ; MOD FOR I873 CT/3/21/2015
"RTN","MAGTP001",223,0)
 . . I '$G(LRDPF) S LRDPF=$P($G(^LR(LRDFN,0)),"^",2)
"RTN","MAGTP001",224,0)
 . . I '$G(LRAU) S LRAU=0
"RTN","MAGTP001",225,0)
 . . I '$G(LRO(68)) S LRO(68)=LRSS
"RTN","MAGTP001",226,0)
 . . I '$G(LRSS) S LRAA=$O(^LRO(68,"B",LRSS,""))
"RTN","MAGTP001",227,0)
 . . S LRNTIME=$$NOW^XLFDT
"RTN","MAGTP001",228,0)
 . . D TIUPREP^LRAPRES
"RTN","MAGTP001",229,0)
 . . S LRDATA(1)=$P(INPUT,",",2)
"RTN","MAGTP001",230,0)
 . . S LRQUIT=0 D STORE^LRAPRES
"RTN","MAGTP001",231,0)
 . . D EDIT^MAGT7MA ; build HL7 msg, and sets CaseList entry to Read
"RTN","MAGTP001",232,0)
 . . ; END MOD FOR I873
"RTN","MAGTP001",233,0)
 . . Q
"RTN","MAGTP001",234,0)
 . ; If completed generate an interpretation for the case
"RTN","MAGTP001",235,0)
 . I (NUM=.03),(VAL(1)]"") D
"RTN","MAGTP001",236,0)
 . . S LRAC=$$GET1^DIQ(LRSF,IEN,.06)           ; Case Number
"RTN","MAGTP001",237,0)
 . . S STAT=$$STA^XUAF4($G(DUZ(2)))            ; IA #2171  ; Get Station Number
"RTN","MAGTP001",238,0)
 . . D PUTINTRP^MAGTP007(.MAGRY,LRAC,0,STAT)
"RTN","MAGTP001",239,0)
 . . Q
"RTN","MAGTP001",240,0)
 . Q
"RTN","MAGTP001",241,0)
 I $G(BDFLG)=1 S:$P(MAGRY(0),U)'<0 MAGRY(0)="0^0^Data entries updated"  ;No filing error
"RTN","MAGTP001",242,0)
 I $G(BDFLG)=2 S:$P(MAGRY(0),U)'<0 MAGRY(0)="1^0^"_$G(LRMSG)  ;And released
"RTN","MAGTP001",243,0)
 Q  ;
"RTN","MAGTP001",244,0)
 ;
"RTN","MAGTP001",245,0)
OUPDATE ;Process HL7 Order Update messages from an external DPS
"RTN","MAGTP001",246,0)
 ;
"RTN","MAGTP001",247,0)
 N SEG,MAGSEG,J,I
"RTN","MAGTP001",248,0)
 K MAGSEG
"RTN","MAGTP001",249,0)
 ;
"RTN","MAGTP001",250,0)
 I $G(HL("EID")),$G(HL("ETN"))="" D INIT^HLFNC2(HLEID,.HL)
"RTN","MAGTP001",251,0)
 ;
"RTN","MAGTP001",252,0)
 F I=1:1 X HLNEXT Q:HLQUIT'>0  S SEG=HLNODE,SG=$E(HLNODE,1,3) D  
"RTN","MAGTP001",253,0)
 . S MAGSEG(I)=SEG
"RTN","MAGTP001",254,0)
 . S J=0 F  S J=$O(HLNODE(J)) Q:'J  S MAGSEG(I,J)=HLNODE(J)
"RTN","MAGTP001",255,0)
 . Q
"RTN","MAGTP001",256,0)
 ;
"RTN","MAGTP001",257,0)
 S HLFS=$G(HL("FS"))
"RTN","MAGTP001",258,0)
 S HLECH=$G(HL("ECH"))
"RTN","MAGTP001",259,0)
 D PARSE(.MAGSEG)
"RTN","MAGTP001",260,0)
 Q
"RTN","MAGTP001",261,0)
 ;
"RTN","MAGTP001",262,0)
PARSE(MAGSEG) ;HL7 messages data
"RTN","MAGTP001",263,0)
 N HLNODE,ERROR,I,IEN,CASE,MAGERR,MAGFDA,X,Y,SLDCNT
"RTN","MAGTP001",264,0)
 N SLDNO,SLDDTM,SLDURL,SLDZMF,SCANAPP,SLDSTU,VIEWAPP,SLDNOTE
"RTN","MAGTP001",265,0)
 S ERROR=1,IEN=0 S:$G(HLFS)="" HLFS=$G(HL("FS"),"|") K MAGRY
"RTN","MAGTP001",266,0)
 S I="" F  S I=$O(MAGSEG(I)) Q:'I  S HLNODE=$G(MAGSEG(I)) D
"RTN","MAGTP001",267,0)
 . Q:$L(HLNODE)=0
"RTN","MAGTP001",268,0)
 . Q:$P(HLNODE,HLFS)=""
"RTN","MAGTP001",269,0)
 . Q:"^MSH^PID^PV1^OBR^OBX^ORC^ZID^"'[(U_$P(HLNODE,HLFS)_U)
"RTN","MAGTP001",270,0)
 . D @($P(HLNODE,HLFS))
"RTN","MAGTP001",271,0)
 . Q
"RTN","MAGTP001",272,0)
 I 'IEN S MAGRY(0)="0^0^Accession Record Not Found: "_$G(CASE) Q
"RTN","MAGTP001",273,0)
 S SLDCNT=$P($G(^MAG(2005.42,IEN,2,0)),U,4) I SLDCNT>0 D
"RTN","MAGTP001",274,0)
 . S MAGFDA(2005.42,IEN_",",.03)=1      ;SLIDES AVAILABLE
"RTN","MAGTP001",275,0)
 . S MAGFDA(2005.42,IEN_",",.08)=SLDCNT ;NO. of scan images
"RTN","MAGTP001",276,0)
 . D UPDATE^DIE("","MAGFDA","IEN","MAGERR")
"RTN","MAGTP001",277,0)
 . Q 
"RTN","MAGTP001",278,0)
 I $D(MAGERR) S MAGRY(0)="0^0^Updating Error: "_MAGERR("DIERR",1,"TEXT",1) Q
"RTN","MAGTP001",279,0)
 S MAGRY(0)="1^0^SLIDES HL7 Updated"
"RTN","MAGTP001",280,0)
 Q
"RTN","MAGTP001",281,0)
MSH ;
"RTN","MAGTP001",282,0)
 Q
"RTN","MAGTP001",283,0)
PID ;
"RTN","MAGTP001",284,0)
 Q
"RTN","MAGTP001",285,0)
PVI ;
"RTN","MAGTP001",286,0)
 Q
"RTN","MAGTP001",287,0)
OBR ; Pick data off the 'OBR' segment.
"RTN","MAGTP001",288,0)
 S CASE=$P(HLNODE,HLFS,3) Q:'$L(CASE)
"RTN","MAGTP001",289,0)
 S IEN=$O(^MAG(2005.42,"B",CASE,"")) Q:'IEN
"RTN","MAGTP001",290,0)
 S SCANAPP=$P(HLNODE,HLFS,5)
"RTN","MAGTP001",291,0)
 S VIEWAPP=$G(VIEWAPP,"IS")  ;default 'ImageScope' for now
"RTN","MAGTP001",292,0)
 Q
"RTN","MAGTP001",293,0)
ORC ;
"RTN","MAGTP001",294,0)
 Q
"RTN","MAGTP001",295,0)
OBX ;
"RTN","MAGTP001",296,0)
 Q
"RTN","MAGTP001",297,0)
ZID ; Pick data off the 'ZID' segment.
"RTN","MAGTP001",298,0)
 I 'IEN S MAGRY(0)="0^0^Accession Record Not Found: "_$G(CASE) Q
"RTN","MAGTP001",299,0)
 S SLDNO=$P(HLNODE,HLFS,3)   ;slide number .01
"RTN","MAGTP001",300,0)
 ;;S SLDDTM=$P(HLNODE,HLFS,8) ;slide date/time scanned
"RTN","MAGTP001",301,0)
 S SLDSTU=$P(HLNODE,HLFS,4)  ;slide status
"RTN","MAGTP001",302,0)
 S SLDURL=$P(HLNODE,HLFS,5)  ;url
"RTN","MAGTP001",303,0)
 S SLDZMF=$P(HLNODE,HLFS,23) ;zoom factor
"RTN","MAGTP001",304,0)
 ;;S SLDNODE=$P()            ;slide note
"RTN","MAGTP001",305,0)
 N MAGFDA K MAGERR  ;init
"RTN","MAGTP001",306,0)
 ;Add SLIDES multiple
"RTN","MAGTP001",307,0)
 S SLDNXT=$P($G(^MAG(2005.42,IEN,2)),U,3)+1,X=IEN,Y="+"_SLDNXT_","_X_"," 
"RTN","MAGTP001",308,0)
 I $L($G(SLDNO)) S MAGFDA(2005.422,Y,.01)=SLDNO
"RTN","MAGTP001",309,0)
 I $L($G(SLDDTM)) S MAGFDA(2005.422,Y,2)=SLDDTM
"RTN","MAGTP001",310,0)
 I $L($G(SLDURL)) S MAGFDA(2005.422,Y,3)=SLDURL
"RTN","MAGTP001",311,0)
 I $L($G(SLDZMF)) S MAGFDA(2005.422,Y,4)=SLDZMF
"RTN","MAGTP001",312,0)
 I $L($G(SCANAPP)) S MAGFDA(2005.422,Y,5)=SCANAPP
"RTN","MAGTP001",313,0)
 I $L($G(SLDSTU)) S MAGFDA(2005.422,Y,6)=SLDSTU
"RTN","MAGTP001",314,0)
 I $L($G(VIEWAPP)) S MAGFDA(2005.422,Y,7)=VIEWAPP
"RTN","MAGTP001",315,0)
 I $L($G(SLDNOTE)) S MAGFDA(2005.422,Y,8)=SLDNOTE
"RTN","MAGTP001",316,0)
 D UPDATE^DIE("","MAGFDA","IEN","MAGERR")
"RTN","MAGTP001",317,0)
 I $D(MAGERR) S MAGRY(0)="0^0^Updating SLIDES Error: "_MAGERR("DIERR",1,"TEXT",1) Q
"RTN","MAGTP001",318,0)
 S ERROR=0
"RTN","MAGTP001",319,0)
 Q
"RTN","MAGTP001",320,0)
 ;
"RTN","MAGTP001",321,0)
SAVESTATE       ;
"RTN","MAGTP001",322,0)
 ; Move environment variables into ^TMP for debug
"RTN","MAGTP001",323,0)
 N NODE
"RTN","MAGTP001",324,0)
 S NODE=$NA(^TMP("MAGTP001",$J,$H))
"RTN","MAGTP001",325,0)
 S X=$TR(NODE,")",",")
"RTN","MAGTP001",326,0)
 D DOLRO^%ZOSV
"RTN","MAGTP001",327,0)
 Q
"RTN","MAGTP001",328,0)
 ; Now build VistA message from saved variables
"RTN","MAGTP001",329,0)
 N TMPSTR,DATA
"RTN","MAGTP001",330,0)
 N STOPNODE S STOPNODE=$P(NODE,")")
"RTN","MAGTP001",331,0)
 F  S NODE=$Q(@NODE) Q:NODE'[STOPNODE  D
"RTN","MAGTP001",332,0)
 .  S TMPSTR=$TR($TR($P(NODE,",",3),""""),")","=")
"RTN","MAGTP001",333,0)
 .  S:TMPSTR'["=" TMPSTR=TMPSTR_"("_$P(NODE,",",4,$QL(NODE))_"="
"RTN","MAGTP001",334,0)
 .  S TMPSTR=TMPSTR_@NODE
"RTN","MAGTP001",335,0)
 .  S DATA(0)=$G(DATA(0))+1
"RTN","MAGTP001",336,0)
 .  S DATA(DATA(0))=TMPSTR
"RTN","MAGTP001",337,0)
 ;
"RTN","MAGTP001",338,0)
 ;D MAILVARS^JJOHMVAR("IN MAGTP001 ")
"RTN","MAGTP002")
0^8^B31357050
"RTN","MAGTP002",1,0)
MAGTP002 ;WOIFO/FG - TELEPATHOLOGY RPCS ; 03/28/2012 2:50pm
"RTN","MAGTP002",2,0)
 ;;3.0;IMAGING;**???**;Mar 28, 2012;Build 4;Mar 28, 2012
"RTN","MAGTP002",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGTP002",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP002",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGTP002",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGTP002",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGTP002",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGTP002",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGTP002",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGTP002",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGTP002",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGTP002",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGTP002",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGTP002",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGTP002",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP002",17,0)
 ;;
"RTN","MAGTP002",18,0)
 Q  ;
"RTN","MAGTP002",19,0)
 ;
"RTN","MAGTP002",20,0)
 ;*****  GET ALL THE SUPPLEMENTARY REPORTS ATTACHED TO A CASE 
"RTN","MAGTP002",21,0)
 ; RPC: MAGTP GET SUP REPORTS
"RTN","MAGTP002",22,0)
 ;
"RTN","MAGTP002",23,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP002",24,0)
 ;               are returned to.
"RTN","MAGTP002",25,0)
 ;
"RTN","MAGTP002",26,0)
 ; LRSS          AP Section
"RTN","MAGTP002",27,0)
 ;
"RTN","MAGTP002",28,0)
 ; YEAR          Accession Year (Two figures)
"RTN","MAGTP002",29,0)
 ;
"RTN","MAGTP002",30,0)
 ; LRAN          Accession Number
"RTN","MAGTP002",31,0)
 ;
"RTN","MAGTP002",32,0)
 ; Return Values
"RTN","MAGTP002",33,0)
 ; =============
"RTN","MAGTP002",34,0)
 ;
"RTN","MAGTP002",35,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP002",36,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP002",37,0)
 ;
"RTN","MAGTP002",38,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP002",39,0)
 ;
"RTN","MAGTP002",40,0)
 ; MAGRY(0)     Description
"RTN","MAGTP002",41,0)
 ;                ^01: 1
"RTN","MAGTP002",42,0)
 ;                ^02: Total Number of Lines
"RTN","MAGTP002",43,0)
 ;
"RTN","MAGTP002",44,0)
 ; MAGRY(i)     Description
"RTN","MAGTP002",45,0)
 ;                ^01: Date of Supplementary Report
"RTN","MAGTP002",46,0)
 ;                ^02: SR Verified (YES/NO)
"RTN","MAGTP002",47,0)
 ;                ^03: Name of provider who verified (if Verified = YES)
"RTN","MAGTP002",48,0)
 ;                ^04: SR Text [entries separated by pipes (|)]
"RTN","MAGTP002",49,0)
 ;
"RTN","MAGTP002",50,0)
GETSR(MAGRY,LRSS,YEAR,LRAN)                    ; RPC [MAGTP GET SUP REPORTS]
"RTN","MAGTP002",51,0)
 K MAGRY
"RTN","MAGTP002",52,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP002",53,0)
 I $G(LRSS)=""!($G(YEAR)="")!($G(LRAN)="") D  Q
"RTN","MAGTP002",54,0)
 . S MAGRY(0)="0^0^One or more input parameters are missing"
"RTN","MAGTP002",55,0)
 N INPUT
"RTN","MAGTP002",56,0)
 S INPUT=$$CONTEXT^MAGTP006(.MAGRY,LRSS,YEAR,LRAN) Q:'MAGRY(0)
"RTN","MAGTP002",57,0)
 N MAGOUT,MAGERR
"RTN","MAGTP002",58,0)
 N LRSF,IEN,SUBF,LRFLE,CT,NIEN,N
"RTN","MAGTP002",59,0)
 N INDX,INDXJ,LASTJ,NIENJ,LINE
"RTN","MAGTP002",60,0)
 S LRSF=$P(INPUT,","),IEN=$P(INPUT,",",2,4)
"RTN","MAGTP002",61,0)
 S SUBF=+$$GET1^DID(LRSF,"1.2,","","SPECIFIER")
"RTN","MAGTP002",62,0)
 ;
"RTN","MAGTP002",63,0)
 ; Get auditing sub-subfield
"RTN","MAGTP002",64,0)
 ;
"RTN","MAGTP002",65,0)
 S LRFLE=$S(LRSS="SP":63.8172,LRSS="CY":63.9072,1:63.2072)
"RTN","MAGTP002",66,0)
 S CT=0
"RTN","MAGTP002",67,0)
 D GETS^DIQ(LRSF,IEN,"1.2*","IE","MAGOUT","MAGERR")
"RTN","MAGTP002",68,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP002",69,0)
 . S MAGRY(0)="0^0^Access Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP002",70,0)
 S NIEN=""
"RTN","MAGTP002",71,0)
 F  S NIEN=$O(MAGOUT(SUBF,NIEN)) Q:NIEN=""  S INDX($P(NIEN,","))=""
"RTN","MAGTP002",72,0)
 S N=""
"RTN","MAGTP002",73,0)
 F  S N=$O(INDX(N)) Q:N=""  D                  ; NIEN may be ordered incorrectly
"RTN","MAGTP002",74,0)
 . S CT=CT+1,NIEN=N_","_IEN                    ; Convert date in field .01
"RTN","MAGTP002",75,0)
 . S MAGRY(CT)=$TR($$FMTE^XLFDT(MAGOUT(SUBF,NIEN,.01,"I"),"5Z"),"@"," ")_U
"RTN","MAGTP002",76,0)
 . ; Verified?
"RTN","MAGTP002",77,0)
 . S MAGRY(CT)=MAGRY(CT)_MAGOUT(SUBF,NIEN,0.02,"E")_U
"RTN","MAGTP002",78,0)
 . ; Get verifier: last entry in audit trail
"RTN","MAGTP002",79,0)
 . K INDXJ
"RTN","MAGTP002",80,0)
 . S NIENJ=""
"RTN","MAGTP002",81,0)
 . F  S NIENJ=$O(MAGOUT(LRFLE,NIENJ)) Q:NIENJ=""  D
"RTN","MAGTP002",82,0)
 . . S:$P(NIENJ,",",2)=N INDXJ($P(NIENJ,","))=""
"RTN","MAGTP002",83,0)
 . S LASTJ=$O(INDXJ(""),-1)
"RTN","MAGTP002",84,0)
 . S MAGRY(CT)=MAGRY(CT)_$G(MAGOUT(LRFLE,LASTJ_","_NIEN,.03,"E"))_U
"RTN","MAGTP002",85,0)
 . ; Get SR text
"RTN","MAGTP002",86,0)
 . S LINE=""
"RTN","MAGTP002",87,0)
 . F  S LINE=$O(MAGOUT(SUBF,NIEN,1,LINE)) Q:+LINE=0  D
"RTN","MAGTP002",88,0)
 . . S MAGRY(CT)=MAGRY(CT)_MAGOUT(SUBF,NIEN,1,LINE)_"|"
"RTN","MAGTP002",89,0)
 . Q
"RTN","MAGTP002",90,0)
 S MAGRY(0)="1^"_CT
"RTN","MAGTP002",91,0)
 Q  ;
"RTN","MAGTP002",92,0)
 ;
"RTN","MAGTP002",93,0)
 ;***** ADD/REPLACE INFO IN A SUPPLEMENTARY REPORT
"RTN","MAGTP002",94,0)
 ;      RELEASE IT IF SO MARKED IN THE INPUT ARRAY
"RTN","MAGTP002",95,0)
 ;
"RTN","MAGTP002",96,0)
 ; RPC: MAGTP PUT SUP REPORT
"RTN","MAGTP002",97,0)
 ;
"RTN","MAGTP002",98,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP002",99,0)
 ;               are returned to.
"RTN","MAGTP002",100,0)
 ;
"RTN","MAGTP002",101,0)
 ; .ENT          Input array:
"RTN","MAGTP002",102,0)
 ;
"RTN","MAGTP002",103,0)
 ;                 First Line:      ^01: DATE
"RTN","MAGTP002",104,0)
 ;                                  ^02: RELEASE? (1:YES/0:NO)
"RTN","MAGTP002",105,0)
 ;
"RTN","MAGTP002",106,0)
 ;                 Following Lines: TEXT of Supplemenatary Report
"RTN","MAGTP002",107,0)
 ;
"RTN","MAGTP002",108,0)
 ;
"RTN","MAGTP002",109,0)
 ; LRSS          AP Section
"RTN","MAGTP002",110,0)
 ;
"RTN","MAGTP002",111,0)
 ; YEAR          Accession Year (Two figures)
"RTN","MAGTP002",112,0)
 ;
"RTN","MAGTP002",113,0)
 ; LRAN          Accession Number
"RTN","MAGTP002",114,0)
 ;
"RTN","MAGTP002",115,0)
 ; Return Values
"RTN","MAGTP002",116,0)
 ; =============
"RTN","MAGTP002",117,0)
 ;
"RTN","MAGTP002",118,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP002",119,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP002",120,0)
 ;
"RTN","MAGTP002",121,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP002",122,0)
 ;
"RTN","MAGTP002",123,0)
 ; MAGRY(0)     Description
"RTN","MAGTP002",124,0)
 ;                ^01: 1
"RTN","MAGTP002",125,0)
 ;                ^02: 0
"RTN","MAGTP002",126,0)
 ;                ^03: Message with the outcome of the action
"RTN","MAGTP002",127,0)
 ;                     on the Supplementary Report
"RTN","MAGTP002",128,0)
 ;                ^04: In the case of release of the Supplementary
"RTN","MAGTP002",129,0)
 ;                     Report this entry will read: 
"RTN","MAGTP002",130,0)
 ;                     "Release alert will be sent to: "
"RTN","MAGTP002",131,0)
 ;                     followed by the name(s) of the
"RTN","MAGTP002",132,0)
 ;                     pathologist and/or the patient's PCP.
"RTN","MAGTP002",133,0)
 ;
"RTN","MAGTP002",134,0)
 ; Notes
"RTN","MAGTP002",135,0)
 ; =====
"RTN","MAGTP002",136,0)
 ;
"RTN","MAGTP002",137,0)
 ; The ^TMP("MAGTP",$J,"SR") global node is used by this procedure.
"RTN","MAGTP002",138,0)
 ;
"RTN","MAGTP002",139,0)
PUTSR(MAGRY,ENT,LRSS,YEAR,LRAN)                ; RPC [MAGTP PUT SUP REPORT]
"RTN","MAGTP002",140,0)
 K MAGRY
"RTN","MAGTP002",141,0)
 I $D(ENT)<10 S MAGRY(0)="0^0^No Input" Q
"RTN","MAGTP002",142,0)
 I $G(LRSS)=""!($G(YEAR)="")!($G(LRAN)="") D  Q
"RTN","MAGTP002",143,0)
 . S MAGRY(0)="0^0^One or more input parameters are missing"
"RTN","MAGTP002",144,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP002",145,0)
 N INPUT
"RTN","MAGTP002",146,0)
 S INPUT=$$CONTEXT^MAGTP006(.MAGRY,LRSS,YEAR,LRAN) Q:'MAGRY(0) 
"RTN","MAGTP002",147,0)
 N LRSF,LRDFN,LRI,IEN
"RTN","MAGTP002",148,0)
 N LRRLS,LRRLS1
"RTN","MAGTP002",149,0)
 N LRIENS,LRFILE1,LRFILE
"RTN","MAGTP002",150,0)
 N LRORIEN,LRDA,LRQUIT,REL
"RTN","MAGTP002",151,0)
 S LRSF=$P(INPUT,","),LRI=$P(INPUT,",",2)
"RTN","MAGTP002",152,0)
 S LRDFN=$P(INPUT,",",3),IEN=$P(INPUT,",",2,4)
"RTN","MAGTP002",153,0)
 ;
"RTN","MAGTP002",154,0)
 ; Add/update first
"RTN","MAGTP002",155,0)
 ;
"RTN","MAGTP002",156,0)
 ; LRQUIT=1: Quit after tag is executed, no error
"RTN","MAGTP002",157,0)
 ; LRQUIT=2: Quit with error from tag
"RTN","MAGTP002",158,0)
 S (LRRLS1,LRQUIT)=0
"RTN","MAGTP002",159,0)
 ;
"RTN","MAGTP002",160,0)
 ; Check if the ENTIRE report is already released
"RTN","MAGTP002",161,0)
 ; Set LRRLS=1 if yes
"RTN","MAGTP002",162,0)
 ;
"RTN","MAGTP002",163,0)
 S LRRLS=$$RELEAS1^MAGTP006(LRSF,IEN)
"RTN","MAGTP002",164,0)
 ;
"RTN","MAGTP002",165,0)
 ; Select a supplementary report by date,
"RTN","MAGTP002",166,0)
 ; create one if a new date is entered
"RTN","MAGTP002",167,0)
 ;
"RTN","MAGTP002",168,0)
 D GETRPT^MAGTP006(.MAGRY,.LRFILE1,.LRQUIT,.LRDA,.REL,.ENT,LRDFN,LRSS,LRI,LRSF)
"RTN","MAGTP002",169,0)
 Q:LRQUIT=2
"RTN","MAGTP002",170,0)
 ;
"RTN","MAGTP002",171,0)
 ; Check if the supplementary report already released
"RTN","MAGTP002",172,0)
 ; Set LRRLS1=1 if yes
"RTN","MAGTP002",173,0)
 ;
"RTN","MAGTP002",174,0)
 D RELEAS2^MAGTP006(.LRIENS,.LRRLS1,LRDA,LRI,LRDFN,LRFILE1)
"RTN","MAGTP002",175,0)
 ;
"RTN","MAGTP002",176,0)
 ; Make a copy of the current report
"RTN","MAGTP002",177,0)
 ; if the main report is released
"RTN","MAGTP002",178,0)
 ; Store the copy in ^TMP("MAGTP",$J,"SR")
"RTN","MAGTP002",179,0)
 ;
"RTN","MAGTP002",180,0)
 D:LRRLS COPY^MAGTP006(.MAGRY,.LRQUIT,LRFILE1,LRIENS)
"RTN","MAGTP002",181,0)
 Q:LRQUIT=2
"RTN","MAGTP002",182,0)
 ;
"RTN","MAGTP002",183,0)
 ; Update the supplementary report only if not already released.
"RTN","MAGTP002",184,0)
 ; Note: FileMan would allow it.
"RTN","MAGTP002",185,0)
 ; Array ENT contains the text of the supplementary report
"RTN","MAGTP002",186,0)
 ;
"RTN","MAGTP002",187,0)
 D RPT^MAGTP006(.MAGRY,.LRQUIT,.ENT,LRRLS,LRRLS1,LRFILE1,LRIENS)
"RTN","MAGTP002",188,0)
 Q:LRQUIT=2
"RTN","MAGTP002",189,0)
 I LRQUIT D  Q
"RTN","MAGTP002",190,0)
 . I REL,'LRRLS1 D RELEASE^MAGTP006(.MAGRY,LRFILE1,LRIENS,LRDFN,LRSS,LRI,LRSF,LRDA)
"RTN","MAGTP002",191,0)
 . Q
"RTN","MAGTP002",192,0)
 ;
"RTN","MAGTP002",193,0)
 ; Compare updated report with the previous
"RTN","MAGTP002",194,0)
 ; report with the same date
"RTN","MAGTP002",195,0)
 ;
"RTN","MAGTP002",196,0)
 D COMPARE^MAGTP006(.MAGRY,.LRQUIT,LRDA,LRFILE1,LRIENS,LRDFN,LRSS,LRI)
"RTN","MAGTP002",197,0)
 Q:LRQUIT=2
"RTN","MAGTP002",198,0)
 I LRQUIT D  Q
"RTN","MAGTP002",199,0)
 . I REL,'LRRLS1 D RELEASE^MAGTP006(.MAGRY,LRFILE1,LRIENS,LRDFN,LRSS,LRI,LRSF,LRDA)
"RTN","MAGTP002",200,0)
 . Q
"RTN","MAGTP002",201,0)
 ;
"RTN","MAGTP002",202,0)
 ; File changes, store the date of the change and user ID
"RTN","MAGTP002",203,0)
 ;
"RTN","MAGTP002",204,0)
 D UPDATE^MAGTP006(.MAGRY,.LRQUIT,.LRORIEN,.LRFILE,LRDFN,LRSS,LRI,LRIENS,LRFILE1,REL)
"RTN","MAGTP002",205,0)
 Q:LRQUIT=2
"RTN","MAGTP002",206,0)
 ;
"RTN","MAGTP002",207,0)
 ; Store the original report for auditing purposes
"RTN","MAGTP002",208,0)
 ;
"RTN","MAGTP002",209,0)
 D STORE^MAGTP006(.MAGRY,.LRQUIT,.LRORIEN,LRIENS,LRFILE)
"RTN","MAGTP002",210,0)
 Q:LRQUIT=2
"RTN","MAGTP002",211,0)
 ;
"RTN","MAGTP002",212,0)
 ; Release SR if so marked in the input and not already released
"RTN","MAGTP002",213,0)
 ;
"RTN","MAGTP002",214,0)
 I REL,'LRRLS1 D  Q
"RTN","MAGTP002",215,0)
 . D RELEASE^MAGTP006(.MAGRY,LRFILE1,LRIENS,LRDFN,LRSS,LRI,LRSF,LRDA)
"RTN","MAGTP002",216,0)
 . Q
"RTN","MAGTP002",217,0)
 ;
"RTN","MAGTP002",218,0)
 ; If not released and no errors
"RTN","MAGTP002",219,0)
 ;
"RTN","MAGTP002",220,0)
 Q  ;
"RTN","MAGTP002",221,0)
 ;
"RTN","MAGTP003")
0^9^B64830122
"RTN","MAGTP003",1,0)
MAGTP003 ;WOIFO/FG,MLH,JSL - TELEPATHOLOGY RPCS ; 25 June 2013 10:19 PM
"RTN","MAGTP003",2,0)
 ;;3.0;IMAGING;**138**;Mar 19, 2002;Build 4;Apr 03, 2013
"RTN","MAGTP003",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGTP003",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP003",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGTP003",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGTP003",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGTP003",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGTP003",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGTP003",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGTP003",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGTP003",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGTP003",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGTP003",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGTP003",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGTP003",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP003",17,0)
 ;;
"RTN","MAGTP003",18,0)
 Q  ;
"RTN","MAGTP003",19,0)
 ;
"RTN","MAGTP003",20,0)
 ;***** GET ALL THE LR (LAB DATA) REPORTS FOR A PATIENT, IDENTIFIED BY DFN
"RTN","MAGTP003",21,0)
 ; RPC: MAGTP GET PATIENT
"RTN","MAGTP003",22,0)
 ;
"RTN","MAGTP003",23,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP003",24,0)
 ;               are returned to.
"RTN","MAGTP003",25,0)
 ;
"RTN","MAGTP003",26,0)
 ; DFN           Patient's ID number in the Patient file (#2)
"RTN","MAGTP003",27,0)
 ; 
"RTN","MAGTP003",28,0)
 ; STAT          1) If STAT is not null and in the Reading List
"RTN","MAGTP003",29,0)
 ;                  in file (#2006.13) display the case if
"RTN","MAGTP003",30,0)
 ;                  it has a consultation for an interpreting
"RTN","MAGTP003",31,0)
 ;                  station number equal to STAT
"RTN","MAGTP003",32,0)
 ;               2) If STAT is null, display all cases.
"RTN","MAGTP003",33,0)
 ;
"RTN","MAGTP003",34,0)
 ; Return Values
"RTN","MAGTP003",35,0)
 ; =============
"RTN","MAGTP003",36,0)
 ;
"RTN","MAGTP003",37,0)
 ; If MAGRY(0) 1st '^'-piece is < 0, then an error
"RTN","MAGTP003",38,0)
 ; occurred during execution of the procedure: [code]^^[error explanation]
"RTN","MAGTP003",39,0)
 ;
"RTN","MAGTP003",40,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP003",41,0)
 ;
"RTN","MAGTP003",42,0)
 ; MAGRY(0)     Description
"RTN","MAGTP003",43,0)
 ;                ^01: 1
"RTN","MAGTP003",44,0)
 ;                ^02: Total Number of Lines
"RTN","MAGTP003",45,0)
 ;                ^03: "Patient's Reports"
"RTN","MAGTP003",46,0)
 ;
"RTN","MAGTP003",47,0)
 ; MAGRY(i)     Description
"RTN","MAGTP003",48,0)
 ;                ^01: Case Number
"RTN","MAGTP003",49,0)
 ;                ^02: Lock Entry (0/1 for Unlocked/Locked) 
"RTN","MAGTP003",50,0)
 ;                ^03: Initials of who locked the case in the LAB DATA file (#63) 
"RTN","MAGTP003",51,0)
 ;                ^04: Patient's Name
"RTN","MAGTP003",52,0)
 ;                ^05: Patient's ID Number
"RTN","MAGTP003",53,0)
 ;                ^06: Priority
"RTN","MAGTP003",54,0)
 ;                ^07: Slide(s) Available
"RTN","MAGTP003",55,0)
 ;                ^08: Date/Time Specimen Taken
"RTN","MAGTP003",56,0)
 ;                ^09: Case Status
"RTN","MAGTP003",57,0)
 ;                ^10: Site Initials
"RTN","MAGTP003",58,0)
 ;                ^11: AP Section
"RTN","MAGTP003",59,0)
 ;                ^12: Year
"RTN","MAGTP003",60,0)
 ;                ^13: Accession Number
"RTN","MAGTP003",61,0)
 ;                ^14: ICN
"RTN","MAGTP003",62,0)
 ;                ^15: Specimen Count
"RTN","MAGTP003",63,0)
 ;                ^16: Reading Method
"RTN","MAGTP003",64,0)
 ;                ^17: Patient's Short ID
"RTN","MAGTP003",65,0)
 ;                ^18: Is there a Note? (Yes/No)
"RTN","MAGTP003",66,0)
 ;                ^19: Employee/Sensitive? (1=Yes/0=No)
"RTN","MAGTP003",67,0)
 ;                ^20: Number of image(s)
"RTN","MAGTP003",68,0)
GETPAT(MAGRY,DFN,STAT) ; RPC [MAGTP GET PATIENT]
"RTN","MAGTP003",69,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGUTERR"
"RTN","MAGTP003",70,0)
 K MAGRY
"RTN","MAGTP003",71,0)
 I $G(DFN)="" S MAGRY(0)="-5^^No DFN Sent" Q
"RTN","MAGTP003",72,0)
 I DFN'?1.N S MAGRY(0)="-4^^Invalid DFN Format" Q
"RTN","MAGTP003",73,0)
 I '$D(^DPT(DFN)) S MAGRY(0)="-3^^Patient DFN Not Found "_DFN Q  ; ICR #350
"RTN","MAGTP003",74,0)
 N LRDFN,PNM,CT,LRSS,LRSF,LRI,IEN,LRAA,LRAN,YEAR
"RTN","MAGTP003",75,0)
 N RDATE,FLAG,LRAC,REC,OUTPUT,EMPSENS,SITE,MAGIEN,SELFLAG,TYPE,RSITE
"RTN","MAGTP003",76,0)
 S LRDFN=$$GET1^DIQ(2,DFN_",",63)              ; Supported IA #10035
"RTN","MAGTP003",77,0)
 I LRDFN="" S MAGRY(0)="-2^^No Lab Records For Patient" Q
"RTN","MAGTP003",78,0)
 S PNM=$$GET1^DIQ(2,DFN_",",.01)               ; Supported IA #10035
"RTN","MAGTP003",79,0)
 S SELFLAG=0
"RTN","MAGTP003",80,0)
 ; If STAT is passed, check if it is in the Reading List file(#2006.13)
"RTN","MAGTP003",81,0)
 I $G(STAT)'="" D  Q:$G(MAGRY(0))<0
"RTN","MAGTP003",82,0)
 . S SITE=$$IEN^XUAF4(STAT)                    ; IA #2171 ; Site Number
"RTN","MAGTP003",83,0)
 . I SITE="" S MAGRY(0)="-3^^Invalid Site "_STAT Q
"RTN","MAGTP003",84,0)
 . I $O(^MAG(2006.13,"B",SITE,0)) S MAGRY(0)=1
"RTN","MAGTP003",85,0)
 . S RSITE=0 F  S RSITE=$O(^MAG(2006.13,RSITE)) Q:'RSITE  D
"RTN","MAGTP003",86,0)
 . . S MAGIEN=$O(^MAG(2006.13,RSITE,5,"B",SITE,"")) S:MAGIEN MAGRY(0)=1
"RTN","MAGTP003",87,0)
 . . ; Check type of Reading Site:
"RTN","MAGTP003",88,0)
 . . S TYPE=$$GET1^DIQ(2006.135,MAGIEN_","_RSITE_",",.02)
"RTN","MAGTP003",89,0)
 . . I TYPE="CONSULTATION" S SELFLAG=1  ;select only the cases with their station number matching STAT
"RTN","MAGTP003",90,0)
 . . Q
"RTN","MAGTP003",91,0)
 . I $G(MAGRY(0))'=1 S MAGRY(0)="-2^^Site Not in Reading List" Q
"RTN","MAGTP003",92,0)
 . Q
"RTN","MAGTP003",93,0)
 ;
"RTN","MAGTP003",94,0)
 S CT=0
"RTN","MAGTP003",95,0)
 F LRSS="CY","EM","SP" D                       ; Only three AP sections considered
"RTN","MAGTP003",96,0)
 . S LRSF=$S(LRSS="CY":63.09,LRSS="EM":63.02,1:63.08)
"RTN","MAGTP003",97,0)
 . S LRI=0  ;old cases
"RTN","MAGTP003",98,0)
 . F  S LRI=$O(^LR(LRDFN,LRSS,LRI)) Q:LRI=""  D
"RTN","MAGTP003",99,0)
 . . S IEN=LRI_","_LRDFN_","
"RTN","MAGTP003",100,0)
 . . S RDATE=+$$GET1^DIQ(LRSF,IEN,.11,"I")     ; Release date if any
"RTN","MAGTP003",101,0)
 . . S FLAG=$S(RDATE:1,1:0)
"RTN","MAGTP003",102,0)
 . . S LRAC=$$GET1^DIQ(LRSF,IEN,.06)           ; Case Number
"RTN","MAGTP003",103,0)
 . . Q:LRAC=""  Q:$G(LRAC(LRAC))               ; Skip null entries/duplicate
"RTN","MAGTP003",104,0)
 . . I SELFLAG Q:'$$ISCONSLT^MAGTP009(LRAC,SITE)   ; Quit if no consultations for that case and site
"RTN","MAGTP003",105,0)
 . . S REC=$O(^MAG(2005.42,"B",LRAC,""))_","   ; Record Number
"RTN","MAGTP003",106,0)
 . . ; OUTPUT contains pieces ^02:^19 defined above in the MAGRY(i) description
"RTN","MAGTP003",107,0)
 . . S OUTPUT=$$GETCASE^MAGTP009(LRSS,LRAC,LRSF,IEN,REC,FLAG,PNM,DFN)
"RTN","MAGTP003",108,0)
 . . S CT=CT+1,MAGRY(CT)=LRAC_U_OUTPUT,EMPSENS=$P(MAGRY(CT),"^",19),LRAC(LRAC)=CT
"RTN","MAGTP003",109,0)
 . . Q
"RTN","MAGTP003",110,0)
 . S YEAR=" ",LRAA=$O(^LRO(68,"B",LRSS,0)) ;new style cases
"RTN","MAGTP003",111,0)
 . F  S YEAR=$O(^LRO(68,LRAA,1,YEAR),-1) Q:'YEAR  D  ; Most recent first
"RTN","MAGTP003",112,0)
 . . S LRAN=" "
"RTN","MAGTP003",113,0)
 . . F  S LRAN=$O(^LRO(68,LRAA,1,YEAR,1,LRAN),-1) Q:'LRAN  D  ; Most recent first
"RTN","MAGTP003",114,0)
 . . . I LRDFN'=+$P($G(^LRO(68,LRAA,1,YEAR,1,LRAN,0)),"^",1) Q
"RTN","MAGTP003",115,0)
 . . . S LRAC=$G(^LRO(68,LRAA,1,YEAR,1,LRAN,.2)),SITE=+$G(^(.4),DUZ(2))
"RTN","MAGTP003",116,0)
 . . . Q:LRAC=""  Q:'$D(^MAG(2006.13,"B",SITE))  Q:$G(LRAC(LRAC))
"RTN","MAGTP003",117,0)
 . . . I SELFLAG Q:'$$ISCONSLT^MAGTP009(LRAC,SITE)   ; Quit if no consultations for that case and site
"RTN","MAGTP003",118,0)
 . . . S LRI=$P(^LRO(68,LRAA,1,YEAR,1,LRAN,3),"^",5) Q:'LRI
"RTN","MAGTP003",119,0)
 . . . S IEN=LRI_","_LRDFN_","
"RTN","MAGTP003",120,0)
 . . . S REC=$O(^MAG(2005.42,"B",LRAC,""))_","   ; Record Number
"RTN","MAGTP003",121,0)
 . . . S PNM=$$GET1^DIQ(63,LRDFN_",",".03")
"RTN","MAGTP003",122,0)
 . . . S DFN=$$GET1^DIQ(63,LRDFN_",",".03","I"),FLAG=$G(FLAG,0)
"RTN","MAGTP003",123,0)
 . . . S OUTPUT=$$GETCASE^MAGTP009(LRSS,LRAC,LRSF,IEN,REC,FLAG,PNM,DFN)
"RTN","MAGTP003",124,0)
 . . . S CT=CT+1,MAGRY(CT)=LRAC_U_OUTPUT,EMPSENS=$P(MAGRY(CT),"^",19),LRAC(LRAC)=CT
"RTN","MAGTP003",125,0)
 . . . Q
"RTN","MAGTP003",126,0)
 . . Q
"RTN","MAGTP003",127,0)
 . Q
"RTN","MAGTP003",128,0)
 ;
"RTN","MAGTP003",129,0)
 ; Header
"RTN","MAGTP003",130,0)
 ;
"RTN","MAGTP003",131,0)
 S $P(MAGRY(0),"^",1)=$S('$G(EMPSENS):0,1:1)
"RTN","MAGTP003",132,0)
 S $P(MAGRY(0),"^",2)=CT
"RTN","MAGTP003",133,0)
 S $P(MAGRY(0),"^",3)="Patient's Reports"_$S('$G(EMPSENS):"",1:" (Employee/Sensitive)")
"RTN","MAGTP003",134,0)
 Q  ;
"RTN","MAGTP003",135,0)
 ;
"RTN","MAGTP003",136,0)
 ;***** SET/UNSET A LOGICAL LOCK ON A RECORD FOR CASE RESERVATION
"RTN","MAGTP003",137,0)
 ; RPC: MAGTP RESERVE CASE
"RTN","MAGTP003",138,0)
 ;
"RTN","MAGTP003",139,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP003",140,0)
 ;               are returned to.
"RTN","MAGTP003",141,0)
 ;
"RTN","MAGTP003",142,0)
 ; LFLAG         Flag that controls whether to lock or unlock
"RTN","MAGTP003",143,0)
 ;               (0:Unlocked, 1:Locked)
"RTN","MAGTP003",144,0)
 ;
"RTN","MAGTP003",145,0)
 ; LRSS          AP Section
"RTN","MAGTP003",146,0)
 ;
"RTN","MAGTP003",147,0)
 ; YEAR          Accession Year (Two figures)
"RTN","MAGTP003",148,0)
 ;
"RTN","MAGTP003",149,0)
 ; LRAN          Accession Number
"RTN","MAGTP003",150,0)
 ;
"RTN","MAGTP003",151,0)
 ; Return Values
"RTN","MAGTP003",152,0)
 ; =============
"RTN","MAGTP003",153,0)
 ;
"RTN","MAGTP003",154,0)
 ; If MAGRY(0) 1st '^'-piece is < 0, then an error
"RTN","MAGTP003",155,0)
 ; occurred during execution of the procedure: <code>^0^ ERROR explanation
"RTN","MAGTP003",156,0)
 ;
"RTN","MAGTP003",157,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP003",158,0)
 ;
"RTN","MAGTP003",159,0)
 ; MAGRY(0)     Description
"RTN","MAGTP003",160,0)
 ;                ^01: 0
"RTN","MAGTP003",161,0)
 ;                ^02: 0 if case record is unlocked, 1 if case record is locked
"RTN","MAGTP003",162,0)
 ;                ^03: "Reservation ended" if case record is unlocked
"RTN","MAGTP003",163,0)
 ;                     "Case reserved" if case record is locked
"RTN","MAGTP003",164,0)
 ;
"RTN","MAGTP003",165,0)
LOCKR(MAGRY,LFLAG,LRSS,YEAR,LRAN) ; RPC [MAGTP RESERVE CASE]
"RTN","MAGTP003",166,0)
 K MAGRY
"RTN","MAGTP003",167,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGUTERR"
"RTN","MAGTP003",168,0)
 D  Q:$G(MAGRY(0))  ; validate inputs
"RTN","MAGTP003",169,0)
 . I $G(LRSS)="" S MAGRY(0)="-2^^ERROR: AP subsection not specified" Q
"RTN","MAGTP003",170,0)
 . I $G(YEAR)="" S MAGRY(0)="-3^^ERROR: Year not specified" Q
"RTN","MAGTP003",171,0)
 . I $G(LRAN)="" S MAGRY(0)="-4^^ERROR: Accession index not specified" Q
"RTN","MAGTP003",172,0)
 . Q
"RTN","MAGTP003",173,0)
 N INPUT
"RTN","MAGTP003",174,0)
 D  Q:$G(MAGRY(0))  ; validate context
"RTN","MAGTP003",175,0)
 . N OUT
"RTN","MAGTP003",176,0)
 . S INPUT=$$CONTEXT^MAGTP006(.OUT,LRSS,YEAR,LRAN)
"RTN","MAGTP003",177,0)
 . D:'$G(OUT(0))  ; context not OK
"RTN","MAGTP003",178,0)
 . . S MAGRY(0)="-5^^ERROR: Invalid context - "
"RTN","MAGTP003",179,0)
 . . S MAGRY(0)=MAGRY(0)_$P(OUT(0),"^",3)
"RTN","MAGTP003",180,0)
 . . Q
"RTN","MAGTP003",181,0)
 . Q
"RTN","MAGTP003",182,0)
 N MAGFDA,MAGERR
"RTN","MAGTP003",183,0)
 N LRSF,IEN,LRAC,REC,ISLOCK
"RTN","MAGTP003",184,0)
 N LDT,LDUZ,LUSER,TEXT,LRAA,YR
"RTN","MAGTP003",185,0)
 S LRSF=$P(INPUT,","),IEN=$P(INPUT,",",2,4)
"RTN","MAGTP003",186,0)
 S LRAC=$$GET1^DIQ(LRSF,IEN,.06)               ; Accession code
"RTN","MAGTP003",187,0)
 D:LRAC=""   ;try new style (LEDI)
"RTN","MAGTP003",188,0)
 . S LRAA=$O(^LRO(68,"B",LRSS,0)) ;new style cases
"RTN","MAGTP003",189,0)
 . S YR=$S($L(YEAR)=2:300+YEAR*10000,1:YEAR) ;try 2000 
"RTN","MAGTP003",190,0)
 . I +$P($G(^LRO(68,LRAA,1,YR,1,LRAN,0)),"^",1) S LRAC=$G(^LRO(68,LRAA,1,YR,1,LRAN,.2)) Q:LRAC]""
"RTN","MAGTP003",191,0)
 . S YR=$S($L(YEAR)=2:200+YEAR*10000,1:YEAR) ;try 1900
"RTN","MAGTP003",192,0)
 . I +$P($G(^LRO(68,LRAA,1,YR,1,LRAN,0)),"^",1) S LRAC=$G(^LRO(68,LRAA,1,YR,1,LRAN,.2))
"RTN","MAGTP003",193,0)
 . Q
"RTN","MAGTP003",194,0)
 I LRAC="" S MAGRY(0)="-6^^ERROR: No Accession Code for this case " Q
"RTN","MAGTP003",195,0)
 S REC=$O(^MAG(2005.42,"B",LRAC,""))_","       ; Record number
"RTN","MAGTP003",196,0)
 ;
"RTN","MAGTP003",197,0)
 ; Update lock record with present user's data (or clear lock)
"RTN","MAGTP003",198,0)
 ;
"RTN","MAGTP003",199,0)
 S MAGFDA(2005.42,REC,1)=LFLAG
"RTN","MAGTP003",200,0)
 S MAGFDA(2005.42,REC,1.1)=$S(LFLAG:$$NOW^XLFDT,1:"")
"RTN","MAGTP003",201,0)
 S MAGFDA(2005.42,REC,1.2)=$S(LFLAG:DUZ,1:"")
"RTN","MAGTP003",202,0)
 D UPDATE^DIE("","MAGFDA","","MAGERR")         ; Update lock record
"RTN","MAGTP003",203,0)
 I $D(MAGERR) S MAGRY(0)="-7^^ERROR: Update error - "_MAGERR("DIERR",1,"TEXT",1) Q
"RTN","MAGTP003",204,0)
 ;
"RTN","MAGTP003",205,0)
 S TEXT=$S(LFLAG:"1^Case reserved",1:"0^Reservation ended")
"RTN","MAGTP003",206,0)
 S MAGRY(0)="0^"_TEXT
"RTN","MAGTP003",207,0)
 Q  ;
"RTN","MAGTP003",208,0)
 ;
"RTN","MAGTP003",209,0)
 ;***** GET THE NUMBER OF MINUTES FROM FILE (#2006.13)
"RTN","MAGTP003",210,0)
 ;      A LOGICAL LOCK IS EFFECTIVE UNTIL IT EXPIRES
"RTN","MAGTP003",211,0)
 ; RPC: MAGTP GET LOCK MINUTES
"RTN","MAGTP003",212,0)
 ;
"RTN","MAGTP003",213,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP003",214,0)
 ;               are returned to.
"RTN","MAGTP003",215,0)
 ;
"RTN","MAGTP003",216,0)
 ; Input Parameters
"RTN","MAGTP003",217,0)
 ; ================
"RTN","MAGTP003",218,0)
 ; N/A
"RTN","MAGTP003",219,0)
 ;
"RTN","MAGTP003",220,0)
 ; Return Values
"RTN","MAGTP003",221,0)
 ; =============
"RTN","MAGTP003",222,0)
 ;
"RTN","MAGTP003",223,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP003",224,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP003",225,0)
 ;
"RTN","MAGTP003",226,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP003",227,0)
 ;
"RTN","MAGTP003",228,0)
 ; MAGRY(0)     Description
"RTN","MAGTP003",229,0)
 ;                ^01: 1
"RTN","MAGTP003",230,0)
 ;                ^02: 1
"RTN","MAGTP003",231,0)
 ;
"RTN","MAGTP003",232,0)
 ; MAGRY(1)     Description
"RTN","MAGTP003",233,0)
 ;                ^01: Number of Minutes
"RTN","MAGTP003",234,0)
 ;
"RTN","MAGTP003",235,0)
GETLMINS(MAGRY) ; RPC [MAGTP GET LOCK MINS]
"RTN","MAGTP003",236,0)
 K MAGRY
"RTN","MAGTP003",237,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP003",238,0)
 N MINS
"RTN","MAGTP003",239,0)
 S MINS=+$$GET1^DIQ(2006.13,"1,",4)           ; How many minutes before ignoring lock
"RTN","MAGTP003",240,0)
 S MAGRY(0)="1^1"
"RTN","MAGTP003",241,0)
 S MAGRY(1)=MINS
"RTN","MAGTP003",242,0)
 Q  ;
"RTN","MAGTP003",243,0)
 ;
"RTN","MAGTP003",244,0)
 ;***** SET THE NUMBER OF MINUTES IN FILE (#2006.13)
"RTN","MAGTP003",245,0)
 ;      A LOGICAL LOCK IS EFFECTIVE UNTIL IT EXPIRES
"RTN","MAGTP003",246,0)
 ; RPC: MAGTP PUT LOCK MINUTES
"RTN","MAGTP003",247,0)
 ;
"RTN","MAGTP003",248,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP003",249,0)
 ;               are returned to.
"RTN","MAGTP003",250,0)
 ;
"RTN","MAGTP003",251,0)
 ; MINUTES       Number of Minutes
"RTN","MAGTP003",252,0)
 ;
"RTN","MAGTP003",253,0)
 ; Return Values
"RTN","MAGTP003",254,0)
 ; =============
"RTN","MAGTP003",255,0)
 ;
"RTN","MAGTP003",256,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP003",257,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP003",258,0)
 ;
"RTN","MAGTP003",259,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP003",260,0)
 ;
"RTN","MAGTP003",261,0)
 ; MAGRY(0)     Description
"RTN","MAGTP003",262,0)
 ;                ^01: 1
"RTN","MAGTP003",263,0)
 ;                ^02: 0
"RTN","MAGTP003",264,0)
 ;                ^03: "Number of Locking Minutes Updated"
"RTN","MAGTP003",265,0)
 ;
"RTN","MAGTP003",266,0)
PUTLMINS(MAGRY,MINS) ; RPC [MAGTP PUT LOCK MINS]
"RTN","MAGTP003",267,0)
 K MAGRY
"RTN","MAGTP003",268,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP003",269,0)
 I +$G(MINS)<0!(+$G(MINS)>9999) D  Q
"RTN","MAGTP003",270,0)
 . S MAGRY(0)="0^0^Invalid number of minutes"
"RTN","MAGTP003",271,0)
 N MAGFDA,MAGERR
"RTN","MAGTP003",272,0)
 S MAGFDA(2006.13,"1,",4)=MINS
"RTN","MAGTP003",273,0)
 D UPDATE^DIE("E","MAGFDA","","MAGERR")
"RTN","MAGTP003",274,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP003",275,0)
 . S MAGRY(0)="0^0^Updating Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP003",276,0)
 S MAGRY(0)="1^0^Number of Locking Minutes Updated"
"RTN","MAGTP003",277,0)
 Q  ;
"RTN","MAGTP005")
0^10^B42706197
"RTN","MAGTP005",1,0)
MAGTP005 ;WOIFO/FG/PMK - TELEPATHOLOGY RPCS ; 28 Jun 2013 7:48 PM
"RTN","MAGTP005",2,0)
 ;;3.0;IMAGING;**138**;Mar 19, 2002;Build 4;Apr 03, 2013
"RTN","MAGTP005",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGTP005",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP005",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGTP005",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGTP005",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGTP005",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGTP005",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGTP005",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGTP005",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGTP005",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGTP005",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGTP005",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGTP005",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGTP005",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP005",17,0)
 ;;
"RTN","MAGTP005",18,0)
 Q  ;
"RTN","MAGTP005",19,0)
 ;
"RTN","MAGTP005",20,0)
 ;***** GET THE XML TEMPLATE FOR THE PRESENT SITE, ACCORDING TO THE AP SECTION
"RTN","MAGTP005",21,0)
 ; RPC: MAGTP GET TEMPLATE XML
"RTN","MAGTP005",22,0)
 ;
"RTN","MAGTP005",23,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP005",24,0)
 ;               are returned to.
"RTN","MAGTP005",25,0)
 ;
"RTN","MAGTP005",26,0)
 ; LRSS          AP Section
"RTN","MAGTP005",27,0)
 ;
"RTN","MAGTP005",28,0)
 ; Return Values
"RTN","MAGTP005",29,0)
 ; =============
"RTN","MAGTP005",30,0)
 ;
"RTN","MAGTP005",31,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP005",32,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP005",33,0)
 ;
"RTN","MAGTP005",34,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP005",35,0)
 ;
"RTN","MAGTP005",36,0)
 ; MAGRY(0)     Description
"RTN","MAGTP005",37,0)
 ;                ^01: 1
"RTN","MAGTP005",38,0)
 ;                ^02: Total Number of Lines
"RTN","MAGTP005",39,0)
 ;
"RTN","MAGTP005",40,0)
 ; MAGRY(i)     Description
"RTN","MAGTP005",41,0)
 ;                ^01: XML Line of Text
"RTN","MAGTP005",42,0)
 ;
"RTN","MAGTP005",43,0)
GETXT(MAGRY,LRSS)                              ; RPC [MAGTP GET TEMPLATE XML]
"RTN","MAGTP005",44,0)
 K MAGRY
"RTN","MAGTP005",45,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP005",46,0)
 N MAGOUT,MAGERR
"RTN","MAGTP005",47,0)
 N NUM,CT,I
"RTN","MAGTP005",48,0)
 S NUM=$S(LRSS="CY":1,LRSS="EM":2,LRSS="SP":3,1:"")
"RTN","MAGTP005",49,0)
 I NUM="" S MAGRY(0)="0^0^Invalid AP Section" Q
"RTN","MAGTP005",50,0)
 D GET1^DIQ(2006.13,"1,",NUM,"","MAGOUT","MAGERR")
"RTN","MAGTP005",51,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP005",52,0)
 . S MAGRY(0)="0^0^Access Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP005",53,0)
 S (CT,I)=0
"RTN","MAGTP005",54,0)
 F  S I=$O(MAGOUT(I)) Q:I=""  D
"RTN","MAGTP005",55,0)
 . S CT=CT+1
"RTN","MAGTP005",56,0)
 . S MAGRY(CT)=MAGOUT(I)
"RTN","MAGTP005",57,0)
 . Q
"RTN","MAGTP005",58,0)
 S MAGRY(0)="1^"_CT
"RTN","MAGTP005",59,0)
 Q  ;
"RTN","MAGTP005",60,0)
 ;
"RTN","MAGTP005",61,0)
 ;***** SET THE XML TEMPLATE FOR THE PRESENT SITE, ACCORDING TO THE AP SECTION
"RTN","MAGTP005",62,0)
 ; RPC: MAGTP PUT TEMPLATE XML
"RTN","MAGTP005",63,0)
 ;
"RTN","MAGTP005",64,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP005",65,0)
 ;               are returned to.
"RTN","MAGTP005",66,0)
 ;
"RTN","MAGTP005",67,0)
 ; .ENT          Input array. One XML line of text must be
"RTN","MAGTP005",68,0)
 ;               on each line of the array
"RTN","MAGTP005",69,0)
 ;
"RTN","MAGTP005",70,0)
 ; LRSS          AP Section
"RTN","MAGTP005",71,0)
 ;
"RTN","MAGTP005",72,0)
 ; Return Values
"RTN","MAGTP005",73,0)
 ; =============
"RTN","MAGTP005",74,0)
 ;
"RTN","MAGTP005",75,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP005",76,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP005",77,0)
 ;
"RTN","MAGTP005",78,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP005",79,0)
 ;
"RTN","MAGTP005",80,0)
 ; MAGRY(0)     Description
"RTN","MAGTP005",81,0)
 ;                ^01: 1
"RTN","MAGTP005",82,0)
 ;                ^02: 0
"RTN","MAGTP005",83,0)
 ;                ^03: "<LRSS> Template Updated"
"RTN","MAGTP005",84,0)
 ;
"RTN","MAGTP005",85,0)
PUTXT(MAGRY,ENT,LRSS)                          ; RPC [MAGTP PUT TEMPLATE XML]
"RTN","MAGTP005",86,0)
 K MAGRY
"RTN","MAGTP005",87,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP005",88,0)
 I $D(ENT)<10 S MAGRY(0)="0^0^No Input" Q      ; Input: Text on each line
"RTN","MAGTP005",89,0)
 N MAGFDA,MAGERR
"RTN","MAGTP005",90,0)
 N NUM,I,LINE
"RTN","MAGTP005",91,0)
 S NUM=$S(LRSS="CY":1,LRSS="EM":2,LRSS="SP":3,1:"")
"RTN","MAGTP005",92,0)
 I NUM="" S MAGRY(0)="0^0^Invalid AP Section" Q
"RTN","MAGTP005",93,0)
 S (I,LINE)=""
"RTN","MAGTP005",94,0)
 F  S LINE=$O(ENT(LINE)) Q:LINE=""  D
"RTN","MAGTP005",95,0)
 . S I=I+1
"RTN","MAGTP005",96,0)
 . S MAGFDA(I)=ENT(LINE)                       ; FDA arrays cannot start from 0
"RTN","MAGTP005",97,0)
 . Q
"RTN","MAGTP005",98,0)
 D WP^DIE(2006.13,"1,",NUM,"K","MAGFDA","MAGERR") ; Whole text killed for WP
"RTN","MAGTP005",99,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP005",100,0)
 . S MAGRY(0)="0^0^Updating Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP005",101,0)
 S MAGRY(0)="1^0^"_LRSS_" Template Updated"
"RTN","MAGTP005",102,0)
 Q  ;
"RTN","MAGTP005",103,0)
 ;
"RTN","MAGTP005",104,0)
 ;***** SET PRIORITY FOR A CASE BY UPDATING FILE (#2005.42)
"RTN","MAGTP005",105,0)
 ; RPC: MAGTP PUT PRIORITY
"RTN","MAGTP005",106,0)
 ;
"RTN","MAGTP005",107,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP005",108,0)
 ;               are returned to.
"RTN","MAGTP005",109,0)
 ;
"RTN","MAGTP005",110,0)
 ; PRI           Priority (0:ROUTINE, 1:HIGH, 2:STAT). Default ROUTINE.
"RTN","MAGTP005",111,0)
 ;
"RTN","MAGTP005",112,0)
 ; LRSS          AP Section
"RTN","MAGTP005",113,0)
 ;
"RTN","MAGTP005",114,0)
 ; YEAR          Accession Year (Two figures)
"RTN","MAGTP005",115,0)
 ;
"RTN","MAGTP005",116,0)
 ; LRAN          Accession Number
"RTN","MAGTP005",117,0)
 ;
"RTN","MAGTP005",118,0)
 ; Return Values
"RTN","MAGTP005",119,0)
 ; =============
"RTN","MAGTP005",120,0)
 ;
"RTN","MAGTP005",121,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP005",122,0)
 ; occurred during execution of the procedure:
"RTN","MAGTP005",123,0)
 ;
"RTN","MAGTP005",124,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP005",125,0)
 ;
"RTN","MAGTP005",126,0)
 ; MAGRY(0)     Description
"RTN","MAGTP005",127,0)
 ;                ^01: 1
"RTN","MAGTP005",128,0)
 ;                ^02: 0
"RTN","MAGTP005",129,0)
 ;                ^03: "Priority Updated"
"RTN","MAGTP005",130,0)
 ;
"RTN","MAGTP005",131,0)
PUTPRI(MAGRY,PRI,LRSS,YEAR,LRAN)               ; RPC [MAGTP PUT PRIORITY]
"RTN","MAGTP005",132,0)
 K MAGRY
"RTN","MAGTP005",133,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP005",134,0)
 N INPUT
"RTN","MAGTP005",135,0)
 S INPUT=$$CONTEXT^MAGTP006(.MAGRY,LRSS,YEAR,LRAN) Q:'MAGRY(0)
"RTN","MAGTP005",136,0)
 N MAGFDA,MAGERR
"RTN","MAGTP005",137,0)
 N LRSF,IEN,LRAC,REC
"RTN","MAGTP005",138,0)
 S LRSF=$P(INPUT,","),IEN=$P(INPUT,",",2,4)
"RTN","MAGTP005",139,0)
 S LRAC=$$GET1^DIQ(LRSF,IEN,.06)               ; Accession Number
"RTN","MAGTP005",140,0)
 I LRAC="" S MAGRY(0)="0^0^No Case Number" Q
"RTN","MAGTP005",141,0)
 S REC=$O(^MAG(2005.42,"B",LRAC,""))_","       ; Record Number
"RTN","MAGTP005",142,0)
 I REC="," S MAGRY(0)="0^0^Record Not Found" Q
"RTN","MAGTP005",143,0)
 S:$G(PRI)="" PRI=0                            ; Default to ROUTINE
"RTN","MAGTP005",144,0)
 S MAGFDA(2005.42,REC,.02)=PRI
"RTN","MAGTP005",145,0)
 D UPDATE^DIE("","MAGFDA","","MAGERR")
"RTN","MAGTP005",146,0)
 I $D(MAGERR) S MAGRY(0)="0^0^Updating Error: "_MAGERR("DIERR",1,"TEXT",1) Q
"RTN","MAGTP005",147,0)
 S MAGRY(0)="1^0^Priority Updated"
"RTN","MAGTP005",148,0)
 Q  ;
"RTN","MAGTP005",149,0)
 ;
"RTN","MAGTP005",150,0)
 ; +++++ ADD A NEW ENTRY IN FILE (#2005.42) WHEN
"RTN","MAGTP005",151,0)
 ;       GENERATING A NEW CASE FROM FILEMAN
"RTN","MAGTP005",152,0)
 ;
"RTN","MAGTP005",153,0)
 ; LRAC          Accession Code
"RTN","MAGTP005",154,0)
 ;
"RTN","MAGTP005",155,0)
ADD(LRAC) ;
"RTN","MAGTP005",156,0)
 Q:'$$ISLRSSOK^MAGT7MA(LRSS)  ; check for supported anatomic pathology sections
"RTN","MAGTP005",157,0)
 ;
"RTN","MAGTP005",158,0)
 N MAGFDA,MAGERR,NOW
"RTN","MAGTP005",159,0)
 S NOW=$$NOW^XLFDT
"RTN","MAGTP005",160,0)
 S MAGFDA(2005.42,"+1,",.01)=LRAC              ; Accession Number
"RTN","MAGTP005",161,0)
 S MAGFDA(2005.42,"+1,",.02)=0                 ; Priority (0:ROUTINE, 1:HIGH, 2:STAT)
"RTN","MAGTP005",162,0)
 S MAGFDA(2005.42,"+1,",.03)=0                 ; Slide available? (0:No, 1:Yes)
"RTN","MAGTP005",163,0)
 S MAGFDA(2005.42,"+1,",.04)=0                 ; Method (0:TRADITIONAL, 1:ROBOTICS, 2:WSI)
"RTN","MAGTP005",164,0)
 S MAGFDA(2005.42,"+1,",.05)="U"               ; Status (U:Unread, R:Read, C:Cancelled)
"RTN","MAGTP005",165,0)
 S MAGFDA(2005.42,"+1,",.06)=NOW               ; Start
"RTN","MAGTP005",166,0)
 S MAGFDA(2005.42,"+1,",.07)=NOW               ; Last Activity
"RTN","MAGTP005",167,0)
 S MAGFDA(2005.42,"+1,",.08)=0                 ; Number of Images
"RTN","MAGTP005",168,0)
 S MAGFDA(2005.42,"+1,",1)=0                   ; Reservation (0:Not Reserved, 1:Reserved)
"RTN","MAGTP005",169,0)
 S MAGFDA(2005.42,"+1,",2)=0                   ; Second  Lock (Accession) (0:Unlocked, 1:Locked)
"RTN","MAGTP005",170,0)
 D UPDATE^DIE("","MAGFDA","","MAGERR")
"RTN","MAGTP005",171,0)
 Q
"RTN","MAGTP005",172,0)
 ;
"RTN","MAGTP005",173,0)
STATUPDT(LRAC,STATUS) ; update the state of the case
"RTN","MAGTP005",174,0)
 N IENS,MAGFDA,MAGERR,NOW
"RTN","MAGTP005",175,0)
 ;
"RTN","MAGTP005",176,0)
 Q:$G(LRAC)=""  Q:$G(STATUS)=""
"RTN","MAGTP005",177,0)
 S STATUS=$E(STATUS) Q:"URC"'[STATUS
"RTN","MAGTP005",178,0)
 ;
"RTN","MAGTP005",179,0)
 S IENS=$O(^MAG(2005.42,"B",LRAC,"")) Q:'IENS
"RTN","MAGTP005",180,0)
 ;
"RTN","MAGTP005",181,0)
 ; update the entry
"RTN","MAGTP005",182,0)
 S IENS=IENS_","
"RTN","MAGTP005",183,0)
 S NOW=$$NOW^XLFDT
"RTN","MAGTP005",184,0)
 S MAGFDA(2005.42,IENS,.05)=STATUS            ; Status (U:Unread, R:Read, C:Cancelled)
"RTN","MAGTP005",185,0)
 S MAGFDA(2005.42,IENS,.07)=NOW               ; Last Activity
"RTN","MAGTP005",186,0)
 D UPDATE^DIE("","MAGFDA","","MAGERR")
"RTN","MAGTP005",187,0)
 Q
"RTN","MAGTP005",188,0)
 ;
"RTN","MAGTP005",189,0)
CANCEL(LRAC) ; case cancelled - remove it from the file
"RTN","MAGTP005",190,0)
 N DA,DIK,DA
"RTN","MAGTP005",191,0)
 ;
"RTN","MAGTP005",192,0)
 Q:$G(LRAC)=""
"RTN","MAGTP005",193,0)
 S DA=$O(^MAG(2005.42,"B",LRAC,"")) Q:'DA
"RTN","MAGTP005",194,0)
 ;
"RTN","MAGTP005",195,0)
 ; delete the entry
"RTN","MAGTP005",196,0)
 S DIK="^MAG(2005.42,"
"RTN","MAGTP005",197,0)
 D ^DIK
"RTN","MAGTP005",198,0)
 Q
"RTN","MAGTP005",199,0)
 ;
"RTN","MAGTP005",200,0)
IMAGECNT(LRAC,COUNT) ; update the number of images of the case
"RTN","MAGTP005",201,0)
 N IENS,MAGFDA,MAGERR,NOW,NIMAGES,TOTAL
"RTN","MAGTP005",202,0)
 ;
"RTN","MAGTP005",203,0)
 Q:$G(LRAC)=""
"RTN","MAGTP005",204,0)
 S COUNT=$G(COUNT,1)
"RTN","MAGTP005",205,0)
 ;
"RTN","MAGTP005",206,0)
 S IENS=$O(^MAG(2005.42,"B",LRAC,"")) Q:'IENS
"RTN","MAGTP005",207,0)
 S IENS=IENS_","
"RTN","MAGTP005",208,0)
 S NIMAGES=$$GET1^DIQ(2005.42,IENS,.08)
"RTN","MAGTP005",209,0)
 S TOTAL=NIMAGES+COUNT
"RTN","MAGTP005",210,0)
 ;
"RTN","MAGTP005",211,0)
 ; update the entry
"RTN","MAGTP005",212,0)
 S NOW=$$NOW^XLFDT
"RTN","MAGTP005",213,0)
 S MAGFDA(2005.42,IENS,.07)=NOW               ; Last Activity
"RTN","MAGTP005",214,0)
 S MAGFDA(2005.42,IENS,.08)=TOTAL             ; Number of Images
"RTN","MAGTP005",215,0)
 D UPDATE^DIE("","MAGFDA","","MAGERR")
"RTN","MAGTP005",216,0)
 Q
"RTN","MAGTP006")
0^11^B144540363
"RTN","MAGTP006",1,0)
MAGTP006 ;WOIFO/FG,JSL - TELEPATHOLOGY TAGS ; May 14 2013 5:07pm
"RTN","MAGTP006",2,0)
 ;;3.0;IMAGING;**138**;Mar 19, 2002;Build 4;Apr 03, 2013
"RTN","MAGTP006",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGTP006",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP006",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGTP006",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGTP006",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGTP006",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGTP006",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGTP006",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGTP006",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGTP006",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGTP006",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGTP006",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGTP006",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGTP006",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP006",17,0)
 ;;
"RTN","MAGTP006",18,0)
 Q  ;
"RTN","MAGTP006",19,0)
 ;
"RTN","MAGTP006",20,0)
 ;+++++ SET CONTEXT
"RTN","MAGTP006",21,0)
 ;
"RTN","MAGTP006",22,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP006",23,0)
 ;               are returned to.
"RTN","MAGTP006",24,0)
 ;
"RTN","MAGTP006",25,0)
 ; LRSS          AP Section
"RTN","MAGTP006",26,0)
 ;
"RTN","MAGTP006",27,0)
 ; YEAR          Accession Year (Two figures)
"RTN","MAGTP006",28,0)
 ;
"RTN","MAGTP006",29,0)
 ; LRAN          Accession Number
"RTN","MAGTP006",30,0)
 ;
"RTN","MAGTP006",31,0)
 ; Return Values
"RTN","MAGTP006",32,0)
 ; =============
"RTN","MAGTP006",33,0)
 ;
"RTN","MAGTP006",34,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP006",35,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP006",36,0)
 ;
"RTN","MAGTP006",37,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP006",38,0)
 ;
"RTN","MAGTP006",39,0)
 ; MAGRY(0)     Description
"RTN","MAGTP006",40,0)
 ;                ^01: 1
"RTN","MAGTP006",41,0)
 ;                ^02: 0
"RTN","MAGTP006",42,0)
 ;
"RTN","MAGTP006",43,0)
 ; "LRSF,LRI,LRDFN,"     if successful
"RTN","MAGTP006",44,0)
 ; ""                    if error
"RTN","MAGTP006",45,0)
 ;
"RTN","MAGTP006",46,0)
 ; Where:
"RTN","MAGTP006",47,0)
 ;
"RTN","MAGTP006",48,0)
 ; LRSF          Subfield Number in LAB DATA file (#63)
"RTN","MAGTP006",49,0)
 ;
"RTN","MAGTP006",50,0)
 ; LRI           Reverse Date entry in LAB DATA file (#63)
"RTN","MAGTP006",51,0)
 ;
"RTN","MAGTP006",52,0)
 ; LRDFN         DFN from LAB DATA file (#63) for a patient
"RTN","MAGTP006",53,0)
 ;
"RTN","MAGTP006",54,0)
CONTEXT(MAGRY,LRSS,YEAR,LRAN) ;
"RTN","MAGTP006",55,0)
 K MAGRY
"RTN","MAGTP006",56,0)
 N LRX,LRSF,LRDFN,LRI,IEN,LRAA,LRYR
"RTN","MAGTP006",57,0)
 I '$D(LRSS) S MAGRY(0)="0^0^Missing AP Section" Q ""
"RTN","MAGTP006",58,0)
 I '$D(YEAR) S MAGRY(0)="0^0^Missing Year" Q ""
"RTN","MAGTP006",59,0)
 I '$D(LRAN) S MAGRY(0)="0^0^Missing Accession Number" Q ""
"RTN","MAGTP006",60,0)
 ; Only these three AP Sections considered
"RTN","MAGTP006",61,0)
 S LRSF=$S(LRSS="CY":63.09,LRSS="EM":63.02,LRSS="SP":63.08,1:"")
"RTN","MAGTP006",62,0)
 I LRSF="" S MAGRY(0)="0^0^Invalid AP Section" Q ""
"RTN","MAGTP006",63,0)
 S LRAA=$O(^LRO(68,"B",LRSS,0))
"RTN","MAGTP006",64,0)
 I LRAA="" S MAGRY(0)="0^0^Accession Area Not Found" Q ""
"RTN","MAGTP006",65,0)
 ; Find year in index
"RTN","MAGTP006",66,0)
 S LRYR=YEAR_"0000"
"RTN","MAGTP006",67,0)
 S LRYR=$S($D(^LRO(68,LRAA,1,2E6+LRYR)):2E6+LRYR,$D(^LRO(68,LRAA,1,3E6+LRYR)):3E6+LRYR,1:"")
"RTN","MAGTP006",68,0)
 I LRYR="" S MAGRY(0)="0^0^Invalid Year" Q ""
"RTN","MAGTP006",69,0)
 I +LRAN=0 S MAGRY(0)="0^0^Invalid Accession Number" Q ""
"RTN","MAGTP006",70,0)
 D  Q:$D(MAGRY(0)) "" ; look up by accession number; crawl if necessary
"RTN","MAGTP006",71,0)
 . N ACCID
"RTN","MAGTP006",72,0)
 . S ACCID=LRSS_" "_YEAR_" "_LRAN
"RTN","MAGTP006",73,0)
 . I $D(^LRO(68,LRAA,1,LRYR,1,LRAN)),$P($G(^(LRAN,.2)),"^",1)=ACCID Q  ; found
"RTN","MAGTP006",74,0)
 . D  ; try to crawl, redefine LRAN (accession serial IEN)
"RTN","MAGTP006",75,0)
 . . S LRAN=0 F  S LRAN=$O(^LRO(68,LRAA,1,LRYR,1,LRAN)) Q:'LRAN  I $P($G(^(LRAN,.2)),"^",1)=ACCID Q
"RTN","MAGTP006",76,0)
 . . S:LRAN="" MAGRY(0)="0^0^Accession Record Not Found"
"RTN","MAGTP006",77,0)
 . . Q
"RTN","MAGTP006",78,0)
 . Q
"RTN","MAGTP006",79,0)
 S LRDFN=$P($G(^LRO(68,LRAA,1,LRYR,1,LRAN,0)),"^",1)
"RTN","MAGTP006",80,0)
 I LRDFN="" S MAGRY(0)="0^0^LAB DATA Patient Index Not Found" Q ""
"RTN","MAGTP006",81,0)
 I '$D(^LR(LRDFN)) S MAGRY(0)="0^0^LAB DATA Patient Record Not Found" Q ""
"RTN","MAGTP006",82,0)
 S LRI=$P($G(^LRO(68,LRAA,1,LRYR,1,LRAN,3)),"^",5)
"RTN","MAGTP006",83,0)
 I LRI="" S MAGRY(0)="0^0^LAB DATA Order Index Not Found" Q ""
"RTN","MAGTP006",84,0)
 I '$D(^LR(LRDFN,LRSS,LRI)) S MAGRY(0)="0^0^LAB DATA Order Record Not Found" Q ""
"RTN","MAGTP006",85,0)
 S IEN=LRI_","_LRDFN_","
"RTN","MAGTP006",86,0)
 S MAGRY(0)="1^0"
"RTN","MAGTP006",87,0)
 Q LRSF_","_IEN
"RTN","MAGTP006",88,0)
 ;
"RTN","MAGTP006",89,0)
 ;+++++ CONVERT DATA IN INTERNAL FORMAT (I.E. DATES) INTO THE MM/DD/YYYY hh:mm:ss FORMAT
"RTN","MAGTP006",90,0)
 ;      RETURN DATA IN EXTERNAL FORMAT UNCHANGED
"RTN","MAGTP006",91,0)
 ;
"RTN","MAGTP006",92,0)
 ; X             Input data in internal or external format
"RTN","MAGTP006",93,0)
 ;
"RTN","MAGTP006",94,0)
 ; IE            Flags data as external ("E") or internal ("I")
"RTN","MAGTP006",95,0)
 ;
"RTN","MAGTP006",96,0)
 ; Return Values
"RTN","MAGTP006",97,0)
 ; =============
"RTN","MAGTP006",98,0)
 ;
"RTN","MAGTP006",99,0)
 ; If input data is in Internal format:
"RTN","MAGTP006",100,0)
 ;                                      The input is Date/Time
"RTN","MAGTP006",101,0)
 ;                                      The output is Date/Time in MM/DD/YYYY hh:mm:ss format
"RTN","MAGTP006",102,0)
 ;
"RTN","MAGTP006",103,0)
 ; If input data is in External format:
"RTN","MAGTP006",104,0)
 ;                                      The input is not a date
"RTN","MAGTP006",105,0)
 ;                                      The output is the same as the input
"RTN","MAGTP006",106,0)
 ;
"RTN","MAGTP006",107,0)
FRMTVAL(X,IE) ;
"RTN","MAGTP006",108,0)
 Q $S($G(IE)="E":X,1:$TR($$FMTE^XLFDT(X,"5Z"),"@"," "))
"RTN","MAGTP006",109,0)
 ;
"RTN","MAGTP006",110,0)
 ;+++++ GET ORDERING PROVIDER AND/OR PCP, SEND ALERT
"RTN","MAGTP006",111,0)
 ;
"RTN","MAGTP006",112,0)
 ; .LRMSG        Message with list of recipients
"RTN","MAGTP006",113,0)
 ;
"RTN","MAGTP006",114,0)
 ; LRDFN         DFN from LAB DATA file (#63) for a patient
"RTN","MAGTP006",115,0)
 ;
"RTN","MAGTP006",116,0)
 ; LRSS          AP Section
"RTN","MAGTP006",117,0)
 ;
"RTN","MAGTP006",118,0)
 ; LRI           Reverse Date entry in LAB DATA file (#63)
"RTN","MAGTP006",119,0)
 ;
"RTN","MAGTP006",120,0)
 ; LRSF          Subfield Number in LAB DATA file (#63)
"RTN","MAGTP006",121,0)
 ;
"RTN","MAGTP006",122,0)
 ; Return Values
"RTN","MAGTP006",123,0)
 ; =============
"RTN","MAGTP006",124,0)
 ;
"RTN","MAGTP006",125,0)
 ; LRMSG         Message with recipients if successful,
"RTN","MAGTP006",126,0)
 ;               otherwise return "No Ordering Provider or PCP for alert"
"RTN","MAGTP006",127,0)
 ;
"RTN","MAGTP006",128,0)
SNDALRT(LRMSG,LRDFN,LRSS,LRI,LRSF) ;
"RTN","MAGTP006",129,0)
 N LRDOCS,LRC,LRDOCSN,LRXQA,LRA,DFN,LRAN,LRACC,YR
"RTN","MAGTP006",130,0)
 K LRMSG
"RTN","MAGTP006",131,0)
 ;
"RTN","MAGTP006",132,0)
 ; CPRS alerts only sent for "patients" related to Patient file (#2)
"RTN","MAGTP006",133,0)
 I $$GET1^DIQ(63,LRDFN_",",".02","I")'=2 S LRMSG="^Patient not in Patient file" Q
"RTN","MAGTP006",134,0)
 ;
"RTN","MAGTP006",135,0)
 D GETDOCS^LRAPUTL(.LRDOCS,LRDFN,LRSS,LRI,LRSF)
"RTN","MAGTP006",136,0)
 S LRMSG="^Release alert will be sent to: "
"RTN","MAGTP006",137,0)
 F LRC=1:1:LRDOCS I LRDOCS(LRC) D
"RTN","MAGTP006",138,0)
 . S LRDOCSN(LRC)=$$NAME^XUSER(+LRDOCS(LRC),"F")
"RTN","MAGTP006",139,0)
 . I LRDOCSN(LRC)'="" S LRXQA(+LRDOCS(LRC))="",LRMSG=LRMSG_LRDOCSN(LRC)_" "
"RTN","MAGTP006",140,0)
 . Q
"RTN","MAGTP006",141,0)
 I '$D(LRXQA) S LRMSG="^No Ordering Provider or PCP for alert" Q
"RTN","MAGTP006",142,0)
 ;
"RTN","MAGTP006",143,0)
 ; Send the alert
"RTN","MAGTP006",144,0)
 ;
"RTN","MAGTP006",145,0)
 S LRA=$G(^LR(LRDFN,LRSS,LRI,0))               ; Node 0
"RTN","MAGTP006",146,0)
 I LRA="" S LRA=9999999-LRI,YR=LRA\10000*10000,LRACC=$O(^LRO(68,"B",LRSS,0)) I LRACC D
"RTN","MAGTP006",147,0)
 . S LRAN=$O(^LRO(68,LRACC,1,YR,1,"E",LRA,0)),$P(LRA,U,6)=LRSS_" "_$E(LRA,2,3)_" "_LRAN
"RTN","MAGTP006",148,0)
 . Q
"RTN","MAGTP006",149,0)
 S DFN=$$GET1^DIQ(63,LRDFN_",",".03","I")      ; Internal Patient ID
"RTN","MAGTP006",150,0)
 D LAB^ORB3LAB(DFN,LRDFN,LRI,$G(LRA),LRSS,.LRXQA)  ; Trigger Lab-related notifications
"RTN","MAGTP006",151,0)
 Q  ;
"RTN","MAGTP006",152,0)
 ;
"RTN","MAGTP006",153,0)
 ;+++++ DETERMINE WHETHER THE MAIN REPORT IS ALREADY RELEASED
"RTN","MAGTP006",154,0)
 ;
"RTN","MAGTP006",155,0)
 ; LRSF          Subfield Number in LAB DATA file (#63)    
"RTN","MAGTP006",156,0)
 ;
"RTN","MAGTP006",157,0)
 ; IEN           LAB DATA file (#63) IEN for a case
"RTN","MAGTP006",158,0)
 ;
"RTN","MAGTP006",159,0)
 ; Return Values
"RTN","MAGTP006",160,0)
 ; =============
"RTN","MAGTP006",161,0)
 ;
"RTN","MAGTP006",162,0)
 ; LRRLS         Parameter indicating whether the main report is already released
"RTN","MAGTP006",163,0)
 ;
"RTN","MAGTP006",164,0)
RELEAS1(LRSF,IEN) ;
"RTN","MAGTP006",165,0)
 S LRRLS=0
"RTN","MAGTP006",166,0)
 S:+$$GET1^DIQ($G(LRSF),$G(IEN),.11,"I") LRRLS=1
"RTN","MAGTP006",167,0)
 ; If the report has been released auditing will occur
"RTN","MAGTP006",168,0)
 ; COPY and COMPARE may be executed
"RTN","MAGTP006",169,0)
 Q LRRLS ;
"RTN","MAGTP006",170,0)
 ;
"RTN","MAGTP006",171,0)
 ;+++++ SELECT THE SUPPLEMENTARY REPORT BY DATE, OR CREATE A NEW ONE
"RTN","MAGTP006",172,0)
 ;
"RTN","MAGTP006",173,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP006",174,0)
 ;               are returned to.
"RTN","MAGTP006",175,0)
 ;
"RTN","MAGTP006",176,0)
 ; .LRFILE1      Sub-subfield of the AP subfield ("CY":63.09, "EM":63.02, "SP":63.08)
"RTN","MAGTP006",177,0)
 ;               where the supplementary report is stored
"RTN","MAGTP006",178,0)
 ;
"RTN","MAGTP006",179,0)
 ; .LRQUIT       Parameter determining whether to quit and how
"RTN","MAGTP006",180,0)
 ;                   0: Do not quit
"RTN","MAGTP006",181,0)
 ;                   1: Quit after tag is executed, no error
"RTN","MAGTP006",182,0)
 ;                   2: Quit with error
"RTN","MAGTP006",183,0)
 ;
"RTN","MAGTP006",184,0)
 ; .LRDA         Part of the IEN of the sub-subfield for the supplementary report
"RTN","MAGTP006",185,0)
 ;
"RTN","MAGTP006",186,0)
 ; .REL          Determines whether or not the supplementary report
"RTN","MAGTP006",187,0)
 ;               is to be released
"RTN","MAGTP006",188,0)
 ;
"RTN","MAGTP006",189,0)
 ; .ENT          Input array
"RTN","MAGTP006",190,0)
 ;                  First Line:
"RTN","MAGTP006",191,0)
 ;                     01^: Date
"RTN","MAGTP006",192,0)
 ;                     02^: REL: Release?
"RTN","MAGTP006",193,0)
 ;
"RTN","MAGTP006",194,0)
 ;               Following lines: Supplementary report text
"RTN","MAGTP006",195,0)
 ;
"RTN","MAGTP006",196,0)
 ; LRDFN         DFN from LAB DATA file (#63) for a patient
"RTN","MAGTP006",197,0)
 ;
"RTN","MAGTP006",198,0)
 ; LRSS          AP Section
"RTN","MAGTP006",199,0)
 ;
"RTN","MAGTP006",200,0)
 ; LRI           Reverse Date entry in LAB DATA file (#63)
"RTN","MAGTP006",201,0)
 ;
"RTN","MAGTP006",202,0)
 ; LRSF          Subfield Number in LAB DATA file (#63)
"RTN","MAGTP006",203,0)
 ;
"RTN","MAGTP006",204,0)
GETRPT(MAGRY,LRFILE1,LRQUIT,LRDA,REL,ENT,LRDFN,LRSS,LRI,LRSF) ;
"RTN","MAGTP006",205,0)
 ; First, select the report; First line: Date^Release?
"RTN","MAGTP006",206,0)
 K LRFILE1,LRDA,REL
"RTN","MAGTP006",207,0)
 N I,DATA,X,DIC,DLAYGO,LRX,Y
"RTN","MAGTP006",208,0)
 S I=$O(ENT(""))
"RTN","MAGTP006",209,0)
 S DATA=ENT(I)                                 ; First line of ENT: Date^Release?
"RTN","MAGTP006",210,0)
 S X=$TR($P(DATA,U)," ","@")                   ; First piece of first line is date
"RTN","MAGTP006",211,0)
 S REL=$P(DATA,U,2)                            ; Second piece is "Release?"
"RTN","MAGTP006",212,0)
 S DIC(0)="L",DLAYGO=63
"RTN","MAGTP006",213,0)
 S DIC="^LR(LRDFN,LRSS,LRI,1.2,"
"RTN","MAGTP006",214,0)
 S DIC("P")=$$GET1^DID(LRSF,1.2,"","SPECIFIER")
"RTN","MAGTP006",215,0)
 S DIC("B")="" S LRX=0
"RTN","MAGTP006",216,0)
 F  S LRX=$O(@(DIC_"LRX)")) Q:'LRX  D
"RTN","MAGTP006",217,0)
 . S DIC("B")=+(@(DIC_"LRX,0)"))
"RTN","MAGTP006",218,0)
 D ^DIC K DLAYGO
"RTN","MAGTP006",219,0)
 S LRFILE1=+DIC("P")
"RTN","MAGTP006",220,0)
 ; Error handling
"RTN","MAGTP006",221,0)
 I Y=-1 S LRQUIT=2,MAGRY(0)="0^0^Updating Error" Q
"RTN","MAGTP006",222,0)
 ; Otherwise set MAGRY and continue
"RTN","MAGTP006",223,0)
 S LRDA=+Y
"RTN","MAGTP006",224,0)
 Q  ;
"RTN","MAGTP006",225,0)
 ;
"RTN","MAGTP006",226,0)
 ;+++++ DETERMINE WHETHER THE SUPPLEMENTARY REPORT IS ALREADY RELEASED
"RTN","MAGTP006",227,0)
 ;
"RTN","MAGTP006",228,0)
 ; .LRIENS       LRIENS=LRDA,LRI,LRDFN, IEN of the sub-subfield of the supplementary report
"RTN","MAGTP006",229,0)
 ;
"RTN","MAGTP006",230,0)
 ; .LRRLS1       Parameter indicating whether the supplementary report is already released
"RTN","MAGTP006",231,0)
 ;
"RTN","MAGTP006",232,0)
 ; LRDA          Part of the IEN of the sub-subfield for the supplementary report
"RTN","MAGTP006",233,0)
 ;
"RTN","MAGTP006",234,0)
 ; LRI           Reverse Date entry in LAB DATA file (#63)
"RTN","MAGTP006",235,0)
 ;
"RTN","MAGTP006",236,0)
 ; LRDFN         DFN from LAB DATA file (#63) for a patient
"RTN","MAGTP006",237,0)
 ;
"RTN","MAGTP006",238,0)
 ; LRFILE1       Sub-subfield of the AP subfield ("CY":63.09, "EM":63.02, "SP":63.08)
"RTN","MAGTP006",239,0)
 ;               where the supplementary report is stored
"RTN","MAGTP006",240,0)
 ;
"RTN","MAGTP006",241,0)
RELEAS2(LRIENS,LRRLS1,LRDA,LRI,LRDFN,LRFILE1) ;
"RTN","MAGTP006",242,0)
 K LRIENS
"RTN","MAGTP006",243,0)
 S LRIENS=LRDA_","_LRI_","_LRDFN_","
"RTN","MAGTP006",244,0)
 S:+$$GET1^DIQ(LRFILE1,LRIENS,.02,"I") LRRLS1=1
"RTN","MAGTP006",245,0)
 Q  ;
"RTN","MAGTP006",246,0)
 ;
"RTN","MAGTP006",247,0)
 ;+++++ MAKE A COPY OF THE CURRENT REPORT
"RTN","MAGTP006",248,0)
 ;
"RTN","MAGTP006",249,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP006",250,0)
 ;               are returned to.
"RTN","MAGTP006",251,0)
 ;
"RTN","MAGTP006",252,0)
 ; .LRQUIT       Parameter determining whether to quit and how
"RTN","MAGTP006",253,0)
 ;                   0: Do not quit
"RTN","MAGTP006",254,0)
 ;                   1: Quit after tag is executed, no error
"RTN","MAGTP006",255,0)
 ;                   2: Quit with error
"RTN","MAGTP006",256,0)
 ;
"RTN","MAGTP006",257,0)
 ; LRFILE1       Sub-subfield of the AP subfield ("CY":63.09, "EM":63.02, "SP":63.08)
"RTN","MAGTP006",258,0)
 ;               where the supplementary report is stored
"RTN","MAGTP006",259,0)
 ;
"RTN","MAGTP006",260,0)
 ; LRIENS        LRIENS=LRDA,LRI,LRDFN, IEN of the sub-subfield of the supplementary report
"RTN","MAGTP006",261,0)
 ;
"RTN","MAGTP006",262,0)
 ; Notes
"RTN","MAGTP006",263,0)
 ; =====
"RTN","MAGTP006",264,0)
 ;
"RTN","MAGTP006",265,0)
 ; The ^TMP("MAGTP",$J,"SR") global node is used by this procedure.
"RTN","MAGTP006",266,0)
 ;
"RTN","MAGTP006",267,0)
COPY(MAGRY,LRQUIT,LRFILE1,LRIENS) ;
"RTN","MAGTP006",268,0)
 K ^TMP("MAGTP",$J,"SR")
"RTN","MAGTP006",269,0)
 N MAGERR
"RTN","MAGTP006",270,0)
 D GETS^DIQ(LRFILE1,LRIENS,"**","Z","^TMP(""MAGTP"",$J,""SR"")","MAGERR")
"RTN","MAGTP006",271,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP006",272,0)
 . S MAGRY(0)="0^0^Supplementary Report Copy Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP006",273,0)
 . S LRQUIT=2
"RTN","MAGTP006",274,0)
 . Q
"RTN","MAGTP006",275,0)
 Q  ;
"RTN","MAGTP006",276,0)
 ;
"RTN","MAGTP006",277,0)
 ;+++++ UPDATE SUPPLEMENTARY REPORT ONLY IF NOT ALREADY RELEASED
"RTN","MAGTP006",278,0)
 ;      NOTE: FILEMAN WOULD ALLOW IT
"RTN","MAGTP006",279,0)
 ;
"RTN","MAGTP006",280,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP006",281,0)
 ;               are returned to.
"RTN","MAGTP006",282,0)
 ; 
"RTN","MAGTP006",283,0)
 ; .LRQUIT       Parameter determining whether to quit and how
"RTN","MAGTP006",284,0)
 ;                   0: Do not quit
"RTN","MAGTP006",285,0)
 ;                   1: Quit after tag is executed, no error
"RTN","MAGTP006",286,0)
 ;                   2: Quit with error or stop completely
"RTN","MAGTP006",287,0)
 ;
"RTN","MAGTP006",288,0)
 ; .ENT          Input array
"RTN","MAGTP006",289,0)
 ;               First Line:
"RTN","MAGTP006",290,0)
 ;
"RTN","MAGTP006",291,0)
 ;                    01^: Date
"RTN","MAGTP006",292,0)
 ;                    02^: REL: Release?
"RTN","MAGTP006",293,0)
 ;
"RTN","MAGTP006",294,0)
 ;               Following lines: Supplementary report text
"RTN","MAGTP006",295,0)
 ;
"RTN","MAGTP006",296,0)
 ; LRRLS         Parameter indicating whether the main report is already released
"RTN","MAGTP006",297,0)
 ;
"RTN","MAGTP006",298,0)
 ; LRRLS1        Parameter indicating whether the supplementary report is already released
"RTN","MAGTP006",299,0)
 ;
"RTN","MAGTP006",300,0)
 ; LRFILE1       Sub-subfield of the AP subfield ("CY":63.09, "EM":63.02, "SP":63.08)
"RTN","MAGTP006",301,0)
 ;               where the supplementary report is stored
"RTN","MAGTP006",302,0)
 ;
"RTN","MAGTP006",303,0)
 ; LRIENS        LRIENS=LRDA,LRI,LRDFN, IEN of the sub-subfield of the supplementary report
"RTN","MAGTP006",304,0)
 ;
"RTN","MAGTP006",305,0)
RPT(MAGRY,LRQUIT,ENT,LRRLS,LRRLS1,LRFILE1,LRIENS) ;
"RTN","MAGTP006",306,0)
 I LRRLS1 D  Q
"RTN","MAGTP006",307,0)
 . S MAGRY(0)="1^0^Supplementary Report Already Released, No Update"
"RTN","MAGTP006",308,0)
 . K ^TMP("MAGTP",$J,"SR")                     ; Clean copy
"RTN","MAGTP006",309,0)
 . S LRQUIT=2                                  ; Stop completely
"RTN","MAGTP006",310,0)
 . Q
"RTN","MAGTP006",311,0)
 N LINE,I,DATA
"RTN","MAGTP006",312,0)
 N LRFDA,MAGERR
"RTN","MAGTP006",313,0)
 S LINE=$O(ENT("")),I=""                       ; Start from second line of input array
"RTN","MAGTP006",314,0)
 F  S LINE=$O(ENT(LINE)) Q:LINE=""  D
"RTN","MAGTP006",315,0)
 . S DATA=ENT(LINE)
"RTN","MAGTP006",316,0)
 . S:DATA]"" I=I+1,LRFDA(I)=DATA               ; FDA arrays cannot start from 0
"RTN","MAGTP006",317,0)
 . Q
"RTN","MAGTP006",318,0)
 ; Update only if input present
"RTN","MAGTP006",319,0)
 I $D(LRFDA)=10 D WP^DIE(LRFILE1,LRIENS,1,"K","LRFDA","MAGERR")
"RTN","MAGTP006",320,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP006",321,0)
 . S MAGRY(0)="0^0^Updating Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP006",322,0)
 . S LRQUIT=2
"RTN","MAGTP006",323,0)
 . Q
"RTN","MAGTP006",324,0)
 ; If main report is not released, stop here and proceed
"RTN","MAGTP006",325,0)
 ; to release the SR if so marked
"RTN","MAGTP006",326,0)
 I 'LRRLS D  Q
"RTN","MAGTP006",327,0)
 . S MAGRY(0)="1^0^Supplementary Report Updated"
"RTN","MAGTP006",328,0)
 . S LRQUIT=1
"RTN","MAGTP006",329,0)
 . Q
"RTN","MAGTP006",330,0)
 Q  ;
"RTN","MAGTP006",331,0)
 ;
"RTN","MAGTP006",332,0)
 ;+++++ COMPARE REPORTS
"RTN","MAGTP006",333,0)
 ;
"RTN","MAGTP006",334,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP006",335,0)
 ;               are returned to.
"RTN","MAGTP006",336,0)
 ;
"RTN","MAGTP006",337,0)
 ; .LRQUIT       Parameter determining whether to quit and how
"RTN","MAGTP006",338,0)
 ;                   0: Do not quit
"RTN","MAGTP006",339,0)
 ;                   1: Quit after tag is executed, no error
"RTN","MAGTP006",340,0)
 ;                   2: Quit with error or stop completely
"RTN","MAGTP006",341,0)
 ;
"RTN","MAGTP006",342,0)
 ; LRDA          Part of the IEN of the sub-subfield for the supplementary report
"RTN","MAGTP006",343,0)
 ;
"RTN","MAGTP006",344,0)
 ; LRFILE1       Sub-subfield of the AP subfield ("CY":63.09, "EM":63.02, "SP":63.08)
"RTN","MAGTP006",345,0)
 ;               where the supplementary report is stored
"RTN","MAGTP006",346,0)
 ; LRIENS        LRIENS=LRDA,LRI,LRDFN, IEN of the sub-subfield of the supplementary report
"RTN","MAGTP006",347,0)
 ;
"RTN","MAGTP006",348,0)
 ; LRDFN         DFN from LAB DATA file (#63) for a patient
"RTN","MAGTP006",349,0)
 ;
"RTN","MAGTP006",350,0)
 ; LRSS          AP Section
"RTN","MAGTP006",351,0)
 ;
"RTN","MAGTP006",352,0)
 ; LRI           Reverse Date entry in LAB DATA file (#63)
"RTN","MAGTP006",353,0)
 ;
"RTN","MAGTP006",354,0)
COMPARE(MAGRY,LRQUIT,LRDA,LRFILE1,LRIENS,LRDFN,LRSS,LRI) ; Compare reports
"RTN","MAGTP006",355,0)
 N LRFIL,LRA,LRFLG,LRXTMP,LRYTMP
"RTN","MAGTP006",356,0)
 ; If nothing to compare to, quit
"RTN","MAGTP006",357,0)
 I '$D(^TMP("MAGTP",$J,"SR")) D  Q
"RTN","MAGTP006",358,0)
 . S MAGRY(0)="1^0^Supplementary Report Updated"
"RTN","MAGTP006",359,0)
 . S LRQUIT=1
"RTN","MAGTP006",360,0)
 . Q
"RTN","MAGTP006",361,0)
 S LRFIL="^LR(LRDFN,LRSS,LRI,1.2,LRDA,1,"
"RTN","MAGTP006",362,0)
 I '$D(@(LRFIL_"0)")) D  Q                     ; Quit if no entry - do not release
"RTN","MAGTP006",363,0)
 . S MAGRY(0)="1^0^Empty Supplementary Report - Cannot release"
"RTN","MAGTP006",364,0)
 . K ^TMP("MAGTP",$J,"SR")
"RTN","MAGTP006",365,0)
 . S LRQUIT=2                                  ; Stop completely
"RTN","MAGTP006",366,0)
 . Q
"RTN","MAGTP006",367,0)
 S LRA=0,LRFLG=1
"RTN","MAGTP006",368,0)
 F  S LRA=$O(@(LRFIL_"LRA)")) Q:'LRA  D
"RTN","MAGTP006",369,0)
 . S LRXTMP=@(LRFIL_"LRA,0)")
"RTN","MAGTP006",370,0)
 . S:'$D(^TMP("MAGTP",$J,"SR",LRFILE1,LRIENS,1,LRA,0)) LRFLG=0
"RTN","MAGTP006",371,0)
 . Q:'LRFLG
"RTN","MAGTP006",372,0)
 . S LRYTMP=^TMP("MAGTP",$J,"SR",LRFILE1,LRIENS,1,LRA,0)
"RTN","MAGTP006",373,0)
 . I LRXTMP'=LRYTMP S LRFLG=0
"RTN","MAGTP006",374,0)
 . Q
"RTN","MAGTP006",375,0)
 I LRFLG D
"RTN","MAGTP006",376,0)
 . S LRA=0
"RTN","MAGTP006",377,0)
 . F  S LRA=$O(^TMP("MAGTP",$J,"SR",LRFILE1,LRIENS,1,LRA)) Q:'LRA  D
"RTN","MAGTP006",378,0)
 . . I '$D(@(LRFIL_"LRA,0)")) S LRFLG=0
"RTN","MAGTP006",379,0)
 . Q
"RTN","MAGTP006",380,0)
 ;
"RTN","MAGTP006",381,0)
 ; If no changes (LRFLG=1) stop, then release SR if marked for release
"RTN","MAGTP006",382,0)
 ;
"RTN","MAGTP006",383,0)
 I LRFLG D  Q
"RTN","MAGTP006",384,0)
 . K ^TMP("MAGTP",$J,"SR")
"RTN","MAGTP006",385,0)
 . S MAGRY(0)="1^0^No changes were made to the Supplementary Report"
"RTN","MAGTP006",386,0)
 . S LRQUIT=1
"RTN","MAGTP006",387,0)
 . Q
"RTN","MAGTP006",388,0)
 Q  ;
"RTN","MAGTP006",389,0)
 ;
"RTN","MAGTP006",390,0)
 ;+++++ FILE CHANGES FOR AUDITING
"RTN","MAGTP006",391,0)
 ;
"RTN","MAGTP006",392,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP006",393,0)
 ;               are returned to.
"RTN","MAGTP006",394,0)
 ;
"RTN","MAGTP006",395,0)
 ; .LRQUIT       Parameter determining whether to quit and how
"RTN","MAGTP006",396,0)
 ;                   0: Do not quit
"RTN","MAGTP006",397,0)
 ;                   1: Quit after tag is executed, no error
"RTN","MAGTP006",398,0)
 ;                   2: Quit with error
"RTN","MAGTP006",399,0)
 ;
"RTN","MAGTP006",400,0)
 ; .LRORIEN      IEN of the newly generated entry that stores the supplementary report
"RTN","MAGTP006",401,0)
 ;               before it is updated
"RTN","MAGTP006",402,0)
 ;
"RTN","MAGTP006",403,0)
 ; LRFILE        Supplementary report modified sub-subfield
"RTN","MAGTP006",404,0)
 ;
"RTN","MAGTP006",405,0)
 ; LRDFN         DFN from LAB DATA file (#63) for a patient
"RTN","MAGTP006",406,0)
 ;
"RTN","MAGTP006",407,0)
 ; LRSS          AP Section
"RTN","MAGTP006",408,0)
 ;
"RTN","MAGTP006",409,0)
 ; LRI           Reverse Date entry in LAB DATA file (#63)
"RTN","MAGTP006",410,0)
 ;
"RTN","MAGTP006",411,0)
 ; LRIENS        LRIENS=LRDA,LRI,LRDFN, - IEN of the sub-subfield of the supplementary report
"RTN","MAGTP006",412,0)
 ;
"RTN","MAGTP006",413,0)
 ; LRFILE1       Sub-subfield of the AP subfield ("CY":63.09, "EM":63.02, "SP":63.08)
"RTN","MAGTP006",414,0)
 ;               where the supplementary report is stored
"RTN","MAGTP006",415,0)
 ;
"RTN","MAGTP006",416,0)
 ; REL           Determines whether or not the supplementary report
"RTN","MAGTP006",417,0)
 ;               is to be released
"RTN","MAGTP006",418,0)
 ;
"RTN","MAGTP006",419,0)
UPDATE(MAGRY,LRQUIT,LRORIEN,LRFILE,LRDFN,LRSS,LRI,LRIENS,LRFILE1,REL) ;
"RTN","MAGTP006",420,0)
 ;
"RTN","MAGTP006",421,0)
 ; First, store the date of the change and user ID
"RTN","MAGTP006",422,0)
 N PARAM
"RTN","MAGTP006",423,0)
 K MAGRY
"RTN","MAGTP006",424,0)
 F PARAM="LRDFN","LRSS","LRI" I $G(@PARAM)="" D  Q
"RTN","MAGTP006",425,0)
 . S MAGRY(0)="0^0^Invalid parameter value ("_PARAM_")"
"RTN","MAGTP006",426,0)
 . Q
"RTN","MAGTP006",427,0)
 Q:$P($G(MAGRY(0)),"^",1)=0
"RTN","MAGTP006",428,0)
 D UPDATE^LRPXRM(LRDFN,LRSS,+$G(LRI))
"RTN","MAGTP006",429,0)
 N LRIENS1
"RTN","MAGTP006",430,0)
 N LRFDA,MAGERR
"RTN","MAGTP006",431,0)
 S LRIENS1="+1,"_$G(LRIENS)
"RTN","MAGTP006",432,0)
 S LRFILE=+$$GET1^DID($G(LRFILE1),2,"","SPECIFIER")
"RTN","MAGTP006",433,0)
 I LRFILE="" S LRQUIT=1 Q
"RTN","MAGTP006",434,0)
 S LRFDA(1,LRFILE,LRIENS1,.01)=$$NOW^XLFDT     ; Set timestamp to NOW
"RTN","MAGTP006",435,0)
 S LRFDA(1,LRFILE,LRIENS1,.02)=DUZ
"RTN","MAGTP006",436,0)
 D UPDATE^DIE("","LRFDA(1)","LRORIEN","MAGERR")
"RTN","MAGTP006",437,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP006",438,0)
 . S MAGRY(0)="0^0^Updating Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP006",439,0)
 . S LRQUIT=2
"RTN","MAGTP006",440,0)
 . Q
"RTN","MAGTP006",441,0)
 ;
"RTN","MAGTP006",442,0)
 ; Set 3rd piece .03 SUPP REPORT MODIFIED to 1
"RTN","MAGTP006",443,0)
 ; to flag the supp report, release it if marked as such
"RTN","MAGTP006",444,0)
 ;
"RTN","MAGTP006",445,0)
 I '$G(REL) D
"RTN","MAGTP006",446,0)
 . K LRFDA,MAGERR
"RTN","MAGTP006",447,0)
 . S LRFDA(1,LRFILE1,LRIENS,.03)=1
"RTN","MAGTP006",448,0)
 . D UPDATE^DIE("","LRFDA(1)","","MAGERR")
"RTN","MAGTP006",449,0)
 . S MAGRY(0)="1^0^Supplementary Report Updated"
"RTN","MAGTP006",450,0)
 . Q
"RTN","MAGTP006",451,0)
 ; Error handling
"RTN","MAGTP006",452,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP006",453,0)
 . S MAGRY(0)="0^0^Updating Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP006",454,0)
 . S LRQUIT=2
"RTN","MAGTP006",455,0)
 . Q
"RTN","MAGTP006",456,0)
 Q  ;
"RTN","MAGTP006",457,0)
 ;
"RTN","MAGTP006",458,0)
 ;+++++ STORE THE ORIGINAL REPORT FOR AUDITING PURPOSES
"RTN","MAGTP006",459,0)
 ;
"RTN","MAGTP006",460,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP006",461,0)
 ;               are returned to.
"RTN","MAGTP006",462,0)
 ; 
"RTN","MAGTP006",463,0)
 ; .LRQUIT       Parameter determining whether to quit and how
"RTN","MAGTP006",464,0)
 ;                   0: Do not quit
"RTN","MAGTP006",465,0)
 ;                   1: Quit after tag is executed, no error
"RTN","MAGTP006",466,0)
 ;                   2: Quit with error
"RTN","MAGTP006",467,0)
 ;
"RTN","MAGTP006",468,0)
 ; .LRORIEN      IEN of the newly generated entry that stores the supplementary report
"RTN","MAGTP006",469,0)
 ;               before it is updated
"RTN","MAGTP006",470,0)
 ;
"RTN","MAGTP006",471,0)
 ; LRIENS        LRIENS=LRDA,LRI,LRDFN, IEN of the sub-subfield of the supplementary report 
"RTN","MAGTP006",472,0)
 ;
"RTN","MAGTP006",473,0)
 ; LRFILE        Supplementary report modified sub-subfield
"RTN","MAGTP006",474,0)
 ;
"RTN","MAGTP006",475,0)
 ; Notes
"RTN","MAGTP006",476,0)
 ; =====
"RTN","MAGTP006",477,0)
 ;
"RTN","MAGTP006",478,0)
 ; The ^TMP("MAGTP",$J,"SR") global node is used by this procedure.
"RTN","MAGTP006",479,0)
 ;
"RTN","MAGTP006",480,0)
STORE(MAGRY,LRQUIT,LRORIEN,LRIENS,LRFILE) ; Second, store the original report
"RTN","MAGTP006",481,0)
 N LRWPROOT,MAGERR
"RTN","MAGTP006",482,0)
 N LRIENS2
"RTN","MAGTP006",483,0)
 S LRIENS2=LRORIEN(1)_","_LRIENS
"RTN","MAGTP006",484,0)
 S LRWPROOT="^TMP(""MAGTP"",$J,""SR"",LRFILE1,LRIENS,1)"
"RTN","MAGTP006",485,0)
 I $D(@LRWPROOT)'<10 D
"RTN","MAGTP006",486,0)
 . D WP^DIE(LRFILE,LRIENS2,1,"K",LRWPROOT,"MAGERR")
"RTN","MAGTP006",487,0)
 K ^TMP("MAGTP",$J,"SR")
"RTN","MAGTP006",488,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP006",489,0)
 . S MAGRY(0)="0^0^Updating Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP006",490,0)
 . S LRQUIT=2
"RTN","MAGTP006",491,0)
 . Q
"RTN","MAGTP006",492,0)
 S MAGRY(0)="1^0^Supplementary Report Updated"
"RTN","MAGTP006",493,0)
 Q  ;
"RTN","MAGTP006",494,0)
 ;
"RTN","MAGTP006",495,0)
 ;+++++ RELEASE SUPPLEMENTARY REPORT IF MARKED FOR RELEASE
"RTN","MAGTP006",496,0)
 ;
"RTN","MAGTP006",497,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP006",498,0)
 ;               are returned to.
"RTN","MAGTP006",499,0)
 ;
"RTN","MAGTP006",500,0)
 ; LRFILE1       Sub-subfield of the AP subfield ("CY":63.09, "EM":63.02, "SP":63.08)
"RTN","MAGTP006",501,0)
 ;               where the supplementary report is stored
"RTN","MAGTP006",502,0)
 ;
"RTN","MAGTP006",503,0)
 ; LRIENS        LRIENS=LRDA,LRI,LRDFN, IEN of the sub-subfield of the supplementary report
"RTN","MAGTP006",504,0)
 ;
"RTN","MAGTP006",505,0)
 ; LRDFN         DFN from LAB DATA file (#63) for a patient
"RTN","MAGTP006",506,0)
 ;
"RTN","MAGTP006",507,0)
 ; LRSS          AP Section
"RTN","MAGTP006",508,0)
 ;
"RTN","MAGTP006",509,0)
 ; LRI           Reverse Date entry in LAB DATA file (#63)
"RTN","MAGTP006",510,0)
 ;
"RTN","MAGTP006",511,0)
 ; LRSF          Subfield Number in LAB DATA file (#63)
"RTN","MAGTP006",512,0)
 ;
"RTN","MAGTP006",513,0)
 ; LRDA          Part of the IEN of the sub-subfield for the supplementary report
"RTN","MAGTP006",514,0)
 ;
"RTN","MAGTP006",515,0)
RELEASE(MAGRY,LRFILE1,LRIENS,LRDFN,LRSS,LRI,LRSF,LRDA) ;
"RTN","MAGTP006",516,0)
 N LRFDA,MAGERR,LRMSG
"RTN","MAGTP006",517,0)
 S LRFDA(LRFILE1,LRIENS,.02)=1                 ; Set released flag
"RTN","MAGTP006",518,0)
 S LRFDA(LRFILE1,LRIENS,.03)="@"               ; Clear modified flag
"RTN","MAGTP006",519,0)
 D CKSIGNR^LRAPR1                              ; LRDA assumed: Update auditing if any
"RTN","MAGTP006",520,0)
 D UPDATE^DIE("","LRFDA","","MAGERR")
"RTN","MAGTP006",521,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP006",522,0)
 . S MAGRY(0)="0^0^Updating Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP006",523,0)
 ;
"RTN","MAGTP006",524,0)
 ; If released, send alert to ordering provider/PCP
"RTN","MAGTP006",525,0)
 ;
"RTN","MAGTP006",526,0)
 D SNDALRT^MAGTP006(.LRMSG,LRDFN,LRSS,LRI,LRSF)  ;
"RTN","MAGTP006",527,0)
 S MAGRY(0)="1^0^Supplementary Report Released"_$G(LRMSG)
"RTN","MAGTP006",528,0)
 Q  ;
"RTN","MAGTP007")
0^12^B189523481
"RTN","MAGTP007",1,0)
MAGTP007 ;WOIFO/FG - TELEPATHOLOGY TAGS ; 04/19/2012 1:50pm
"RTN","MAGTP007",2,0)
 ;;3.0;IMAGING;**???**;Apr 19, 2012;Build 4;Apr 19, 2012
"RTN","MAGTP007",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGTP007",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP007",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGTP007",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGTP007",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGTP007",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGTP007",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGTP007",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGTP007",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGTP007",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGTP007",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGTP007",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGTP007",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGTP007",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP007",17,0)
 ;;
"RTN","MAGTP007",18,0)
 Q  ;
"RTN","MAGTP007",19,0)
 ;
"RTN","MAGTP007",20,0)
 ;***** GET ALL CONSULTATION INFO FOR A CASE FROM FILE (#2005.43)
"RTN","MAGTP007",21,0)
 ; RPC: MAGTP GET CONSULT
"RTN","MAGTP007",22,0)
 ;
"RTN","MAGTP007",23,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP007",24,0)
 ;               are returned to.
"RTN","MAGTP007",25,0)
 ;
"RTN","MAGTP007",26,0)
 ; LRAC          Accession Code for the case
"RTN","MAGTP007",27,0)
 ;
"RTN","MAGTP007",28,0)
 ; Return Values
"RTN","MAGTP007",29,0)
 ; =============
"RTN","MAGTP007",30,0)
 ;
"RTN","MAGTP007",31,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP007",32,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP007",33,0)
 ;
"RTN","MAGTP007",34,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP007",35,0)
 ;
"RTN","MAGTP007",36,0)
 ; MAGRY(0)     Description
"RTN","MAGTP007",37,0)
 ;                ^01: 1
"RTN","MAGTP007",38,0)
 ;                ^02: Number of Lines
"RTN","MAGTP007",39,0)
 ;                ^03: "Consult IEN"
"RTN","MAGTP007",40,0)
 ;                ^04: "Type"
"RTN","MAGTP007",41,0)
 ;                ^05: "Reservation Date"
"RTN","MAGTP007",42,0)
 ;                ^06: "Interpreting Station"
"RTN","MAGTP007",43,0)
 ;                ^07: "Site Abbreviation"
"RTN","MAGTP007",44,0)
 ;                ^08: "Status"
"RTN","MAGTP007",45,0)
 ;
"RTN","MAGTP007",46,0)
 ; MAGRY(i)     Description
"RTN","MAGTP007",47,0)
 ;                ^01: Consult IEN
"RTN","MAGTP007",48,0)
 ;                ^02: Type
"RTN","MAGTP007",49,0)
 ;                ^03: Reservation Date
"RTN","MAGTP007",50,0)
 ;                ^04: Interpreting Station
"RTN","MAGTP007",51,0)
 ;                ^05: Site Abbreviation
"RTN","MAGTP007",52,0)
 ;                ^06: Status
"RTN","MAGTP007",53,0)
 ;
"RTN","MAGTP007",54,0)
GETINTRP(MAGRY,LRAC)                           ; RPC [MAGTP GET CONSULT]
"RTN","MAGTP007",55,0)
 K MAGRY
"RTN","MAGTP007",56,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP007",57,0)
 I $G(LRAC)="" S MAGRY(0)="0^0^No Case Number" Q
"RTN","MAGTP007",58,0)
 N MAGOUT,MAGERR
"RTN","MAGTP007",59,0)
 N FILE,CT,SCREEN,MAGREC,MAGIEN,STAT,SITE,FIELD
"RTN","MAGTP007",60,0)
 S FILE=2005.43
"RTN","MAGTP007",61,0)
 S CT=0
"RTN","MAGTP007",62,0)
 S SCREEN="I $P(^(0),U,1)="""_LRAC_""""        ; Filter case number 
"RTN","MAGTP007",63,0)
 D LIST^DIC(FILE,"",".02;.03I;.04I;.06","","","","","",SCREEN,"","MAGOUT","MAGERR")
"RTN","MAGTP007",64,0)
 I $D(MAGERR) S MAGRY(0)="0^0^Access Error: "_MAGERR("DIERR",1,"TEXT",1) Q
"RTN","MAGTP007",65,0)
 S MAGREC=""
"RTN","MAGTP007",66,0)
 F  S MAGREC=$O(MAGOUT("DILIST","ID",MAGREC)) Q:MAGREC'>0  D
"RTN","MAGTP007",67,0)
 . K MAGIEN,STAT,SITE
"RTN","MAGTP007",68,0)
 . S CT=CT+1
"RTN","MAGTP007",69,0)
 . S MAGIEN=MAGOUT("DILIST",2,MAGREC)
"RTN","MAGTP007",70,0)
 . ; IEN and Type
"RTN","MAGTP007",71,0)
 . S MAGRY(CT)=MAGIEN_U_MAGOUT("DILIST","ID",MAGREC,.02)
"RTN","MAGTP007",72,0)
 . ; Date/Time in MM/DD/YYYY hh:mm format
"RTN","MAGTP007",73,0)
 . S MAGRY(CT)=MAGRY(CT)_U_$TR($$FMTE^XLFDT(MAGOUT("DILIST","ID",MAGREC,.03),"5Z"),"@"," ")
"RTN","MAGTP007",74,0)
 . ; Interpreting Station
"RTN","MAGTP007",75,0)
 . S SITE=MAGOUT("DILIST","ID",MAGREC,.04)
"RTN","MAGTP007",76,0)
 . S STAT=$$STA^XUAF4(SITE)                    ; Supported IA #2171 ; Station Number
"RTN","MAGTP007",77,0)
 . S MAGRY(CT)=MAGRY(CT)_U_STAT
"RTN","MAGTP007",78,0)
 . ; Site Abbreviation
"RTN","MAGTP007",79,0)
 . S MAGRY(CT)=MAGRY(CT)_U_$$GETABBR^MAGTP008(SITE)  ; Site abbreviation
"RTN","MAGTP007",80,0)
 . ; Status
"RTN","MAGTP007",81,0)
 . S MAGRY(CT)=MAGRY(CT)_U_MAGOUT("DILIST","ID",MAGREC,.06)
"RTN","MAGTP007",82,0)
 . Q
"RTN","MAGTP007",83,0)
 S MAGRY(0)="1^"_CT_"^Consult IEN^Type^Reservation Date^Interpreting Station^Site Abbreviation^Status"
"RTN","MAGTP007",84,0)
 Q  ;
"RTN","MAGTP007",85,0)
 ;
"RTN","MAGTP007",86,0)
 ;***** REQUEST A CONSULT: UPDATE FILE (#2005.43) WITH INFO
"RTN","MAGTP007",87,0)
 ; RPC: MAGTP PUT CONSULT
"RTN","MAGTP007",88,0)
 ;
"RTN","MAGTP007",89,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP007",90,0)
 ;               are returned to.
"RTN","MAGTP007",91,0)
 ;
"RTN","MAGTP007",92,0)
 ; LRAC          Accession Code for the case
"RTN","MAGTP007",93,0)
 ;
"RTN","MAGTP007",94,0)
 ; TYPE          Type of Consultation (0:INTERPRETATION, 1:CONSULTATION)
"RTN","MAGTP007",95,0)
 ;
"RTN","MAGTP007",96,0)
 ; STAT          Interpreting Station Number
"RTN","MAGTP007",97,0)
 ;
"RTN","MAGTP007",98,0)
 ; Return Values
"RTN","MAGTP007",99,0)
 ; =============
"RTN","MAGTP007",100,0)
 ;
"RTN","MAGTP007",101,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP007",102,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP007",103,0)
 ;
"RTN","MAGTP007",104,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP007",105,0)
 ;
"RTN","MAGTP007",106,0)
 ; MAGRY(0)     Description
"RTN","MAGTP007",107,0)
 ;                ^01: 1
"RTN","MAGTP007",108,0)
 ;                ^02: 0
"RTN","MAGTP007",109,0)
 ;                ^03: Interpretation File Updated
"RTN","MAGTP007",110,0)
 ;                ^04: CKDFN: See description in CHECKDFN^MAGTP013
"RTN","MAGTP007",111,0)
 ;
"RTN","MAGTP007",112,0)
PUTINTRP(MAGRY,LRAC,TYPE,STAT)                 ; RPC [MAGTP PUT CONSULT]
"RTN","MAGTP007",113,0)
 K MAGRY
"RTN","MAGTP007",114,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP007",115,0)
 I $G(LRAC)="" S MAGRY(0)="0^0^No Case Number" Q
"RTN","MAGTP007",116,0)
 I $G(TYPE)=""!(",0,1,"'[$G(TYPE)) S MAGRY(0)="0^0^Invalid Type" Q
"RTN","MAGTP007",117,0)
 N SITE,CKDFN,FILE,SCREEN,MAGOUT,MAGFDA,MAGERR,MAGIEN
"RTN","MAGTP007",118,0)
 S SITE=$$IEN^XUAF4($G(STAT))                  ; IA #2171
"RTN","MAGTP007",119,0)
 I 'SITE S MAGRY(0)="0^0^Invalid Station Number" Q
"RTN","MAGTP007",120,0)
 ;
"RTN","MAGTP007",121,0)
 ; In the case of 1:CONSULTATION check whether a 
"RTN","MAGTP007",122,0)
 ; patient exists at a site and if not send a Mailman
"RTN","MAGTP007",123,0)
 ; email to the site user group to register the patient
"RTN","MAGTP007",124,0)
 ;
"RTN","MAGTP007",125,0)
 S:TYPE=1 CKDFN=$$CHECKDFN^MAGTP013(LRAC,STAT)
"RTN","MAGTP007",126,0)
 ;
"RTN","MAGTP007",127,0)
 S FILE=2005.43
"RTN","MAGTP007",128,0)
 ;
"RTN","MAGTP007",129,0)
 ; Check that for consultations an interpretation record exists; if not error out
"RTN","MAGTP007",130,0)
 ;
"RTN","MAGTP007",131,0)
 I TYPE=1 D  Q:$D(MAGRY)                       ; In case of 1:CONSULTATION
"RTN","MAGTP007",132,0)
 . S MAGIEN=$O(^MAG(FILE,"B",LRAC,""))         ; First attached (if any) is INTERPRETATION
"RTN","MAGTP007",133,0)
 . I MAGIEN="" S MAGRY(0)="0^0^No Interpretation Entry for case "_LRAC Q
"RTN","MAGTP007",134,0)
 . S MAGFDA(FILE,"+1,",.05)=MAGIEN             ; Parent record number (set for TYPE=1 only)
"RTN","MAGTP007",135,0)
 . ;
"RTN","MAGTP007",136,0)
 . ; Check if there is a 1:CONSULTATION entry for LRAC
"RTN","MAGTP007",137,0)
 . ; with the same STATION and is 0:PENDING.
"RTN","MAGTP007",138,0)
 . ; In that case error out.
"RTN","MAGTP007",139,0)
 . ;
"RTN","MAGTP007",140,0)
 . S SCREEN="I $P(^(0),U,1)="""_LRAC_""""      ; Filter case number 
"RTN","MAGTP007",141,0)
 . S SCREEN=SCREEN_",($P(^(0),U,2)=1)"         ; Filter type 1:CONSULTATION
"RTN","MAGTP007",142,0)
 . S SCREEN=SCREEN_",($P(^(0),U,4)="""_SITE_""")"  ; Filter site number
"RTN","MAGTP007",143,0)
 . S SCREEN=SCREEN_",($P(^(0),U,6)=0)"         ; Filter status 0:PENDING
"RTN","MAGTP007",144,0)
 . D LIST^DIC(FILE,"","","","","","","",SCREEN,"","MAGOUT","MAGERR")
"RTN","MAGTP007",145,0)
 . I $D(MAGERR) S MAGRY(0)="0^0^Access Error: "_MAGERR("DIERR",1,"TEXT",1) Q
"RTN","MAGTP007",146,0)
 . I +MAGOUT("DILIST",0) D
"RTN","MAGTP007",147,0)
 . . S MAGRY(0)="0^0^Pending Consultation with the same Station found"
"RTN","MAGTP007",148,0)
 . Q
"RTN","MAGTP007",149,0)
 ;
"RTN","MAGTP007",150,0)
 ; Check whether previous entries exist for an interpretation
"RTN","MAGTP007",151,0)
 ;
"RTN","MAGTP007",152,0)
 I TYPE=0 D  Q:$D(MAGRY)                       ; In case of 0:INTERPRETATION
"RTN","MAGTP007",153,0)
 . S MAGIEN=$O(^MAG(FILE,"B",LRAC,""))         ; First attached (if any) is INTERPRETATION
"RTN","MAGTP007",154,0)
 . I MAGIEN]"" D                               ; If INTERPRETATION exists update it
"RTN","MAGTP007",155,0)
 . . S MAGFDA(FILE,MAGIEN_",",.03)=+$$NOW^XLFDT  ; Reservation Date, NOW: Date/Time in internal format
"RTN","MAGTP007",156,0)
 . . D UPDATE^DIE("","MAGFDA","","MAGERR")
"RTN","MAGTP007",157,0)
 . . I $D(MAGERR) S MAGRY(0)="0^0^"_MAGERR("DIERR",1,"TEXT",1) Q
"RTN","MAGTP007",158,0)
 . . S MAGRY(0)="1^0^Interpretation File Updated"
"RTN","MAGTP007",159,0)
 . . Q
"RTN","MAGTP007",160,0)
 . Q
"RTN","MAGTP007",161,0)
 ;
"RTN","MAGTP007",162,0)
 ; Otherwise continue
"RTN","MAGTP007",163,0)
 ;
"RTN","MAGTP007",164,0)
 S MAGFDA(FILE,"+1,",.01)=LRAC                 ; Case Number
"RTN","MAGTP007",165,0)
 S MAGFDA(FILE,"+1,",.02)=TYPE                 ; Type (0:INTERPRETATION, 1:CONSULTATION)
"RTN","MAGTP007",166,0)
 S MAGFDA(FILE,"+1,",.03)=+$$NOW^XLFDT         ; Reservation Date, NOW: Date/Time in internal format
"RTN","MAGTP007",167,0)
 S MAGFDA(FILE,"+1,",.04)=SITE                 ; Site Number from input Station Number
"RTN","MAGTP007",168,0)
 S MAGFDA(FILE,"+1,",.06)=0                    ; Status: Default to 0:PENDING
"RTN","MAGTP007",169,0)
 D UPDATE^DIE("","MAGFDA","","MAGERR")
"RTN","MAGTP007",170,0)
 I $D(MAGERR) S MAGRY(0)="0^0^"_MAGERR("DIERR",1,"TEXT",1) Q
"RTN","MAGTP007",171,0)
 S MAGRY(0)="1^0^Interpretation File Updated"_U_$G(CKDFN)
"RTN","MAGTP007",172,0)
 Q  ;
"RTN","MAGTP007",173,0)
 ;
"RTN","MAGTP007",174,0)
 ;***** GET LAB INFO FOR A CASE AS SHOWN IN CPRS
"RTN","MAGTP007",175,0)
 ; RPC: MAGTP GET CPRS REPORT
"RTN","MAGTP007",176,0)
 ;
"RTN","MAGTP007",177,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP007",178,0)
 ;               are returned to.
"RTN","MAGTP007",179,0)
 ;
"RTN","MAGTP007",180,0)
 ; LRSS          AP Section
"RTN","MAGTP007",181,0)
 ;
"RTN","MAGTP007",182,0)
 ; YEAR          Accession Year (Two figures)
"RTN","MAGTP007",183,0)
 ;
"RTN","MAGTP007",184,0)
 ; LRAN          Accession Number
"RTN","MAGTP007",185,0)
 ;
"RTN","MAGTP007",186,0)
 ; Return Values
"RTN","MAGTP007",187,0)
 ; =============
"RTN","MAGTP007",188,0)
 ; 
"RTN","MAGTP007",189,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP007",190,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP007",191,0)
 ;
"RTN","MAGTP007",192,0)
 ; Otherwise, the output array reproduces the structure
"RTN","MAGTP007",193,0)
 ; of global ^TMP("ORDATA",$J), containing the CPRS report:
"RTN","MAGTP007",194,0)
 ;
"RTN","MAGTP007",195,0)
 ; MAGRY(0)     Description
"RTN","MAGTP007",196,0)
 ;                ^01: 1
"RTN","MAGTP007",197,0)
 ;                ^02: Number of Lines 
"RTN","MAGTP007",198,0)
 ;
"RTN","MAGTP007",199,0)
 ; MAGRY(i)     Description
"RTN","MAGTP007",200,0)
 ;                ^01: Text from CPRS Report
"RTN","MAGTP007",201,0)
 ;
"RTN","MAGTP007",202,0)
 ; Notes
"RTN","MAGTP007",203,0)
 ; =====
"RTN","MAGTP007",204,0)
 ;
"RTN","MAGTP007",205,0)
 ; The ^TMP("ORDATA",$J) global node is used by this procedure
"RTN","MAGTP007",206,0)
 ;
"RTN","MAGTP007",207,0)
GETREP(MAGRY,LRSS,YEAR,LRAN)                   ; RPC [MAGTP GET CPRS REPORT]
"RTN","MAGTP007",208,0)
 K MAGRY
"RTN","MAGTP007",209,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP007",210,0)
 I $G(LRSS)=""!($G(YEAR)="")!($G(LRAN)="") D  Q
"RTN","MAGTP007",211,0)
 . S MAGRY(0)="0^0^One or more input parameters are missing"
"RTN","MAGTP007",212,0)
 N INPUT
"RTN","MAGTP007",213,0)
 S INPUT=$$CONTEXT^MAGTP006(.MAGRY,LRSS,YEAR,LRAN) Q:'MAGRY(0)
"RTN","MAGTP007",214,0)
 N LRI,LRDFN,DFN,FIELD,LABEL,RPTID,ROOT,TEMP,CT,I,J
"RTN","MAGTP007",215,0)
 S LRI=$P(INPUT,",",2),LRDFN=$P(INPUT,",",3)
"RTN","MAGTP007",216,0)
 S DFN=$$GET1^DIQ(63,LRDFN_",",".03","I")      ; Internal Patient ID
"RTN","MAGTP007",217,0)
 S FIELD=$S(LRSS="CY":9,LRSS="EM":2,1:8)
"RTN","MAGTP007",218,0)
 S LABEL=$$GET1^DID(63,FIELD,"","LABEL")       ; Name (label) of AP Section
"RTN","MAGTP007",219,0)
 S RPTID="OR_"_LRSS_":"_LABEL_"~"_LRSS_";ORDV02A;0;1000"
"RTN","MAGTP007",220,0)
 D RPT^ORWRP(.ROOT,DFN,RPTID)                  ; Get all reports for a patient
"RTN","MAGTP007",221,0)
 M TEMP=@($P(ROOT,")")_","""_LRI_LRSS_""",""WP"")")  ; Select only one case report
"RTN","MAGTP007",222,0)
 ; Strip line numbers, set MAGRY
"RTN","MAGTP007",223,0)
 S (CT,I)=0
"RTN","MAGTP007",224,0)
 F  S I=$O(TEMP(I)) Q:I=""  D
"RTN","MAGTP007",225,0)
 . S J=""
"RTN","MAGTP007",226,0)
 . F  S J=$O(TEMP(I,J)) Q:J=""  D
"RTN","MAGTP007",227,0)
 . . S CT=CT+1
"RTN","MAGTP007",228,0)
 . . S MAGRY(CT)=$P(TEMP(I,J),U,2)
"RTN","MAGTP007",229,0)
 . . Q
"RTN","MAGTP007",230,0)
 . Q
"RTN","MAGTP007",231,0)
 S MAGRY(0)="1^"_CT
"RTN","MAGTP007",232,0)
 K ^TMP("ORDATA",$J),^TMP("LRC",$J)            ; Clean up temporary globals
"RTN","MAGTP007",233,0)
 Q  ;
"RTN","MAGTP007",234,0)
 ;
"RTN","MAGTP007",235,0)
 ;***** SET "SLIDES AVAILABLE" FLAG FOR A CASE BY UPDATING FILE (#2005.42)
"RTN","MAGTP007",236,0)
 ; RPC: MAGTP CHANGE SLIDES AVAIL
"RTN","MAGTP007",237,0)
 ;
"RTN","MAGTP007",238,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP007",239,0)
 ;               are returned to.
"RTN","MAGTP007",240,0)
 ;
"RTN","MAGTP007",241,0)
 ; SLIDES        Slides Available? (0:"NO", 1:"YES"). Default 0:"NO".
"RTN","MAGTP007",242,0)
 ;
"RTN","MAGTP007",243,0)
 ; LRAC          Accession Code for the case
"RTN","MAGTP007",244,0)
 ;
"RTN","MAGTP007",245,0)
 ; Return Values
"RTN","MAGTP007",246,0)
 ; =============
"RTN","MAGTP007",247,0)
 ; 
"RTN","MAGTP007",248,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP007",249,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP007",250,0)
 ;
"RTN","MAGTP007",251,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP007",252,0)
 ;
"RTN","MAGTP007",253,0)
 ; MAGRY(0)     Description
"RTN","MAGTP007",254,0)
 ;                ^01: 1
"RTN","MAGTP007",255,0)
 ;                ^02: 0
"RTN","MAGTP007",256,0)
 ;                ^03: "Slides Available? Updated"
"RTN","MAGTP007",257,0)
 ;
"RTN","MAGTP007",258,0)
PUTSLIDE(MAGRY,SLIDES,LRAC)                    ; RPC [MAGTP CHANGE SLIDES AVAIL]
"RTN","MAGTP007",259,0)
 K MAGRY
"RTN","MAGTP007",260,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP007",261,0)
 S:$G(SLIDES)="" SLIDES=0                      ; Default to 0:"NO" if no entry
"RTN","MAGTP007",262,0)
 I ",0,1,"'[$G(SLIDES) S MAGRY(0)="0^0^Invalid 'Slides Available' Entry " Q
"RTN","MAGTP007",263,0)
 I $G(LRAC)="" S MAGRY(0)="0^0^No Accession Code" Q
"RTN","MAGTP007",264,0)
 N MAGFDA,MAGERR
"RTN","MAGTP007",265,0)
 N MAGREC
"RTN","MAGTP007",266,0)
 S MAGREC=$O(^MAG(2005.42,"B",LRAC,""))_","
"RTN","MAGTP007",267,0)
 I MAGREC="," S MAGRY(0)="0^0^Record Not Found" Q
"RTN","MAGTP007",268,0)
 S MAGFDA(2005.42,MAGREC,.03)=SLIDES
"RTN","MAGTP007",269,0)
 D UPDATE^DIE("","MAGFDA","","MAGERR")
"RTN","MAGTP007",270,0)
 I $D(MAGERR) S MAGRY(0)="0^0^Updating Error: "_MAGERR("DIERR",1,"TEXT",1) Q
"RTN","MAGTP007",271,0)
 S MAGRY(0)="1^0^Slide Available? Updated"
"RTN","MAGTP007",272,0)
 Q  ;
"RTN","MAGTP007",273,0)
 ;
"RTN","MAGTP007",274,0)
 ;***** SET CONFIGURATION INFO FOR READING OR ACQUISITION SITES INTO FILE (#2006.13)
"RTN","MAGTP007",275,0)
 ; RPC: MAGTP PUT SITE CONFIG
"RTN","MAGTP007",276,0)
 ;
"RTN","MAGTP007",277,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP007",278,0)
 ;               are returned to.
"RTN","MAGTP007",279,0)
 ;
"RTN","MAGTP007",280,0)
 ; ENT           List of inputs:
"RTN","MAGTP007",281,0)
 ;
"RTN","MAGTP007",282,0)
 ;               Reading List:
"RTN","MAGTP007",283,0)
 ;                 ^01: 1 (for Reading)
"RTN","MAGTP007",284,0)
 ;                 ^02: 1:Add or 0:Delete
"RTN","MAGTP007",285,0)
 ;                 ^03: Reading Station Number
"RTN","MAGTP007",286,0)
 ;                 ^04: Site Type (0:Primary, 1:Consultation, 2:Both)
"RTN","MAGTP007",287,0)
 ;                 ^05: Active? (1:Yes, 0:No)
"RTN","MAGTP007",288,0)
 ;
"RTN","MAGTP007",289,0)
 ;               Acquisition List:
"RTN","MAGTP007",290,0)
 ;                 ^01: 0 (for Acquisition)
"RTN","MAGTP007",291,0)
 ;                 ^02: 1:Add or 0:Delete
"RTN","MAGTP007",292,0)
 ;                 ^03: Acquisition Station Number
"RTN","MAGTP007",293,0)
 ;                 ^04: Primary Station Number
"RTN","MAGTP007",294,0)
 ;                 ^05: Active? (1:Yes, 0:No)
"RTN","MAGTP007",295,0)
 ;
"RTN","MAGTP007",296,0)
 ; Return Values
"RTN","MAGTP007",297,0)
 ; =============
"RTN","MAGTP007",298,0)
 ;
"RTN","MAGTP007",299,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP007",300,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP007",301,0)
 ;
"RTN","MAGTP007",302,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP007",303,0)
 ;
"RTN","MAGTP007",304,0)
 ; MAGRY(0)     Description
"RTN","MAGTP007",305,0)
 ;                ^01: 1
"RTN","MAGTP007",306,0)
 ;                ^02: 0
"RTN","MAGTP007",307,0)
 ;                ^03: <Label> <Entry> - Added/Updated or
"RTN","MAGTP007",308,0)
 ;                     <Label> <Entry> - Deleted
"RTN","MAGTP007",309,0)
 ;
"RTN","MAGTP007",310,0)
PUTCONF(MAGRY,ENT)                             ; RPC [MAGTP PUT SITE CONFIG]
"RTN","MAGTP007",311,0)
 K MAGRY
"RTN","MAGTP007",312,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP007",313,0)
 I $G(ENT)="" S MAGRY(0)="0^0^No Input" Q
"RTN","MAGTP007",314,0)
 N MAGERR,MAGFDA
"RTN","MAGTP007",315,0)
 N NUM,ACT,FIELD,LABEL,SUBF,SUBS,VAL,LVAL
"RTN","MAGTP007",316,0)
 N ENTRY,STAT,SITE,DA,DIK,ADD,I
"RTN","MAGTP007",317,0)
 ;
"RTN","MAGTP007",318,0)
 ; Input: First Piece:      (0:Acquisition, 1:Reading)
"RTN","MAGTP007",319,0)
 ;        Second Piece:     0:Delete or 1:Add
"RTN","MAGTP007",320,0)
 ;        Pieces 3,4,5:
"RTN","MAGTP007",321,0)
 ;        Reading List:     Station Number^Site Type^Active?
"RTN","MAGTP007",322,0)
 ;        Acquisition List: Station Number^Primary Site Station Number^Active?
"RTN","MAGTP007",323,0)
 ;
"RTN","MAGTP007",324,0)
 S NUM=$P(ENT,U)
"RTN","MAGTP007",325,0)
 S NUM=$S(NUM=0:6,NUM=1:5,1:"")                   ; Field number
"RTN","MAGTP007",326,0)
 I 'NUM S MAGRY(0)="0^0^Invalid Field Number" Q
"RTN","MAGTP007",327,0)
 ;
"RTN","MAGTP007",328,0)
 S ACT=$P(ENT,U,2)                                ; 0:Delete or 1:Add
"RTN","MAGTP007",329,0)
 I (ACT="")!("0,1"'[ACT) S MAGRY(0)="0^0^Invalid Operation" Q
"RTN","MAGTP007",330,0)
 ;
"RTN","MAGTP007",331,0)
 D FIELD^DID(2006.13,NUM,"","SPECIFIER;GLOBAL SUBSCRIPT LOCATION;LABEL","FIELD")
"RTN","MAGTP007",332,0)
 S LABEL=FIELD("LABEL")
"RTN","MAGTP007",333,0)
 S SUBF=+FIELD("SPECIFIER")
"RTN","MAGTP007",334,0)
 S SUBS=$P(FIELD("GLOBAL SUBSCRIPT LOCATION"),";")  ; Set file subscript
"RTN","MAGTP007",335,0)
 S LVAL=$P(ENT,U,3,5)                          ; List of entry values
"RTN","MAGTP007",336,0)
 S ENTRY=$TR(LVAL,U," ")                       ; Store formatted entry
"RTN","MAGTP007",337,0)
 ;
"RTN","MAGTP007",338,0)
 ; Check first piece, then the other two
"RTN","MAGTP007",339,0)
 ;
"RTN","MAGTP007",340,0)
 S STAT=$P(LVAL,U)                             ; Station Number
"RTN","MAGTP007",341,0)
 S SITE=$$IEN^XUAF4(STAT)                      ; Supported IA #2171
"RTN","MAGTP007",342,0)
 I SITE="" D  Q
"RTN","MAGTP007",343,0)
 . S MAGRY(0)="0^0^"_ENTRY_" - Invalid Station Number"
"RTN","MAGTP007",344,0)
 ;
"RTN","MAGTP007",345,0)
 ; Check whether site is already there
"RTN","MAGTP007",346,0)
 ;
"RTN","MAGTP007",347,0)
 S DA=$$FIND1^DIC(SUBF,",1,","X",STAT)
"RTN","MAGTP007",348,0)
 ;
"RTN","MAGTP007",349,0)
 ; If not found and marked for deletion just quit
"RTN","MAGTP007",350,0)
 ;
"RTN","MAGTP007",351,0)
 I ('DA),('ACT) S MAGRY(0)="0^0^"_ENTRY_" - Not found" Q
"RTN","MAGTP007",352,0)
 ;
"RTN","MAGTP007",353,0)
 ; Delete entry if found and marked for deletion, then quit
"RTN","MAGTP007",354,0)
 ;
"RTN","MAGTP007",355,0)
 I DA,('ACT) D  Q
"RTN","MAGTP007",356,0)
 . S DA(1)=1
"RTN","MAGTP007",357,0)
 . S DIK="^MAG(2006.13,"_DA(1)_","_SUBS_","
"RTN","MAGTP007",358,0)
 . D ^DIK
"RTN","MAGTP007",359,0)
 . S MAGRY(0)="1^0^"_LABEL_" "_ENTRY_" - Deleted"
"RTN","MAGTP007",360,0)
 . Q
"RTN","MAGTP007",361,0)
 ;
"RTN","MAGTP007",362,0)
 ; If not found and marked for adding, set it
"RTN","MAGTP007",363,0)
 ;
"RTN","MAGTP007",364,0)
 I 'DA S MAGFDA(1,SUBF,"+1,1,",.01)=SITE
"RTN","MAGTP007",365,0)
 ;
"RTN","MAGTP007",366,0)
 ; If found, update the entries, otherwise add them
"RTN","MAGTP007",367,0)
 ;
"RTN","MAGTP007",368,0)
 S ADD=$S(DA:DA,1:"+1")                        ; Use found IEN or just add
"RTN","MAGTP007",369,0)
 ;
"RTN","MAGTP007",370,0)
 F I=2:1:3 D
"RTN","MAGTP007",371,0)
 . S VAL(I)=$P(LVAL,U,I)
"RTN","MAGTP007",372,0)
 . I VAL(I)="" S MAGRY(0)="0^0^"_ENTRY_" - Missing Entry" Q
"RTN","MAGTP007",373,0)
 . ; Check Type for Reading List
"RTN","MAGTP007",374,0)
 . I ((I=2)&(NUM=5)),(",0,1,2,"'[VAL(I)) D  Q
"RTN","MAGTP007",375,0)
 . . S MAGRY(0)="0^0^"_ENTRY_" - Invalid Site Type Entry"
"RTN","MAGTP007",376,0)
 . ; Convert to Site IEN for Acquisition List: Station number is given
"RTN","MAGTP007",377,0)
 . I ((I=2)&(NUM=6)) D
"RTN","MAGTP007",378,0)
 . . S VAL(I)=$$IEN^XUAF4(VAL(I))              ; Supported IA #2171
"RTN","MAGTP007",379,0)
 . . I VAL(I)="" S MAGRY(0)="0^0^"_ENTRY_" - Invalid Primary Station Number"
"RTN","MAGTP007",380,0)
 . . Q
"RTN","MAGTP007",381,0)
 . ; Check Active? entry
"RTN","MAGTP007",382,0)
 . I I=3,(",0,1,"'[VAL(I)) D  Q
"RTN","MAGTP007",383,0)
 . . S MAGRY(0)="0^0^"_ENTRY_" - Invalid 'Active?' Entry"
"RTN","MAGTP007",384,0)
 . S MAGFDA(1,SUBF,ADD_",1,",I/100)=VAL(I)
"RTN","MAGTP007",385,0)
 . Q
"RTN","MAGTP007",386,0)
 Q:($P($G(MAGRY(0)),U)=0)                      ; Quit if errors
"RTN","MAGTP007",387,0)
 D UPDATE^DIE("","MAGFDA(1)","","MAGERR")
"RTN","MAGTP007",388,0)
 ; Error handling
"RTN","MAGTP007",389,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP007",390,0)
 . K MAGRY
"RTN","MAGTP007",391,0)
 . S MAGRY(0)="0^0^Updating Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP007",392,0)
 . Q
"RTN","MAGTP007",393,0)
 I DA S MAGRY(0)="1^0^"_LABEL_" "_ENTRY_" - Updated" Q
"RTN","MAGTP007",394,0)
 S MAGRY(0)="1^0^"_LABEL_" "_ENTRY_" - Added"
"RTN","MAGTP007",395,0)
 Q  ;
"RTN","MAGTP007",396,0)
 ;
"RTN","MAGTP007",397,0)
 ;***** GET CONFIGURATION INFO FOR READING OR ACQUISITION SITES FROM FILE (#2006.13)
"RTN","MAGTP007",398,0)
 ; RPC: MAGTP GET SITE CONFIG
"RTN","MAGTP007",399,0)
 ;
"RTN","MAGTP007",400,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP007",401,0)
 ;               are returned to.
"RTN","MAGTP007",402,0)
 ;
"RTN","MAGTP007",403,0)
 ; ENT           Flag to denote the field number (0:Acquisition List, 1:Reading List)
"RTN","MAGTP007",404,0)
 ;
"RTN","MAGTP007",405,0)
 ; Return Values
"RTN","MAGTP007",406,0)
 ; =============
"RTN","MAGTP007",407,0)
 ;
"RTN","MAGTP007",408,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP007",409,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP007",410,0)
 ;
"RTN","MAGTP007",411,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP007",412,0)
 ;
"RTN","MAGTP007",413,0)
 ; MAGRY(0)     Description
"RTN","MAGTP007",414,0)
 ;                ^01: 1
"RTN","MAGTP007",415,0)
 ;                ^02: Total Number of Lines
"RTN","MAGTP007",416,0)
 ;                ^03: Label (Acquisition List/Reading List)
"RTN","MAGTP007",417,0)
 ;
"RTN","MAGTP007",418,0)
 ; MAGRY(i)     Description for Reading List:
"RTN","MAGTP007",419,0)
 ;                ^01: Active?
"RTN","MAGTP007",420,0)
 ;                ^02: Reading Site IEN
"RTN","MAGTP007",421,0)
 ;                ^03: Reading Station Number
"RTN","MAGTP007",422,0)
 ;                ^04: Reading Site Abbreviation
"RTN","MAGTP007",423,0)
 ;                ^05: Reading Site Name
"RTN","MAGTP007",424,0)
 ;                ^06: Type (0:Primary, 1:Consultation, 2:Both)
"RTN","MAGTP007",425,0)
 ;
"RTN","MAGTP007",426,0)
 ; MAGRY(i)     Description for Acquisition List:
"RTN","MAGTP007",427,0)
 ;                ^01: Active?
"RTN","MAGTP007",428,0)
 ;                ^02: Acquisition Site IEN
"RTN","MAGTP007",429,0)
 ;                ^03: Acquisition Station Number
"RTN","MAGTP007",430,0)
 ;                ^04: Acquisition Site Abbreviation
"RTN","MAGTP007",431,0)
 ;                ^05: Acquisition Site Name
"RTN","MAGTP007",432,0)
 ;                ^06: Primary Site IEN
"RTN","MAGTP007",433,0)
 ;                ^07: Primary Station Number
"RTN","MAGTP007",434,0)
 ;                ^08: Primary Site Abbreviation
"RTN","MAGTP007",435,0)
 ;                ^09: Primary Site Name
"RTN","MAGTP007",436,0)
 ;
"RTN","MAGTP007",437,0)
GETCONF(MAGRY,ENT)                             ; RPC [MAGTP GET SITE CONFIG]
"RTN","MAGTP007",438,0)
 K MAGRY
"RTN","MAGTP007",439,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP007",440,0)
 I $G(ENT)="" S MAGRY(0)="0^0^No Input" Q
"RTN","MAGTP007",441,0)
 N MAGOUT,MAGERR
"RTN","MAGTP007",442,0)
 N NUM,FIELD,LABEL,SUBF,CT,INDX,NIEN,N
"RTN","MAGTP007",443,0)
 N ACTIV,SITE,STAT,SSITE,NAME
"RTN","MAGTP007",444,0)
 N TYPE,PRIM,PSTAT,SPRIM,PNAME
"RTN","MAGTP007",445,0)
 S NUM=$S(ENT=0:6,ENT=1:5,1:"")                ; Field number
"RTN","MAGTP007",446,0)
 I 'NUM S MAGRY(0)="0^0^Invalid Field Number" Q 
"RTN","MAGTP007",447,0)
 D FIELD^DID(2006.13,NUM,"","SPECIFIER;LABEL","FIELD")
"RTN","MAGTP007",448,0)
 S LABEL=FIELD("LABEL")
"RTN","MAGTP007",449,0)
 S SUBF=+FIELD("SPECIFIER")
"RTN","MAGTP007",450,0)
 D GETS^DIQ(2006.13,"1,",NUM_"*","IE","MAGOUT","MAGERR")
"RTN","MAGTP007",451,0)
 I $D(MAGERR) S MAGRY(0)="0^0^Access Error: "_MAGERR("DIERR",1,"TEXT",1) Q
"RTN","MAGTP007",452,0)
 S CT=0
"RTN","MAGTP007",453,0)
 K INDX
"RTN","MAGTP007",454,0)
 S NIEN=""
"RTN","MAGTP007",455,0)
 F  S NIEN=$O(MAGOUT(SUBF,NIEN)) Q:NIEN=""  D
"RTN","MAGTP007",456,0)
 . S INDX($P(NIEN,","))=""
"RTN","MAGTP007",457,0)
 S N="" F  S N=$O(INDX(N)) Q:N=""  D           ; NIEN may be ordered incorrectly
"RTN","MAGTP007",458,0)
 . S NIEN=N_",1,"
"RTN","MAGTP007",459,0)
 . S CT=CT+1
"RTN","MAGTP007",460,0)
 . S ACTIV=MAGOUT(SUBF,NIEN,.03,"I")           ; Is it active (0:"NO", 1:"YES")
"RTN","MAGTP007",461,0)
 . S SITE=MAGOUT(SUBF,NIEN,.01,"I")            ; Site Number
"RTN","MAGTP007",462,0)
 . S STAT=$$STA^XUAF4(SITE)                    ; Supported IA #2171 ; Station Number
"RTN","MAGTP007",463,0)
 . S SSITE=$$GETABBR^MAGTP008(SITE)            ; Site Abbreviation if present  
"RTN","MAGTP007",464,0)
 . S NAME=MAGOUT(SUBF,NIEN,.01,"E")            ;Site Name
"RTN","MAGTP007",465,0)
 . S MAGRY(CT)=ACTIV_U_SITE_U_STAT_U_SSITE_U_NAME  ; First data pieces
"RTN","MAGTP007",466,0)
 . I NUM=5 D  Q                                ; For Reading Site List stop here
"RTN","MAGTP007",467,0)
 . . S TYPE=MAGOUT(SUBF,NIEN,.02,"I")          ; Site Type (0:Primary, 1:Consultation, 2:Both)
"RTN","MAGTP007",468,0)
 . . S MAGRY(CT)=MAGRY(CT)_U_TYPE
"RTN","MAGTP007",469,0)
 . . Q
"RTN","MAGTP007",470,0)
 . S PRIM=MAGOUT(SUBF,NIEN,.02,"I")            ; Primary Site Number
"RTN","MAGTP007",471,0)
 . S PSTAT=$$STA^XUAF4(PRIM)                   ; Supported IA #2171 ; Primary Station Number
"RTN","MAGTP007",472,0)
 . S SPRIM=$$GETABBR^MAGTP008(PRIM)            ; Primary Site Abbreviation if present
"RTN","MAGTP007",473,0)
 . S PNAME=MAGOUT(SUBF,NIEN,.02,"E")           ; Primary Site Name
"RTN","MAGTP007",474,0)
 . S MAGRY(CT)=MAGRY(CT)_U_PRIM_U_PSTAT_U_SPRIM_U_PNAME  ; Add Primary data pieces
"RTN","MAGTP007",475,0)
 . Q
"RTN","MAGTP007",476,0)
 S MAGRY(0)="1^"_CT_U_LABEL
"RTN","MAGTP007",477,0)
 Q  ;
"RTN","MAGTP008")
0^13^B55780430
"RTN","MAGTP008",1,0)
MAGTP008 ;WOIFO/FG,MLH,JSL - TELEPATHOLOGY TAGS ; 17 Apr 2013 2:52 PM
"RTN","MAGTP008",2,0)
 ;;3.0;IMAGING;**138**;Mar 19, 2002;Build 4;Jan 15, 2013
"RTN","MAGTP008",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGTP008",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP008",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGTP008",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGTP008",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGTP008",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGTP008",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGTP008",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGTP008",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGTP008",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGTP008",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGTP008",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGTP008",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGTP008",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP008",17,0)
 ;;
"RTN","MAGTP008",18,0)
 Q  ;
"RTN","MAGTP008",19,0)
 ;
"RTN","MAGTP008",20,0)
 ;***** INITIALIZE SESSION (COLLECT USER INFO)
"RTN","MAGTP008",21,0)
 ;      SEE USERINF2^MAGJUTL3
"RTN","MAGTP008",22,0)
 ; RPC: MAGTP GET USER
"RTN","MAGTP008",23,0)
 ;
"RTN","MAGTP008",24,0)
 ; .MAGRY      Reference to a variable naming the global to store returned data
"RTN","MAGTP008",25,0)
 ;
"RTN","MAGTP008",26,0)
 ; Input Parameters
"RTN","MAGTP008",27,0)
 ; ================
"RTN","MAGTP008",28,0)
 ; N/A
"RTN","MAGTP008",29,0)
 ;
"RTN","MAGTP008",30,0)
 ; Return Values
"RTN","MAGTP008",31,0)
 ; =============
"RTN","MAGTP008",32,0)
 ;
"RTN","MAGTP008",33,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP008",34,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP008",35,0)
 ;
"RTN","MAGTP008",36,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP008",37,0)
 ;
"RTN","MAGTP008",38,0)
 ; MAGRY(0)     Description
"RTN","MAGTP008",39,0)
 ;                ^01: DUZ
"RTN","MAGTP008",40,0)
 ;                ^02: NAME
"RTN","MAGTP008",41,0)
 ;                ^03: INITIALS
"RTN","MAGTP008",42,0)
 ;                ^04: SSN
"RTN","MAGTP008",43,0)
 ;                ^05: UserLocalStationNumber
"RTN","MAGTP008",44,0)
 ;                ^06: PrimarySiteStationNumber
"RTN","MAGTP008",45,0)
 ;                ^07: SiteServiceURL
"RTN","MAGTP008",46,0)
 ;                ^08: SiteCode
"RTN","MAGTP008",47,0)
 ;                ^09: SiteName
"RTN","MAGTP008",48,0)
 ;                ^10: Production account? 0:"NO",1:"YES"
"RTN","MAGTP008",49,0)
 ;
"RTN","MAGTP008",50,0)
 ; MAGRY(1:N)    Description
"RTN","MAGTP008",51,0)
 ;                 LAB DATA file (#63) Security Keys
"RTN","MAGTP008",52,0)
 ;
"RTN","MAGTP008",53,0)
USERINF(MAGRY) ; RPC [MAGTP GET USER]
"RTN","MAGTP008",54,0)
 K MAGRY
"RTN","MAGTP008",55,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP008",56,0)
 I +$G(DUZ)=0 S MAGRY(0)="0^0^DUZ Undefined, Null or Zero" Q
"RTN","MAGTP008",57,0)
 I +$G(DUZ(2))=0 S MAGRY(0)="0^0^DUZ(2) Undefined, Null or Zero" Q
"RTN","MAGTP008",58,0)
 N MAGPL,SSUNC,VIXPTR,KEY,CT
"RTN","MAGTP008",59,0)
 ;
"RTN","MAGTP008",60,0)
 S MAGRY(0)=DUZ_U_$$GET1^DIQ(200,DUZ_",",.01)_U_$$GET1^DIQ(200,DUZ_",",1)  ; IA #10060
"RTN","MAGTP008",61,0)
 ;
"RTN","MAGTP008",62,0)
 ; Add pieces ^04:^06 for VIX
"RTN","MAGTP008",63,0)
 S MAGRY(0)=MAGRY(0)_U_$$GET1^DIQ(200,DUZ_",",9)  ;...SSN                  ; IA #10060
"RTN","MAGTP008",64,0)
 S MAGRY(0)=MAGRY(0)_U_$$GET1^DIQ(4,DUZ(2),99,"E")  ;.UserLocalStationNumber
"RTN","MAGTP008",65,0)
 S MAGRY(0)=MAGRY(0)_U_$P($$SITE^VASITE(),U,3)  ;.....PrimarySiteStationNumber
"RTN","MAGTP008",66,0)
 ;
"RTN","MAGTP008",67,0)
 ; Lookup SiteServiceURL
"RTN","MAGTP008",68,0)
 S MAGPL=$$PLACE^MAGBAPI(+$G(DUZ(2)))          ; Get place for DUZ(2)
"RTN","MAGTP008",69,0)
 S VIXPTR=$$GET1^DIQ(2006.1,MAGPL,55,"I")      ; Net site service
"RTN","MAGTP008",70,0)
 ;
"RTN","MAGTP008",71,0)
 ; Return UNC only if OpStatus is 'online'
"RTN","MAGTP008",72,0)
 I VIXPTR,+$$GET1^DIQ(2005.2,VIXPTR,5,"I") D
"RTN","MAGTP008",73,0)
 . S SSUNC=$$GET1^DIQ(2005.2,VIXPTR,1)
"RTN","MAGTP008",74,0)
 S MAGRY(0)=MAGRY(0)_U_$G(SSUNC)  ;...................SiteServiceURL
"RTN","MAGTP008",75,0)
 S MAGRY(0)=MAGRY(0)_U_$$GET1^DIQ(2006.1,MAGPL,.09)  ;SiteCode
"RTN","MAGTP008",76,0)
 S MAGRY(0)=MAGRY(0)_U_$$GET1^DIQ(2006.1,MAGPL,.01)  ;SiteName
"RTN","MAGTP008",77,0)
 S MAGRY(0)=MAGRY(0)_U_$S($L($T(PROD^XUPROD)):+$$PROD^XUPROD,1:0)  ; IA #4440
"RTN","MAGTP008",78,0)
 ;
"RTN","MAGTP008",79,0)
 ; KEYS
"RTN","MAGTP008",80,0)
 S KEY="LR",CT=0                               ; Find LAB DATA file keys
"RTN","MAGTP008",81,0)
 F  S KEY=$O(^XUSEC(KEY)) Q:$E(KEY,1,2)'="LR"  D     ; IA #10076
"RTN","MAGTP008",82,0)
 . I $D(^XUSEC(KEY,DUZ)) S CT=CT+1,MAGRY(CT)=KEY     ; IA #10076
"RTN","MAGTP008",83,0)
 Q  ;
"RTN","MAGTP008",84,0)
 ;
"RTN","MAGTP008",85,0)
 ;***** GET ALL AVAILABLE SITES FROM THE INSTITUTIONS FILE (#4)
"RTN","MAGTP008",86,0)
 ; RPC: MAGTP GET SITES
"RTN","MAGTP008",87,0)
 ;
"RTN","MAGTP008",88,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP008",89,0)
 ;               are returned to.
"RTN","MAGTP008",90,0)
 ;
"RTN","MAGTP008",91,0)
 ; Input Parameters
"RTN","MAGTP008",92,0)
 ; ================
"RTN","MAGTP008",93,0)
 ; N/A
"RTN","MAGTP008",94,0)
 ;
"RTN","MAGTP008",95,0)
 ; Return Values
"RTN","MAGTP008",96,0)
 ; =============
"RTN","MAGTP008",97,0)
 ;
"RTN","MAGTP008",98,0)
 ; If @MAGRY@(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP008",99,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP008",100,0)
 ;
"RTN","MAGTP008",101,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP008",102,0)
 ;
"RTN","MAGTP008",103,0)
 ; @MAGRY@(0)   Description
"RTN","MAGTP008",104,0)
 ;                ^01: 1
"RTN","MAGTP008",105,0)
 ;                ^02: Total Number of Lines
"RTN","MAGTP008",106,0)
 ;                ^03: "Site Number"
"RTN","MAGTP008",107,0)
 ;                ^04: "Site Name"
"RTN","MAGTP008",108,0)
 ;                ^05: "Station Number"
"RTN","MAGTP008",109,0)
 ;                ^06: "Site Abbreviation"
"RTN","MAGTP008",110,0)
 ;
"RTN","MAGTP008",111,0)
 ; @MAGRY@(i)   Description
"RTN","MAGTP008",112,0)
 ;                ^01: Site Number
"RTN","MAGTP008",113,0)
 ;                ^02: Site Name
"RTN","MAGTP008",114,0)
 ;                ^03: Station Number
"RTN","MAGTP008",115,0)
 ;                ^04: Site Abbreviation
"RTN","MAGTP008",116,0)
 ;                      
"RTN","MAGTP008",117,0)
 ; Notes
"RTN","MAGTP008",118,0)
 ; =====
"RTN","MAGTP008",119,0)
 ;
"RTN","MAGTP008",120,0)
 ; The ^TMP("MAGTP",$J,"AC") global node is used by this procedure
"RTN","MAGTP008",121,0)
 ; if the count (CT) gets too large (CT>100).
"RTN","MAGTP008",122,0)
 ;
"RTN","MAGTP008",123,0)
GETSITES(MAGRY) ; RPC [MAGTP GET SITES]
"RTN","MAGTP008",124,0)
 K MAGRY
"RTN","MAGTP008",125,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP008",126,0)
 N MAGOUT,MAGERR,CT,I,ABBR
"RTN","MAGTP008",127,0)
 S MAGRY="MAGRY"
"RTN","MAGTP008",128,0)
 D LIST^DIC(4,"","@;.01;99","UP","","","","","","","MAGOUT","MAGERR")
"RTN","MAGTP008",129,0)
 I $D(MAGERR) S MAGRY(0)="Access Error: "_MAGERR("DIERR",1,"TEXT",1) Q
"RTN","MAGTP008",130,0)
 S CT=+MAGOUT("DILIST",0)
"RTN","MAGTP008",131,0)
 I CT>100 D ARY2GLB^MAGTP009(.MAGRY)
"RTN","MAGTP008",132,0)
 F I=1:1:CT D
"RTN","MAGTP008",133,0)
 . S @MAGRY@(I)=MAGOUT("DILIST",I,0)
"RTN","MAGTP008",134,0)
 . S ABBR=$$GETABBR^MAGTP008($P(@MAGRY@(I),U))
"RTN","MAGTP008",135,0)
 . S @MAGRY@(I)=@MAGRY@(I)_U_ABBR              ; Add Site Abbreviation
"RTN","MAGTP008",136,0)
 . Q
"RTN","MAGTP008",137,0)
 S @MAGRY@(0)="1^"_CT_"^Site Number^Site Name^Station Number^Abbreviation"
"RTN","MAGTP008",138,0)
 Q  ;
"RTN","MAGTP008",139,0)
 ;
"RTN","MAGTP008",140,0)
 ;***** CHANGE AN INTERPRETATION/CONSULTATION STATUS: UPDATE FILE (#2005.43)
"RTN","MAGTP008",141,0)
 ; RPC: MAGTP CHANGE CONS STATUS
"RTN","MAGTP008",142,0)
 ;
"RTN","MAGTP008",143,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP008",144,0)
 ;               are returned to.
"RTN","MAGTP008",145,0)
 ;
"RTN","MAGTP008",146,0)
 ; CIEN          IEN of the interpretation/consultation to be updated
"RTN","MAGTP008",147,0)
 ;
"RTN","MAGTP008",148,0)
 ; STATUS        Status of the interpretation/consultation (0:PENDING,
"RTN","MAGTP008",149,0)
 ;               1:COMPLETED, 2:REFUSED or 3:RECALLED)
"RTN","MAGTP008",150,0)
 ;
"RTN","MAGTP008",151,0)
 ; Return Values
"RTN","MAGTP008",152,0)
 ; =============
"RTN","MAGTP008",153,0)
 ;
"RTN","MAGTP008",154,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP008",155,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP008",156,0)
 ;
"RTN","MAGTP008",157,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP008",158,0)
 ;
"RTN","MAGTP008",159,0)
 ; MAGRY(0)     Description
"RTN","MAGTP008",160,0)
 ;                ^01: 1
"RTN","MAGTP008",161,0)
 ;                ^02: 0
"RTN","MAGTP008",162,0)
 ;                ^03: Status updated for <CIEN>
"RTN","MAGTP008",163,0)
 ;
"RTN","MAGTP008",164,0)
CHNGSTAT(MAGRY,CIEN,STATUS) ; RPC [MAGTP CHANGE CONS STATUS]
"RTN","MAGTP008",165,0)
 K MAGRY
"RTN","MAGTP008",166,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP008",167,0)
 I $G(CIEN)="" D  Q
"RTN","MAGTP008",168,0)
 . S MAGRY(0)="0^0^Missing Consultation/Interpretation IEN"
"RTN","MAGTP008",169,0)
 I ",0,1,2,3,"'[$G(STATUS) D  Q                ; If 0,1,2,3 update
"RTN","MAGTP008",170,0)
 . S MAGRY(0)="0^0^Invalid Status"
"RTN","MAGTP008",171,0)
 N FILE,MAGFDA,MAGERR
"RTN","MAGTP008",172,0)
 I $G(STATUS)="" S STATUS=0                    ; Default to 0:PENDING
"RTN","MAGTP008",173,0)
 S FILE=2005.43
"RTN","MAGTP008",174,0)
 I '$D(^MAG(FILE,CIEN)) D  Q
"RTN","MAGTP008",175,0)
 . S MAGRY(0)="0^0^Invalid Consultation/Interpretation IEN"
"RTN","MAGTP008",176,0)
 ; Recall only if pending
"RTN","MAGTP008",177,0)
 I +$$GET1^DIQ(FILE,CIEN_",",.06,"I"),(STATUS=3) D  Q
"RTN","MAGTP008",178,0)
 . S MAGRY(0)="0^0^Record "_CIEN_" is not PENDING"
"RTN","MAGTP008",179,0)
 S MAGFDA(FILE,CIEN_",",.06)=STATUS
"RTN","MAGTP008",180,0)
 D UPDATE^DIE("","MAGFDA","","MAGERR")
"RTN","MAGTP008",181,0)
 I $D(MAGERR) S MAGRY(0)="0^0^"_MAGERR("DIERR",1,"TEXT",1) Q
"RTN","MAGTP008",182,0)
 S MAGRY(0)="1^0^Status updated for "_CIEN
"RTN","MAGTP008",183,0)
 Q  ;
"RTN","MAGTP008",184,0)
 ;
"RTN","MAGTP008",185,0)
 ;***** SET/UNSET A SECOND LOGICAL LOCK ON A RECORD
"RTN","MAGTP008",186,0)
 ; RPC: MAGTP SECOND LOCK
"RTN","MAGTP008",187,0)
 ;
"RTN","MAGTP008",188,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP008",189,0)
 ;               are returned to.
"RTN","MAGTP008",190,0)
 ;
"RTN","MAGTP008",191,0)
 ; LFLAG         Flag that controls whether to lock or unlock
"RTN","MAGTP008",192,0)
 ;               (0:Unlocked, 1:Locked)
"RTN","MAGTP008",193,0)
 ;
"RTN","MAGTP008",194,0)
 ; LRSS          AP Section
"RTN","MAGTP008",195,0)
 ;
"RTN","MAGTP008",196,0)
 ; YEAR          Accession Year (Two figures)
"RTN","MAGTP008",197,0)
 ;
"RTN","MAGTP008",198,0)
 ; LRAN          Accession Number
"RTN","MAGTP008",199,0)
 ;
"RTN","MAGTP008",200,0)
 ; Return Values
"RTN","MAGTP008",201,0)
 ; =============
"RTN","MAGTP008",202,0)
 ;
"RTN","MAGTP008",203,0)
 ; If MAGRY(0) 1st '^'-piece is < 0, then an error
"RTN","MAGTP008",204,0)
 ; occurred during execution of the procedure: [code]^^[ERROR explanation]
"RTN","MAGTP008",205,0)
 ;
"RTN","MAGTP008",206,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP008",207,0)
 ;
"RTN","MAGTP008",208,0)
 ; MAGRY(0)     Description
"RTN","MAGTP008",209,0)
 ;                ^01: 1
"RTN","MAGTP008",210,0)
 ;                ^02: 0 if file unlocked, 1 if file locked
"RTN","MAGTP008",211,0)
 ;                ^03: "File Locked"/"File Unlocked"
"RTN","MAGTP008",212,0)
 ;              -5^^Update error [Fileman error text]
"RTN","MAGTP008",213,0)
 ;              -4^^One or more input parameters are missing
"RTN","MAGTP008",214,0)
 ;              -3^^No accession code for this case
"RTN","MAGTP008",215,0)
 ;              -2^^File locked by [user] since [date-time]         
"RTN","MAGTP008",216,0)
 ;              -1^^ERROR [MUMPS error]
"RTN","MAGTP008",217,0)
 ;               0^0^File unlocked
"RTN","MAGTP008",218,0)
 ;               0^1^File locked
"RTN","MAGTP008",219,0)
 ;                     
"RTN","MAGTP008",220,0)
 ;
"RTN","MAGTP008",221,0)
SECNLOCK(MAGRY,LFLAG,LRSS,YEAR,LRAN) ; RPC [MAGTP SECOND LOCK]
"RTN","MAGTP008",222,0)
 K MAGRY
"RTN","MAGTP008",223,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGUTERR"
"RTN","MAGTP008",224,0)
 I $G(LRSS)=""!($G(YEAR)="")!($G(LRAN)="") D  Q
"RTN","MAGTP008",225,0)
 . S MAGRY(0)="-4^^One or more input parameters are missing"
"RTN","MAGTP008",226,0)
 . Q
"RTN","MAGTP008",227,0)
 N INPUT
"RTN","MAGTP008",228,0)
 S INPUT=$$CONTEXT^MAGTP006(.MAGRY,LRSS,YEAR,LRAN) Q:'MAGRY(0)
"RTN","MAGTP008",229,0)
 N MAGFDA,MAGERR
"RTN","MAGTP008",230,0)
 N LRAC,REC,ISLOCK,LDT,LDUZ
"RTN","MAGTP008",231,0)
 N LUSER,NOW,MINS,EXP
"RTN","MAGTP008",232,0)
 N TEXT
"RTN","MAGTP008",233,0)
 D FIND^MAGUE008(.LRAC,LRSS,$P(INPUT,",",3),$P(INPUT,",",2))
"RTN","MAGTP008",234,0)
 I $G(LRAC)="" S MAGRY(0)="-3^^No Accession Code for this case" Q
"RTN","MAGTP008",235,0)
 S REC=$O(^MAG(2005.42,"B",LRAC,""))_","       ; Record number
"RTN","MAGTP008",236,0)
 ;
"RTN","MAGTP008",237,0)
 ; Lock Variables
"RTN","MAGTP008",238,0)
 ;
"RTN","MAGTP008",239,0)
 S ISLOCK=+$$GET1^DIQ(2005.42,REC,2,"I")       ; Is it locked?
"RTN","MAGTP008",240,0)
 S LDT=$$GET1^DIQ(2005.42,REC,2.1,"I")         ; Date/Time locked
"RTN","MAGTP008",241,0)
 S LDUZ=$$GET1^DIQ(2005.42,REC,2.2,"I")        ; User's DUZ in lock
"RTN","MAGTP008",242,0)
 S LUSER=$$GET1^DIQ(2005.42,REC,2.2)           ; User's Name for above DUZ
"RTN","MAGTP008",243,0)
 S MINS=+$$GET1^DIQ(2006.13,"1,",4)            ; How many minutes before ignoring lock
"RTN","MAGTP008",244,0)
 S NOW=+$$NOW^XLFDT                            ; NOW in internal format
"RTN","MAGTP008",245,0)
 S EXP=+$$FMADD^XLFDT(LDT,0,0,MINS)            ; Add MINS to LDT
"RTN","MAGTP008",246,0)
 ;
"RTN","MAGTP008",247,0)
 ; If 1) Not a superuser
"RTN","MAGTP008",248,0)
 ;    2) Lock in place
"RTN","MAGTP008",249,0)
 ;    3) Locking user not present user
"RTN","MAGTP008",250,0)
 ;    4) Lock not expired
"RTN","MAGTP008",251,0)
 ; Then do not update existing lock
"RTN","MAGTP008",252,0)
 ;
"RTN","MAGTP008",253,0)
 I '$D(^XUSEC("LRAPSUPER",DUZ)),ISLOCK,(DUZ'=LDUZ),(NOW'>EXP) D  Q  ; IA #10076
"RTN","MAGTP008",254,0)
 . S MAGRY(0)="-2^^File Locked by "_LUSER_" Since "_$TR($$FMTE^XLFDT(LDT,"5Z"),"@"," ")
"RTN","MAGTP008",255,0)
 . Q
"RTN","MAGTP008",256,0)
 ;
"RTN","MAGTP008",257,0)
 ; Otherwise update lock record with present user's data
"RTN","MAGTP008",258,0)
 ;
"RTN","MAGTP008",259,0)
 S MAGFDA(2005.42,REC,2)=LFLAG
"RTN","MAGTP008",260,0)
 S MAGFDA(2005.42,REC,2.1)=$S(LFLAG:$$NOW^XLFDT,1:"")
"RTN","MAGTP008",261,0)
 S MAGFDA(2005.42,REC,2.2)=$S(LFLAG:DUZ,1:"")
"RTN","MAGTP008",262,0)
 D UPDATE^DIE("","MAGFDA","","MAGERR")
"RTN","MAGTP008",263,0)
 I $D(MAGERR) S MAGRY(0)="-5^^Update Error: "_MAGERR("DIERR",1,"TEXT",1) Q
"RTN","MAGTP008",264,0)
 S MAGRY(0)="0^"_$S(LFLAG:"1^File Locked",1:"0^File Unlocked")
"RTN","MAGTP008",265,0)
Q  ;
"RTN","MAGTP008",266,0)
 ;
"RTN","MAGTP008",267,0)
 ;+++++ GET THE ABBREVIATION FOR A SITE IEN FROM FILE (#2006.19)
"RTN","MAGTP008",268,0)
 ;
"RTN","MAGTP008",269,0)
 ; SITE          Site Number (IEN)
"RTN","MAGTP008",270,0)
 ;
"RTN","MAGTP008",271,0)
 ; Return Value
"RTN","MAGTP008",272,0)
 ; ============
"RTN","MAGTP008",273,0)
 ;
"RTN","MAGTP008",274,0)
 ; ABBR          Abbreviation for SITE
"RTN","MAGTP008",275,0)
 ;
"RTN","MAGTP008",276,0)
GETABBR(SITE) ;
"RTN","MAGTP008",277,0)
 Q:'$G(SITE) ""
"RTN","MAGTP008",278,0)
 N MAGREC,ABBR
"RTN","MAGTP008",279,0)
 S MAGREC=$O(^MAG(2006.19,"D",SITE,""))
"RTN","MAGTP008",280,0)
 S ABBR=$S(MAGREC:$P($G(^MAG(2006.19,MAGREC,0)),U,4),1:"")
"RTN","MAGTP008",281,0)
 Q ABBR
"RTN","MAGTP009")
0^14^B37447235
"RTN","MAGTP009",1,0)
MAGTP009 ;WOIFO/FG,MLH,JSL - TELEPATHOLOGY TAGS ; 26 Jul 2013 11:24 AM
"RTN","MAGTP009",2,0)
 ;;3.0;IMAGING;**138**;Mar 19, 2002;Build 4;Jul 24, 2013
"RTN","MAGTP009",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGTP009",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP009",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGTP009",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGTP009",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGTP009",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGTP009",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGTP009",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGTP009",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGTP009",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGTP009",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGTP009",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGTP009",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGTP009",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP009",17,0)
 ;;
"RTN","MAGTP009",18,0)
 Q  ;
"RTN","MAGTP009",19,0)
 ;
"RTN","MAGTP009",20,0)
 ;+++++ GET CASE INFO, SET OUTPUT
"RTN","MAGTP009",21,0)
 ;
"RTN","MAGTP009",22,0)
 ; LRSS          AP Section
"RTN","MAGTP009",23,0)
 ;
"RTN","MAGTP009",24,0)
 ; LRAC          Accession Code for the case
"RTN","MAGTP009",25,0)
 ;
"RTN","MAGTP009",26,0)
 ; LRSF          AP Section Subfield Number
"RTN","MAGTP009",27,0)
 ;
"RTN","MAGTP009",28,0)
 ; IEN           Internal Entry Number String in the Subfield
"RTN","MAGTP009",29,0)
 ;
"RTN","MAGTP009",30,0)
 ; REC           Record number in file (#2005.42)
"RTN","MAGTP009",31,0)
 ;
"RTN","MAGTP009",32,0)
 ; FLAG          Flag to select reports:
"RTN","MAGTP009",33,0)
 ;
"RTN","MAGTP009",34,0)
 ;                  0:Unreleased reports
"RTN","MAGTP009",35,0)
 ;
"RTN","MAGTP009",36,0)
 ;                  1:Released reports
"RTN","MAGTP009",37,0)
 ;
"RTN","MAGTP009",38,0)
 ; PNM           Patient Name
"RTN","MAGTP009",39,0)
 ;
"RTN","MAGTP009",40,0)
 ; DFN           Patient ID
"RTN","MAGTP009",41,0)
 ;
"RTN","MAGTP009",42,0)
 ; Return Values
"RTN","MAGTP009",43,0)
 ; =============
"RTN","MAGTP009",44,0)
 ;
"RTN","MAGTP009",45,0)
 ; OUTPUT       Description
"RTN","MAGTP009",46,0)
 ;                ^01: Reserved Flag
"RTN","MAGTP009",47,0)
 ;                ^02: Reserved By (Initials + '-' + DUZ)
"RTN","MAGTP009",48,0)
 ;                ^03: Patient's Name
"RTN","MAGTP009",49,0)
 ;                ^04: Patients's ID
"RTN","MAGTP009",50,0)
 ;                ^05: Priority
"RTN","MAGTP009",51,0)
 ;                ^06: Slide Available
"RTN","MAGTP009",52,0)
 ;                ^07: Specimen Taken Date/Time
"RTN","MAGTP009",53,0)
 ;                ^08: Report Status
"RTN","MAGTP009",54,0)
 ;                ^09: Site Location (Abbr.)
"RTN","MAGTP009",55,0)
 ;                ^10: AP Section
"RTN","MAGTP009",56,0)
 ;                ^11: Year
"RTN","MAGTP009",57,0)
 ;                ^12: Accession Number
"RTN","MAGTP009",58,0)
 ;                ^13: ICN
"RTN","MAGTP009",59,0)
 ;                ^14: Specimen Count
"RTN","MAGTP009",60,0)
 ;                ^15: Reading Method
"RTN","MAGTP009",61,0)
 ;                ^16: Patient's Short ID
"RTN","MAGTP009",62,0)
 ;                ^17: Is there a note? (Yes/No)
"RTN","MAGTP009",63,0)
 ;                ^18: Employee/Sensitive (1=Yes/0=No)
"RTN","MAGTP009",64,0)
 ;                ^19: Number of image(s) #2005.42 node 0, piece 14th
"RTN","MAGTP009",65,0)
GETCASE(LRSS,LRAC,LRSF,IEN,REC,FLAG,PNM,DFN) ;
"RTN","MAGTP009",66,0)
 N OUTPUT,LOCK,USER,USERINI,PRI,SLIDE,COMPL,STATUS,LOC,RDATE
"RTN","MAGTP009",67,0)
 N ICN,SUBF,MAGOUT,SPCT,METH,SSN,SHORTID,ISNOTE,EMPSENS,NIMG
"RTN","MAGTP009",68,0)
 S LOCK=+$$GET1^DIQ(2005.42,REC,1,"I")         ; Get reservation info
"RTN","MAGTP009",69,0)
 S USER=$$GET1^DIQ(2005.42,REC,1.2,"I")        ; User in reservation lock
"RTN","MAGTP009",70,0)
 S USERINI=$$GET1^DIQ(200,USER,1)_"-"_USER     ; User's initials & DUZ in lock ; IA #10060
"RTN","MAGTP009",71,0)
 S PRI=$$GET1^DIQ(2005.42,REC,.02)             ; Get priority
"RTN","MAGTP009",72,0)
 S SLIDE=$$GET1^DIQ(2005.42,REC,.03)           ; Get "Slide Available?" flag
"RTN","MAGTP009",73,0)
 S OUTPUT=LOCK_U_USERINI_U_PNM_U_$G(DFN)_U_PRI_U_SLIDE
"RTN","MAGTP009",74,0)
 S NIMG=$P($G(^MAG(2005.42,REC,0)),U,14)      ; Get number of image(s) if any
"RTN","MAGTP009",75,0)
 ; Get Date/Time Specimen Taken (MM/DD/YYYY hh:mm)
"RTN","MAGTP009",76,0)
 ;
"RTN","MAGTP009",77,0)
 S OUTPUT=OUTPUT_U_$TR($$FMTE^XLFDT($$GET1^DIQ(LRSF,IEN,.01,"I"),"5Z"),"@"," ")
"RTN","MAGTP009",78,0)
 ;
"RTN","MAGTP009",79,0)
 ; Get Report Status
"RTN","MAGTP009",80,0)
 ;
"RTN","MAGTP009",81,0)
 S COMPL=$S($$GET1^DIQ(LRSF,IEN,.03,"I"):1,1:0)  ; Report completed?
"RTN","MAGTP009",82,0)
 S RDATE=+$$GET1^DIQ(LRSF,IEN,.11,"I")           ; Release Date?
"RTN","MAGTP009",83,0)
 S STATUS=$S(('RDATE&'COMPL):"In Progress",('RDATE&COMPL):"Pending Verification",1:"Released")
"RTN","MAGTP009",84,0)
 ;
"RTN","MAGTP009",85,0)
 ; Get Location (Abbr.)
"RTN","MAGTP009",86,0)
 ;
"RTN","MAGTP009",87,0)
 I $G(DUZ(2)) S LOC=$$GETABBR^MAGTP008(DUZ(2))
"RTN","MAGTP009",88,0)
 ;
"RTN","MAGTP009",89,0)
 S OUTPUT=OUTPUT_U_STATUS_U_$G(LOC)
"RTN","MAGTP009",90,0)
 ;
"RTN","MAGTP009",91,0)
 ; Extract ICN
"RTN","MAGTP009",92,0)
 ; Extract YEAR and AN from LRAC
"RTN","MAGTP009",93,0)
 ;
"RTN","MAGTP009",94,0)
 S ICN=$$GETICN^MAGUE006($G(DFN),",") ; delimit return value with commas
"RTN","MAGTP009",95,0)
 S OUTPUT=OUTPUT_U_LRSS_U_$E(LRAC,4,5)_U_$E(LRAC,7,$L(LRAC))_U_ICN
"RTN","MAGTP009",96,0)
 ;
"RTN","MAGTP009",97,0)
 ; Extract specimen count
"RTN","MAGTP009",98,0)
 ;
"RTN","MAGTP009",99,0)
 S SUBF=+$$GET1^DID(LRSF,.012,"","SPECIFIER")  ; Subfield for Specimens
"RTN","MAGTP009",100,0)
 D LIST^DIC(SUBF,","_IEN,"@;.01","P","","","","","","","MAGOUT")
"RTN","MAGTP009",101,0)
 S SPCT=+$G(MAGOUT("DILIST",0))
"RTN","MAGTP009",102,0)
 S OUTPUT=OUTPUT_U_SPCT
"RTN","MAGTP009",103,0)
 ;
"RTN","MAGTP009",104,0)
 ; Extract reading Method
"RTN","MAGTP009",105,0)
 ;
"RTN","MAGTP009",106,0)
 S METH=$$GET1^DIQ(2005.42,REC_",",.04)
"RTN","MAGTP009",107,0)
 ;
"RTN","MAGTP009",108,0)
 ; Extract Short ID (Last name's initial plus last four figures of SSN)
"RTN","MAGTP009",109,0)
 ;
"RTN","MAGTP009",110,0)
 S SSN=$$GET1^DIQ(2,$G(DFN)_",",.09)               ; Supported IA #10035
"RTN","MAGTP009",111,0)
 S OUTPUT=OUTPUT_U_METH_U_SSN
"RTN","MAGTP009",112,0)
 ;
"RTN","MAGTP009",113,0)
 ; Is there a Note attached to this case?
"RTN","MAGTP009",114,0)
 ;
"RTN","MAGTP009",115,0)
 S REC=$TR(REC,",")                            ; Strip comma
"RTN","MAGTP009",116,0)
 S:REC ISNOTE=$S($D(^MAG(2005.42,REC,1,1,0)):"YES",1:"NO")
"RTN","MAGTP009",117,0)
 S OUTPUT=OUTPUT_U_$G(ISNOTE,"NO")
"RTN","MAGTP009",118,0)
 ;
"RTN","MAGTP009",119,0)
 ; Is the patient an employee or sensitive?
"RTN","MAGTP009",120,0)
 ; 
"RTN","MAGTP009",121,0)
 D EMPSENS^MAGUE007(.EMPSENS,$G(DFN))
"RTN","MAGTP009",122,0)
 S EMPSENS=$P($G(EMPSENS(0)),"^",1)
"RTN","MAGTP009",123,0)
 S OUTPUT=OUTPUT_U_$S(EMPSENS>0:1,1:EMPSENS),OUTPUT=OUTPUT_U_NIMG
"RTN","MAGTP009",124,0)
 Q OUTPUT ;
"RTN","MAGTP009",125,0)
 ;
"RTN","MAGTP009",126,0)
 ;+++++ IF COUNT (CT) IS GETTING LARGE, SWITCH
"RTN","MAGTP009",127,0)
 ;      FROM LOCAL ARRAY TO GLOBAL RETURN TYPE
"RTN","MAGTP009",128,0)
 ;
"RTN","MAGTP009",129,0)
 ; Notes
"RTN","MAGTP009",130,0)
 ; =====
"RTN","MAGTP009",131,0)
 ;
"RTN","MAGTP009",132,0)
 ; The ^TMP("MAGTP",$J,"AC") global node is used by this procedure.
"RTN","MAGTP009",133,0)
 ;
"RTN","MAGTP009",134,0)
ARY2GLB(MAGRY) ;
"RTN","MAGTP009",135,0)
 N X
"RTN","MAGTP009",136,0)
 K ^TMP("MAGTP",$J,"AC")
"RTN","MAGTP009",137,0)
 S MAGRY=""
"RTN","MAGTP009",138,0)
 M ^TMP("MAGTP",$J,"AC")=MAGRY
"RTN","MAGTP009",139,0)
 K MAGRY
"RTN","MAGTP009",140,0)
 S X=$$RTRNFMT^XWBLIB("GLOBAL ARRAY",1)
"RTN","MAGTP009",141,0)
 S MAGRY=$NA(^TMP("MAGTP",$J,"AC"))
"RTN","MAGTP009",142,0)
 Q  ;
"RTN","MAGTP009",143,0)
 ;
"RTN","MAGTP009",144,0)
 ;+++++  IF THE CASE HAS A CONSULTATION AND
"RTN","MAGTP009",145,0)
 ;       ITS INTERPRETING SITE MATCHES THE
"RTN","MAGTP009",146,0)
 ;       INPUT SITE, RETURN 1, OTHERWISE RETURN 0.
"RTN","MAGTP009",147,0)
 ;
"RTN","MAGTP009",148,0)
 ; LRAC          Accession Code for the case
"RTN","MAGTP009",149,0)
 ;
"RTN","MAGTP009",150,0)
 ; SITE          Site IEN to filter
"RTN","MAGTP009",151,0)
 ;
"RTN","MAGTP009",152,0)
 ; Return Values
"RTN","MAGTP009",153,0)
 ; =============
"RTN","MAGTP009",154,0)
 ;
"RTN","MAGTP009",155,0)
 ;               Description
"RTN","MAGTP009",156,0)
 ;                 1 if no input site is present or if a
"RTN","MAGTP009",157,0)
 ;                   consultation is found for case LRAC
"RTN","MAGTP009",158,0)
 ;                   with SITE as site IEN
"RTN","MAGTP009",159,0)
 ;
"RTN","MAGTP009",160,0)
 ;                 0 otherwise
"RTN","MAGTP009",161,0)
 ;
"RTN","MAGTP009",162,0)
ISCONSLT(LRAC,SITE) ;
"RTN","MAGTP009",163,0)
 Q:$G(SITE)="" 1                               ; If no input site to filter, do not filter
"RTN","MAGTP009",164,0)
 N MAGOUT,FILE,SCREEN
"RTN","MAGTP009",165,0)
 S FILE=2005.43
"RTN","MAGTP009",166,0)
 ; Screen to get only cases with consultations (TYPE=1) and matching SITE
"RTN","MAGTP009",167,0)
 S SCREEN="I $P(^(0),U,1)="""_LRAC_""""        ; Select case
"RTN","MAGTP009",168,0)
 S SCREEN=SCREEN_",($P(^(0),U,2)=1),"          ; Select TYPE=1:CONSULTATION
"RTN","MAGTP009",169,0)
 S SCREEN=SCREEN_"($P(^(0),U,4)="""_SITE_""")"  ; Select SITE
"RTN","MAGTP009",170,0)
 S SCREEN=SCREEN_",($P(^(0),U,6)<2)"           ; Select 0:PENDING or 1:COMPLETED  
"RTN","MAGTP009",171,0)
 D LIST^DIC(FILE,"","","","","","","",SCREEN,"","MAGOUT")
"RTN","MAGTP009",172,0)
 Q +MAGOUT("DILIST",0)                         ; Return result: do not filter out if found positive 
"RTN","MAGTP009",173,0)
 ;+++++ ADD THE APPROPRIATE CPT CODES TO A CASE WHEN VERIFIED
"RTN","MAGTP009",174,0)
 ;
"RTN","MAGTP009",175,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP009",176,0)
 ;               are returned to.
"RTN","MAGTP009",177,0)
 ;
"RTN","MAGTP009",178,0)
 ; LRSS          AP Section
"RTN","MAGTP009",179,0)
 ;
"RTN","MAGTP009",180,0)
 ; YEAR          Accession Year (Two figures)
"RTN","MAGTP009",181,0)
 ;
"RTN","MAGTP009",182,0)
 ; LRAN          Accession Number
"RTN","MAGTP009",183,0)
 ;
"RTN","MAGTP009",184,0)
 ; LRI           Reverse Date entry in LAB DATA file (#63)
"RTN","MAGTP009",185,0)
 ;
"RTN","MAGTP009",186,0)
 ; LRDFN         DFN from LAB DATA file (#63) for a patient
"RTN","MAGTP009",187,0)
 ;
"RTN","MAGTP009",188,0)
 ; Return Values
"RTN","MAGTP009",189,0)
 ; =============
"RTN","MAGTP009",190,0)
 ;
"RTN","MAGTP009",191,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP009",192,0)
 ; occurred during execution of the procedure:
"RTN","MAGTP009",193,0)
 ;
"RTN","MAGTP009",194,0)
 ; 0^0^ ERROR explanation: When no other lines of output are generated
"RTN","MAGTP009",195,0)
 ;
"RTN","MAGTP009",196,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP009",197,0)
 ;
"RTN","MAGTP009",198,0)
 ; MAGRY(0)     Description
"RTN","MAGTP009",199,0)
 ;                ^1: 1
"RTN","MAGTP009",200,0)
 ;                ^2: 0
"RTN","MAGTP009",201,0)
 ;
"RTN","MAGTP009",202,0)
VERADCPT(MAGRY,LRSS,YEAR,LRAN,LRI,LRDFN) ;
"RTN","MAGTP009",203,0)
 N LRAA,LRCAPA,LRX,LRAD,X,LRT
"RTN","MAGTP009",204,0)
 S LRAA=$$FIND1^DIC(68,"","B",LRSS)
"RTN","MAGTP009",205,0)
 ; Is workload turned on?
"RTN","MAGTP009",206,0)
 S LRCAPA=+$$GET1^DIQ(69.9,"1,",17,"I")&(+$$GET1^DIQ(68,LRAA_",",10,"I"))
"RTN","MAGTP009",207,0)
 Q:'LRCAPA                                     ; Do not act if workload not turned on
"RTN","MAGTP009",208,0)
 S LRX="A"_LRSS_"A"
"RTN","MAGTP009",209,0)
 S LRAD=$S($D(^LR(LRX,200+YEAR)):200+YEAR,$D(^LR(LRX,300+YEAR)):300+YEAR,1:"")_"0000"
"RTN","MAGTP009",210,0)
 ; Only two cases generate a CPT
"RTN","MAGTP009",211,0)
 S X=$S(LRSS="SP":"SURGICAL PATH REPORTING",1:"CYTOLOGY REPORTING")
"RTN","MAGTP009",212,0)
 D LRTX^MAGTP012(.MAGRY,X,.LRT)                ; Define array LRT for WKLD^LRAPRES
"RTN","MAGTP009",213,0)
 Q:($P($G(MAGRY(0)),U)=0)                      ; Quit if errors
"RTN","MAGTP009",214,0)
 D WKLD^LRAPRES                                ; Set workload CPT into file (#68)
"RTN","MAGTP009",215,0)
 S MAGRY(0)="1^0"
"RTN","MAGTP009",216,0)
 Q  ;
"RTN","MAGTP011")
0^15^B172956873
"RTN","MAGTP011",1,0)
MAGTP011 ;WOIFO/FG,MLH - TELEPATHOLOGY RPCS ; 12/11/2012 11:41 am
"RTN","MAGTP011",2,0)
 ;;3.0;IMAGING;**138**;Mar 19, 2002;Build 4;Apr 03, 2013
"RTN","MAGTP011",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGTP011",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP011",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGTP011",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGTP011",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGTP011",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGTP011",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGTP011",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGTP011",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGTP011",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGTP011",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGTP011",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGTP011",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGTP011",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP011",17,0)
 ;;
"RTN","MAGTP011",18,0)
 Q  ;
"RTN","MAGTP011",19,0)
 ;
"RTN","MAGTP011",20,0)
 ;***** RETRIEVE A LIST OF IENS AND NAMES
"RTN","MAGTP011",21,0)
 ;      GIVEN PART OF THE NAME AND THE FILE NUMBER
"RTN","MAGTP011",22,0)
 ; RPC: MAGTP GET LIST
"RTN","MAGTP011",23,0)
 ;
"RTN","MAGTP011",24,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP011",25,0)
 ;               are returned to.
"RTN","MAGTP011",26,0)
 ;
"RTN","MAGTP011",27,0)
 ; FILE          File Number from which to retrieve the results
"RTN","MAGTP011",28,0)
 ;
"RTN","MAGTP011",29,0)
 ; PART          Part of a name used to retrieve a list containing it
"RTN","MAGTP011",30,0)
 ;
"RTN","MAGTP011",31,0)
 ; Return Values
"RTN","MAGTP011",32,0)
 ; =============
"RTN","MAGTP011",33,0)
 ;
"RTN","MAGTP011",34,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP011",35,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP011",36,0)
 ;
"RTN","MAGTP011",37,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP011",38,0)
 ;
"RTN","MAGTP011",39,0)
 ; @MAGRY@(0)   Description
"RTN","MAGTP011",40,0)
 ;                ^01: 1
"RTN","MAGTP011",41,0)
 ;                ^02: Total Number of Lines
"RTN","MAGTP011",42,0)
 ;
"RTN","MAGTP011",43,0)
 ; @MAGRY@(i)   Description
"RTN","MAGTP011",44,0)
 ;                ^01: IEN of entry
"RTN","MAGTP011",45,0)
 ;                ^02: Name of entry
"RTN","MAGTP011",46,0)
 ;                ^03: (SNOMED or CPT code for SNOMED or CPT files)
"RTN","MAGTP011",47,0)
 ;
"RTN","MAGTP011",48,0)
 ; Notes
"RTN","MAGTP011",49,0)
 ; =====
"RTN","MAGTP011",50,0)
 ;
"RTN","MAGTP011",51,0)
 ; The ^TMP("MAGTP",$J,"AC") global node is used by this procedure
"RTN","MAGTP011",52,0)
 ; if the count (CT) gets too large (CT>100).
"RTN","MAGTP011",53,0)
 ;
"RTN","MAGTP011",54,0)
GETUPART(MAGRY,FILE,PART) ; RPC [MAGTP GET LIST]
"RTN","MAGTP011",55,0)
 K MAGRY
"RTN","MAGTP011",56,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP011",57,0)
 I $G(FILE)="" S MAGRY(0)="0^0^No File # entered" Q
"RTN","MAGTP011",58,0)
 I $G(PART)="" S MAGRY(0)="0^0^No part of name entered" Q
"RTN","MAGTP011",59,0)
 S:FILE'=64 PART=$$UCASE^MAGXCVP(PART)         ; File (#64) has lowercase entries
"RTN","MAGTP011",60,0)
 ; Use indirection, work if an Array or a Global Array is returned
"RTN","MAGTP011",61,0)
 S MAGRY="MAGRY"
"RTN","MAGTP011",62,0)
 N INDEX,FIELD,PIECE,SCREEN,MAGOUT,MAGERR,CT,I
"RTN","MAGTP011",63,0)
 S INDEX=$S(FILE=200:"C",FILE=64:"C",1:"B")    ; Default to "C" only for some files
"RTN","MAGTP011",64,0)
 ; Field 2 only for CPT and SNOMED codes
"RTN","MAGTP011",65,0)
 S FIELD="@;"_$S(FILE=81:2,FILE["61":".01;2",FILE=64:".01;1",1:".01")
"RTN","MAGTP011",66,0)
 S PIECE=$S(FILE=81:2,1:1)                     ; Piece 2 only for CPT codes
"RTN","MAGTP011",67,0)
 S SCREEN="I $P(^(0),U,"_PIECE_")["_""""_PART_""""
"RTN","MAGTP011",68,0)
 I FILE=200 S SCREEN=SCREEN_",$D(^VA(200,""AK.PROVIDER"",$P(^(0),U)))"  ;add LR user filter
"RTN","MAGTP011",69,0)
 D LIST^DIC(FILE,"",FIELD,"P","","","",INDEX,SCREEN,"","MAGOUT","MAGERR")  ; IA #10060
"RTN","MAGTP011",70,0)
 I $D(MAGERR) S MAGRY(0)="0^0^Access Error: "_MAGERR("DIERR",1,"TEXT",1) Q
"RTN","MAGTP011",71,0)
 S CT=+MAGOUT("DILIST",0)
"RTN","MAGTP011",72,0)
 I CT>100 D ARY2GLB^MAGTP009(.MAGRY)
"RTN","MAGTP011",73,0)
 F I=1:1:CT S @MAGRY@(I)=MAGOUT("DILIST",I,0)
"RTN","MAGTP011",74,0)
 S @MAGRY@(0)="1^"_CT
"RTN","MAGTP011",75,0)
 Q  ;
"RTN","MAGTP011",76,0)
 ;
"RTN","MAGTP011",77,0)
 ;***** ADD SNOMED CODES TO A CASE
"RTN","MAGTP011",78,0)
 ; RPC: MAGTP PUT SNOMED CODES
"RTN","MAGTP011",79,0)
 ;
"RTN","MAGTP011",80,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP011",81,0)
 ;               are returned to.
"RTN","MAGTP011",82,0)
 ;
"RTN","MAGTP011",83,0)
 ; .ENT          List of SNOMED codes
"RTN","MAGTP011",84,0)
 ;               Input array. The field numbers and entry data
"RTN","MAGTP011",85,0)
 ;               must be listed one on each line as:
"RTN","MAGTP011",86,0)
 ;
"RTN","MAGTP011",87,0)
 ;               ENT(n)   = Organ/Tissue Number ^ Label ^ N: Total Number of lines of data
"RTN","MAGTP011",88,0)
 ;               ENT(n+1) = Organ/Tissue Number ^ DATA (1)
"RTN","MAGTP011",89,0)
 ;               ...
"RTN","MAGTP011",90,0)
 ;               ENT(n+N) = Organ/Tissue Number ^ DATA (N)
"RTN","MAGTP011",91,0)
 ;
"RTN","MAGTP011",92,0)
 ; LRSS          AP Section
"RTN","MAGTP011",93,0)
 ;
"RTN","MAGTP011",94,0)
 ; YEAR          Accession Year (Two figures)
"RTN","MAGTP011",95,0)
 ;
"RTN","MAGTP011",96,0)
 ; LRAN          Accession Number
"RTN","MAGTP011",97,0)
 ;
"RTN","MAGTP011",98,0)
 ; Return Values
"RTN","MAGTP011",99,0)
 ; =============
"RTN","MAGTP011",100,0)
 ; 
"RTN","MAGTP011",101,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP011",102,0)
 ; occurred during execution of the procedure:
"RTN","MAGTP011",103,0)
 ;
"RTN","MAGTP011",104,0)
 ; 0^0^ ERROR explanation: When no other lines of output are generated
"RTN","MAGTP011",105,0)
 ;
"RTN","MAGTP011",106,0)
 ; 0^ Total Number of Lines: if an error occurred while
"RTN","MAGTP011",107,0)
 ; extracting one of the fields
"RTN","MAGTP011",108,0)
 ;
"RTN","MAGTP011",109,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP011",110,0)
 ;
"RTN","MAGTP011",111,0)
 ; MAGRY(0)     Description
"RTN","MAGTP011",112,0)
 ;                ^01: 1
"RTN","MAGTP011",113,0)
 ;                ^02: Number of Lines
"RTN","MAGTP011",114,0)
 ;
"RTN","MAGTP011",115,0)
 ; MAGRY(i)     Description
"RTN","MAGTP011",116,0)
 ;                ^01: "<Label Name> Updated" or "Updating Error: " <Error Message>
"RTN","MAGTP011",117,0)
 ;                ^02: <Added IEN>
"RTN","MAGTP011",118,0)
 ;
"RTN","MAGTP011",119,0)
PUTSNOMD(MAGRY,ENT,LRSS,YEAR,LRAN) ; RPC [MAGTP PUT SNOMED CODES]
"RTN","MAGTP011",120,0)
 K MAGRY
"RTN","MAGTP011",121,0)
 I $D(ENT)<10 S MAGRY(0)="0^0^No SNOMED codes entered" Q
"RTN","MAGTP011",122,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP011",123,0)
 I $G(LRSS)=""!($G(YEAR)="")!($G(LRAN)="") D  Q
"RTN","MAGTP011",124,0)
 . S MAGRY(0)="0^0^One or more case input parameters are missing"
"RTN","MAGTP011",125,0)
 N INPUT
"RTN","MAGTP011",126,0)
 S INPUT=$$CONTEXT^MAGTP006(.MAGRY,LRSS,YEAR,LRAN) Q:'MAGRY(0)
"RTN","MAGTP011",127,0)
 N LRFDA,ORIEN,MAGERR
"RTN","MAGTP011",128,0)
 N LRSF,IEN,CT,BDFLG,LINE,LABEL,N,I
"RTN","MAGTP011",129,0)
 N NVAL,VAL,SUBF,SUBFJ,SUBFJK,IENS
"RTN","MAGTP011",130,0)
 S LRSF=$P(INPUT,","),IEN=$P(INPUT,",",2,4)
"RTN","MAGTP011",131,0)
 S SUBF=+$$GET1^DID(LRSF,10,"","SPECIFIER")
"RTN","MAGTP011",132,0)
 S CT=0,BDFLG=1                                ; If BDFLG=0, one or more bad entries 
"RTN","MAGTP011",133,0)
 ;
"RTN","MAGTP011",134,0)
 ; Read input array
"RTN","MAGTP011",135,0)
 ;
"RTN","MAGTP011",136,0)
 S LINE="" F  S LINE=$O(ENT(LINE)) Q:LINE=""!('BDFLG)  D
"RTN","MAGTP011",137,0)
 . K LABEL,VAL,NVAL,SUBFJ,SUBFJK,LRFDA,ORIEN,MAGERR
"RTN","MAGTP011",138,0)
 . S CT=CT+1
"RTN","MAGTP011",139,0)
 . S N=$P(ENT(LINE),U)                         ; Organ/Tissue or O/T Morphology internal number
"RTN","MAGTP011",140,0)
 . S LABEL=$P(ENT(LINE),U,2)                   ; Subfield label
"RTN","MAGTP011",141,0)
 . S NVAL=$P(ENT(LINE),U,3)                    ; Number of lines of data after first line
"RTN","MAGTP011",142,0)
 . F I=1:1:NVAL S VAL(I)=$P(ENT(LINE+I),U,2)   ; Extract values from NVAL lines of ENT
"RTN","MAGTP011",143,0)
 . ;
"RTN","MAGTP011",144,0)
 . I LABEL["ORGAN/TISSUE" D                    ; CY and EM have "CYTOPATH" and "EM" in front
"RTN","MAGTP011",145,0)
 . . S SUBFJ=+$$GET1^DID(LRSF,10,"","SPECIFIER")  ; Use field number
"RTN","MAGTP011",146,0)
 . . F I=1:1:NVAL D                            ; Extract values from NVAL lines of ENT
"RTN","MAGTP011",147,0)
 . . . S:VAL(I)]"" LRFDA(SUBFJ,"+"_I_","_IEN,.01)=VAL(I)
"RTN","MAGTP011",148,0)
 . . D:$D(LRFDA) UPDATE^DIE("","LRFDA","ORIEN","MAGERR")
"RTN","MAGTP011",149,0)
 . . Q
"RTN","MAGTP011",150,0)
 . ;
"RTN","MAGTP011",151,0)
 . I LABEL'="ETIOLOGY",(LABEL'["ORGAN/TISSUE") D
"RTN","MAGTP011",152,0)
 . . S SUBFJ=+$$GET1^DID(SUBF,LABEL,"","SPECIFIER")
"RTN","MAGTP011",153,0)
 . . I SUBFJ=0!LABEL D  Q
"RTN","MAGTP011",154,0)
 . . . S MAGRY(CT)=LABEL_" Invalid"            ; LABEL must be text and valid
"RTN","MAGTP011",155,0)
 . . . S BDFLG=0
"RTN","MAGTP011",156,0)
 . . . Q
"RTN","MAGTP011",157,0)
 . . F I=1:1:NVAL D                            ; Extract values from NVAL lines of ENT
"RTN","MAGTP011",158,0)
 . . . S:VAL(I)]"" LRFDA(SUBFJ,"+"_I_","_N_","_IEN,.01)=VAL(I)
"RTN","MAGTP011",159,0)
 . . D:$D(LRFDA) UPDATE^DIE("","LRFDA","ORIEN","MAGERR")
"RTN","MAGTP011",160,0)
 . . Q
"RTN","MAGTP011",161,0)
 . ;
"RTN","MAGTP011",162,0)
 . I LABEL="ETIOLOGY" D                        ; ETIOLOGY is a subfield of MORPHOLOGY
"RTN","MAGTP011",163,0)
 . . S SUBFJ=+$$GET1^DID(SUBF,"MORPHOLOGY","","SPECIFIER")
"RTN","MAGTP011",164,0)
 . . S SUBFJK=+$$GET1^DID(SUBFJ,"ETIOLOGY","","SPECIFIER")
"RTN","MAGTP011",165,0)
 . . F I=1:1:NVAL D
"RTN","MAGTP011",166,0)
 . . . S:VAL(I)]"" LRFDA(SUBFJK,"+"_I_","_N_","_IEN,.01)=VAL(I)
"RTN","MAGTP011",167,0)
 . . D:$D(LRFDA) UPDATE^DIE("","LRFDA","ORIEN","MAGERR")
"RTN","MAGTP011",168,0)
 . . Q
"RTN","MAGTP011",169,0)
 . ; Update LINE number to next field entry
"RTN","MAGTP011",170,0)
 . S LINE=LINE+NVAL
"RTN","MAGTP011",171,0)
 . ; Error handling
"RTN","MAGTP011",172,0)
 . I $D(MAGERR) D  Q
"RTN","MAGTP011",173,0)
 . . S MAGRY(CT)=LABEL_" Failed: Updating Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP011",174,0)
 . . S BDFLG=0
"RTN","MAGTP011",175,0)
 . . Q
"RTN","MAGTP011",176,0)
 . S (I,IENS)="" F  S I=$O(ORIEN(I)) Q:I=""  S IENS=IENS_U_ORIEN(I)
"RTN","MAGTP011",177,0)
 . S:'$D(MAGRY(CT)) MAGRY(CT)=LABEL_" Updated"_IENS
"RTN","MAGTP011",178,0)
 . Q
"RTN","MAGTP011",179,0)
 S MAGRY(0)=BDFLG_U_CT
"RTN","MAGTP011",180,0)
 Q  ;
"RTN","MAGTP011",181,0)
 ;
"RTN","MAGTP011",182,0)
 ;***** GET SNOMED CODES FOR A CASE
"RTN","MAGTP011",183,0)
 ; RPC: MAGTP GET SNOMED CODES
"RTN","MAGTP011",184,0)
 ;
"RTN","MAGTP011",185,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP011",186,0)
 ;               are returned to.
"RTN","MAGTP011",187,0)
 ;
"RTN","MAGTP011",188,0)
 ; LRSS          AP Section
"RTN","MAGTP011",189,0)
 ;
"RTN","MAGTP011",190,0)
 ; YEAR          Accession Year (Two figures)
"RTN","MAGTP011",191,0)
 ;
"RTN","MAGTP011",192,0)
 ; LRAN          Accession Number
"RTN","MAGTP011",193,0)
 ;
"RTN","MAGTP011",194,0)
 ; Return Values
"RTN","MAGTP011",195,0)
 ; =============
"RTN","MAGTP011",196,0)
 ;
"RTN","MAGTP011",197,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP011",198,0)
 ; occurred during execution of the procedure:
"RTN","MAGTP011",199,0)
 ;
"RTN","MAGTP011",200,0)
 ; 0^0^ ERROR explanation: When no other lines of output are generated
"RTN","MAGTP011",201,0)
 ;
"RTN","MAGTP011",202,0)
 ; 0^ Total Number of Lines: if an error occurred while
"RTN","MAGTP011",203,0)
 ; extracting one of the fields
"RTN","MAGTP011",204,0)
 ;
"RTN","MAGTP011",205,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP011",206,0)
 ;
"RTN","MAGTP011",207,0)
 ; MAGRY(0)     Description
"RTN","MAGTP011",208,0)
 ;                ^01: 1
"RTN","MAGTP011",209,0)
 ;                ^02: Total Number of Lines
"RTN","MAGTP011",210,0)
 ;                ^03:
"RTN","MAGTP011",211,0)
 ;                     |01: "N"
"RTN","MAGTP011",212,0)
 ;                     |02: "O/T Code"
"RTN","MAGTP011",213,0)
 ;                ^04: "O/T Name"  
"RTN","MAGTP011",214,0)
 ;                ^05: 
"RTN","MAGTP011",215,0)
 ;                     |01: "J"
"RTN","MAGTP011",216,0)
 ;                     |02: "Label"
"RTN","MAGTP011",217,0)
 ;                ^06: "SNOMED Code"
"RTN","MAGTP011",218,0)
 ;                ^07: "SNOMED Name"
"RTN","MAGTP011",219,0)
 ;                ^08:
"RTN","MAGTP011",220,0)
 ;                     |01: "K"
"RTN","MAGTP011",221,0)
 ;                     |02: "Label"
"RTN","MAGTP011",222,0)
 ;                ^09: "Etiology SNOMED Code"
"RTN","MAGTP011",223,0)
 ;                ^10: "Etiology SNOMED Name"
"RTN","MAGTP011",224,0)
 ;
"RTN","MAGTP011",225,0)
 ; MAGRY(i)     Description
"RTN","MAGTP011",226,0)
 ;                ^01:
"RTN","MAGTP011",227,0)
 ;                     |01: Internal Number
"RTN","MAGTP011",228,0)
 ;                     |02: O/T Code
"RTN","MAGTP011",229,0)
 ;                ^02: O/T Name
"RTN","MAGTP011",230,0)
 ;                ^03:
"RTN","MAGTP011",231,0)
 ;                     |01: Internal Number
"RTN","MAGTP011",232,0)
 ;                     |02: <Label>
"RTN","MAGTP011",233,0)
 ;                ^04: SNOMED Code
"RTN","MAGTP011",234,0)
 ;                ^05: SNOMED Name
"RTN","MAGTP011",235,0)
 ;                ^06:
"RTN","MAGTP011",236,0)
 ;                     |01: Internal Number
"RTN","MAGTP011",237,0)
 ;                     |02: <Label>
"RTN","MAGTP011",238,0)
 ;                ^07: Etiology SNOMED Code
"RTN","MAGTP011",239,0)
 ;                ^08: Etiology SNOMED Name
"RTN","MAGTP011",240,0)
 ;
"RTN","MAGTP011",241,0)
GETSNOMD(MAGRY,LRSS,YEAR,LRAN) ; RPC [MAGTP GET SNOMED CODES]
"RTN","MAGTP011",242,0)
 K MAGRY
"RTN","MAGTP011",243,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP011",244,0)
 N INPUT
"RTN","MAGTP011",245,0)
 S INPUT=$$CONTEXT^MAGTP006(.MAGRY,LRSS,YEAR,LRAN) Q:'MAGRY(0)
"RTN","MAGTP011",246,0)
 N MAGOUT,MAGERR
"RTN","MAGTP011",247,0)
 N LRSF,IEN,SUBF,NIEN,CT,N,OTNM,ORTS,NUM,NUMJ
"RTN","MAGTP011",248,0)
 N LABEL,NIENJ,NJ,SNONUM,SNOMED,SUBFJ,FILE,SUBFK
"RTN","MAGTP011",249,0)
 N NIENJK,NJK,ETNM,ETIO,INDX,INDXJ,INDXJK,LAST
"RTN","MAGTP011",250,0)
 S LRSF=$P(INPUT,","),IEN=$P(INPUT,",",2,4)
"RTN","MAGTP011",251,0)
 ;
"RTN","MAGTP011",252,0)
 ; Get all info for Organ/Tissue(s), then sort through it
"RTN","MAGTP011",253,0)
 ;
"RTN","MAGTP011",254,0)
 D GETS^DIQ(LRSF,IEN,"10*","IE","MAGOUT","MAGERR")
"RTN","MAGTP011",255,0)
 I $D(MAGERR) S MAGRY(0)="0^0^Access Error: "_MAGERR("DIERR",1,"TEXT",1) Q
"RTN","MAGTP011",256,0)
 S SUBF=+$$GET1^DID(LRSF,10,"","SPECIFIER")    ; Subfields of Organ/Tissue
"RTN","MAGTP011",257,0)
 ;
"RTN","MAGTP011",258,0)
 ; Extract subfields: "FUNCTION","PROCEDURE","DISEASE","MORPHOLOGY"
"RTN","MAGTP011",259,0)
 ;      sub-subfield: "ETIOLOGY"
"RTN","MAGTP011",260,0)
 ;
"RTN","MAGTP011",261,0)
 F LABEL="FUNCTION","PROCEDURE","DISEASE","MORPHOLOGY" D
"RTN","MAGTP011",262,0)
 . S SUBFJ(LABEL)=+$$GET1^DID(SUBF,LABEL,"","SPECIFIER")
"RTN","MAGTP011",263,0)
 S SUBFK=+$$GET1^DID(SUBFJ("MORPHOLOGY"),"ETIOLOGY","","SPECIFIER")
"RTN","MAGTP011",264,0)
 ;
"RTN","MAGTP011",265,0)
 ; NIEN may be ordered incorrectly, set index
"RTN","MAGTP011",266,0)
 ;
"RTN","MAGTP011",267,0)
 S NIEN=""
"RTN","MAGTP011",268,0)
 F  S NIEN=$O(MAGOUT(SUBF,NIEN)) Q:NIEN=""  D
"RTN","MAGTP011",269,0)
 . S INDX($P(NIEN,","))=""
"RTN","MAGTP011",270,0)
 S (CT,N)=""
"RTN","MAGTP011",271,0)
 F  S N=$O(INDX(N)) Q:N=""  D
"RTN","MAGTP011",272,0)
 . S NIEN=N_","_IEN
"RTN","MAGTP011",273,0)
 . S OTNM=MAGOUT(SUBF,NIEN,.01,"I")
"RTN","MAGTP011",274,0)
 . S OTNM=$$GET1^DIQ(61,OTNM,2)                ; Field=2 in the LAB files gives SNOMED codes
"RTN","MAGTP011",275,0)
 . S ORTS=MAGOUT(SUBF,NIEN,.01,"E")
"RTN","MAGTP011",276,0)
 . S CT=CT+1
"RTN","MAGTP011",277,0)
 . S MAGRY(CT)=N_"|"_OTNM_U_ORTS               ; Record Organ/Tissue
"RTN","MAGTP011",278,0)
 . F LABEL="FUNCTION","PROCEDURE","DISEASE","MORPHOLOGY" D
"RTN","MAGTP011",279,0)
 . . ; Select the appropriate LAB file for each subfield
"RTN","MAGTP011",280,0)
 . . S FILE=$S(LABEL="FUNCTION":61.3,LABEL="PROCEDURE":61.5,LABEL="DISEASE":61.4,1:61.1)
"RTN","MAGTP011",281,0)
 . . K INDXJ                                   ; Subnodes: F, P, D, M
"RTN","MAGTP011",282,0)
 . . S NIENJ=""
"RTN","MAGTP011",283,0)
 . . F  S NIENJ=$O(MAGOUT(SUBFJ(LABEL),NIENJ)) Q:NIENJ=""  D
"RTN","MAGTP011",284,0)
 . . . S:$P(NIENJ,",",2)=N INDXJ($P(NIENJ,",",1,2))=""
"RTN","MAGTP011",285,0)
 . . Q:'$D(INDXJ)                              ; Quit if no subnodes, keep only O/T
"RTN","MAGTP011",286,0)
 . . S NJ=""
"RTN","MAGTP011",287,0)
 . . F  S NJ=$O(INDXJ(NJ)) Q:NJ=""  D
"RTN","MAGTP011",288,0)
 . . . S NIENJ=NJ_","_IEN
"RTN","MAGTP011",289,0)
 . . . S SNONUM=MAGOUT(SUBFJ(LABEL),NIENJ,.01,"I")
"RTN","MAGTP011",290,0)
 . . . S SNONUM=LABEL_U_$$GET1^DIQ(FILE,SNONUM,2)
"RTN","MAGTP011",291,0)
 . . . S SNOMED=MAGOUT(SUBFJ(LABEL),NIENJ,.01,"E")
"RTN","MAGTP011",292,0)
 . . . S NUM=$P(NJ,",")_"|"
"RTN","MAGTP011",293,0)
 . . . S MAGRY(CT)=N_"|"_OTNM_U_ORTS_U_NUM_SNONUM_U_SNOMED
"RTN","MAGTP011",294,0)
 . . . K INDXJK                                ; Sub-subnode: Etiology
"RTN","MAGTP011",295,0)
 . . . S NIENJK=""
"RTN","MAGTP011",296,0)
 . . . F  S NIENJK=$O(MAGOUT(SUBFK,NIENJK)) Q:NIENJK=""  D
"RTN","MAGTP011",297,0)
 . . . . S:$P(NIENJK,",",2,3)=NJ INDXJK($P(NIENJK,",",1,3))=""
"RTN","MAGTP011",298,0)
 . . . I '$D(INDXJK)!(LABEL'="MORPHOLOGY") S CT=CT+1 Q  ; Morphology only, quit if no sub-subnode
"RTN","MAGTP011",299,0)
 . . . S NJK=""
"RTN","MAGTP011",300,0)
 . . . F  S NJK=$O(INDXJK(NJK)) Q:NJK=""  D
"RTN","MAGTP011",301,0)
 . . . . S NIENJK=NJK_","_IEN
"RTN","MAGTP011",302,0)
 . . . . S ETNM=MAGOUT(SUBFK,NIENJK,.01,"I")
"RTN","MAGTP011",303,0)
 . . . . S ETNM="ETIOLOGY"_U_$$GET1^DIQ(61.2,ETNM,2)
"RTN","MAGTP011",304,0)
 . . . . S ETIO=MAGOUT(SUBFK,NIENJK,.01,"E")
"RTN","MAGTP011",305,0)
 . . . . S NUMJ=$P(NJK,",")_"|"
"RTN","MAGTP011",306,0)
 . . . . S MAGRY(CT)=N_"|"_OTNM_U_ORTS_U_NUM_SNONUM_U_SNOMED_U_NUMJ_ETNM_U_ETIO
"RTN","MAGTP011",307,0)
 . . . . S CT=CT+1
"RTN","MAGTP011",308,0)
 . . . . Q
"RTN","MAGTP011",309,0)
 . . . Q
"RTN","MAGTP011",310,0)
 . . Q
"RTN","MAGTP011",311,0)
 . Q
"RTN","MAGTP011",312,0)
 S LAST=$O(MAGRY(""),-1)
"RTN","MAGTP011",313,0)
 S MAGRY(0)="1^"_LAST_"^N|O/T Code^O/T Name^J|Label^SNOMED Code^SNOMED Name^K|Label^Etiology SNOMED Code^Etiology SNOMED Name"
"RTN","MAGTP011",314,0)
 Q  ;
"RTN","MAGTP011",315,0)
 ;
"RTN","MAGTP011",316,0)
 ;***** GET THE USER'S SETTING/PREFERENCES IN XML FORMAT
"RTN","MAGTP011",317,0)
 ;      FROM THE CONFIGURATION FILE (#2006.13)
"RTN","MAGTP011",318,0)
 ; RPC: MAGTP GET PREFERENCES
"RTN","MAGTP011",319,0)
 ;
"RTN","MAGTP011",320,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP011",321,0)
 ;               are returned to.
"RTN","MAGTP011",322,0)
 ;
"RTN","MAGTP011",323,0)
 ; ENT           List of inputs:
"RTN","MAGTP011",324,0)
 ;                 ^01: DUZ of user whose preferences are to be retrieved
"RTN","MAGTP011",325,0)
 ;                 ^02: LABEL of preference section
"RTN","MAGTP011",326,0)
 ;
"RTN","MAGTP011",327,0)
 ; Return Values
"RTN","MAGTP011",328,0)
 ; =============
"RTN","MAGTP011",329,0)
 ;
"RTN","MAGTP011",330,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP011",331,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP011",332,0)
 ;
"RTN","MAGTP011",333,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP011",334,0)
 ;
"RTN","MAGTP011",335,0)
 ; MAGRY(0)     Description
"RTN","MAGTP011",336,0)
 ;                ^01: 1
"RTN","MAGTP011",337,0)
 ;                ^02: Total Number of Lines
"RTN","MAGTP011",338,0)
 ;                ^03: <DUZ>: <LABEL>
"RTN","MAGTP011",339,0)
 ;
"RTN","MAGTP011",340,0)
 ; MAGRY(i)     Description
"RTN","MAGTP011",341,0)
 ;                ^01: XML Line of Text
"RTN","MAGTP011",342,0)
 ;
"RTN","MAGTP011",343,0)
GETUPREF(MAGRY,ENT) ; RPC [MAGTP GET PREFERENCES]
"RTN","MAGTP011",344,0)
 K MAGRY
"RTN","MAGTP011",345,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP011",346,0)
 N LDUZ,FILE,FILE2,LABEL,CT,I
"RTN","MAGTP011",347,0)
 N MAGREC0,MAGREC1,MAGREC2,MAGOUT,MAGERR
"RTN","MAGTP011",348,0)
 S FILE=2006.13
"RTN","MAGTP011",349,0)
 S FILE2=2006.1371
"RTN","MAGTP011",350,0)
 ;
"RTN","MAGTP011",351,0)
 S LDUZ=$P($G(ENT),U)                          ; First line of ENT is LDUZ^LABEL
"RTN","MAGTP011",352,0)
 I LDUZ="" S LDUZ=DUZ                          ; Default to user's DUZ if null
"RTN","MAGTP011",353,0)
 I $$GET1^DIQ(200,LDUZ_",",.01)="" S MAGRY(0)="0^0^Invalid DUZ" Q  ; IA #10060
"RTN","MAGTP011",354,0)
 ;
"RTN","MAGTP011",355,0)
 ; Get configuration record IEN or bail
"RTN","MAGTP011",356,0)
 ;
"RTN","MAGTP011",357,0)
 S MAGREC0=$O(^MAG(FILE,0))
"RTN","MAGTP011",358,0)
 I 'MAGREC0 S MAGRY(0)="0^0^No configuration record defined" Q
"RTN","MAGTP011",359,0)
 ;
"RTN","MAGTP011",360,0)
 S MAGREC1=$O(^MAG(FILE,MAGREC0,7,"B",LDUZ,""))
"RTN","MAGTP011",361,0)
 I MAGREC1="" S MAGRY(0)="0^0^No preferences found for "_LDUZ Q
"RTN","MAGTP011",362,0)
 ;
"RTN","MAGTP011",363,0)
 S LABEL=$P(ENT,U,2)
"RTN","MAGTP011",364,0)
 I LABEL="" S MAGRY(0)="0^0^No Label entered" Q
"RTN","MAGTP011",365,0)
 S MAGREC2=$O(^MAG(FILE,MAGREC0,7,MAGREC1,1,"B",LABEL,""))
"RTN","MAGTP011",366,0)
 I MAGREC2="" D  Q
"RTN","MAGTP011",367,0)
 . S MAGRY(0)="0^0^No preferences found for "_LDUZ_": "_LABEL
"RTN","MAGTP011",368,0)
 ;
"RTN","MAGTP011",369,0)
 D GET1^DIQ(FILE2,MAGREC2_","_MAGREC1_","_MAGREC0_",",.02,"","MAGOUT","MAGERR")
"RTN","MAGTP011",370,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP011",371,0)
 . S MAGRY(0)="0^0^Access Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP011",372,0)
 S (CT,I)=0
"RTN","MAGTP011",373,0)
 F  S I=$O(MAGOUT(I)) Q:I=""  D
"RTN","MAGTP011",374,0)
 . S CT=CT+1
"RTN","MAGTP011",375,0)
 . S MAGRY(CT)=MAGOUT(I)
"RTN","MAGTP011",376,0)
 . Q
"RTN","MAGTP011",377,0)
 S MAGRY(0)="1^"_CT_U_LDUZ_": "_LABEL
"RTN","MAGTP011",378,0)
 Q  ;
"RTN","MAGTP011",379,0)
 ;
"RTN","MAGTP011",380,0)
 ;***** SET THE USER'S SETTING/PREFERENCES IN XML FORMAT
"RTN","MAGTP011",381,0)
 ;      IN THE CONFIGURATION FILE (#2006.13)
"RTN","MAGTP011",382,0)
 ; RPC: MAGTP PUT PREFERENCES
"RTN","MAGTP011",383,0)
 ;
"RTN","MAGTP011",384,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP011",385,0)
 ;               are returned to.
"RTN","MAGTP011",386,0)
 ;
"RTN","MAGTP011",387,0)
 ; .ENT          Input array:
"RTN","MAGTP011",388,0)
 ;
"RTN","MAGTP011",389,0)
 ;                 First Line:      DUZ^Label
"RTN","MAGTP011",390,0)
 ;                 Following Lines: One XML line of text
"RTN","MAGTP011",391,0)
 ;
"RTN","MAGTP011",392,0)
 ; Return Values
"RTN","MAGTP011",393,0)
 ; =============
"RTN","MAGTP011",394,0)
 ;
"RTN","MAGTP011",395,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP011",396,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP011",397,0)
 ;
"RTN","MAGTP011",398,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP011",399,0)
 ;
"RTN","MAGTP011",400,0)
 ; MAGRY(0)     Description
"RTN","MAGTP011",401,0)
 ;                ^01: 1
"RTN","MAGTP011",402,0)
 ;                ^02: 0
"RTN","MAGTP011",403,0)
 ;                ^03: <DUZ>: <LABEL> " Preferences Updated"
"RTN","MAGTP011",404,0)
 ;
"RTN","MAGTP011",405,0)
PUTUPREF(MAGRY,ENT) ; RPC [MAGTP PUT PREFERENCES]
"RTN","MAGTP011",406,0)
 K MAGRY
"RTN","MAGTP011",407,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP011",408,0)
 I $D(ENT)<10 S MAGRY(0)="0^0^No Input" Q
"RTN","MAGTP011",409,0)
 N LINE,LDUZ,FILE,FILE1,FILE2,LABEL
"RTN","MAGTP011",410,0)
 N MAGFDA,MAGERR,ORIEN
"RTN","MAGTP011",411,0)
 N MAGREC0,MAGREC1,MAGREC2,I
"RTN","MAGTP011",412,0)
 S FILE=2006.13
"RTN","MAGTP011",413,0)
 S FILE1=2006.137
"RTN","MAGTP011",414,0)
 S FILE2=2006.1371
"RTN","MAGTP011",415,0)
 ;
"RTN","MAGTP011",416,0)
 ; Get configuration record IEN or bail
"RTN","MAGTP011",417,0)
 ;
"RTN","MAGTP011",418,0)
 S MAGREC0=$O(^MAG(FILE,0))
"RTN","MAGTP011",419,0)
 I 'MAGREC0 S MAGRY(0)="0^0^No configuration record defined" Q
"RTN","MAGTP011",420,0)
 ; 
"RTN","MAGTP011",421,0)
 S LINE=$O(ENT(""))
"RTN","MAGTP011",422,0)
 S LDUZ=$P(ENT(LINE),U)                        ; First line of ENT is LDUZ^LABEL
"RTN","MAGTP011",423,0)
 I LDUZ="" S LDUZ=DUZ                          ; Default to user's DUZ if null
"RTN","MAGTP011",424,0)
 I $$GET1^DIQ(200,LDUZ_",",.01)="" S MAGRY(0)="0^0^Invalid DUZ" Q  ; IA #10060
"RTN","MAGTP011",425,0)
 S MAGREC1=$O(^MAG(FILE,MAGREC0,7,"B",LDUZ,""))
"RTN","MAGTP011",426,0)
 ;
"RTN","MAGTP011",427,0)
 ; If MAGREC1 is not defined add a DUZ record
"RTN","MAGTP011",428,0)
 ;
"RTN","MAGTP011",429,0)
 I MAGREC1="" D  Q:$P($G(MAGRY(0)),U)=0
"RTN","MAGTP011",430,0)
 . S MAGFDA(1,FILE1,"+1,"_MAGREC0_",",.01)=LDUZ
"RTN","MAGTP011",431,0)
 . D UPDATE^DIE("","MAGFDA(1)","ORIEN","MAGERR")
"RTN","MAGTP011",432,0)
 . I $D(MAGERR) D  Q
"RTN","MAGTP011",433,0)
 . . S MAGRY(0)="0^0^Update Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP011",434,0)
 . S MAGREC1=ORIEN(1)                          ; MAGREC1 generated
"RTN","MAGTP011",435,0)
 . K ORIEN
"RTN","MAGTP011",436,0)
 . Q
"RTN","MAGTP011",437,0)
 ;
"RTN","MAGTP011",438,0)
 S LABEL=$P(ENT(LINE),U,2)
"RTN","MAGTP011",439,0)
 I LABEL="" S MAGRY(0)="0^0^No Label entered" Q
"RTN","MAGTP011",440,0)
 S MAGREC2=$O(^MAG(FILE,MAGREC0,7,MAGREC1,1,"B",LABEL,""))
"RTN","MAGTP011",441,0)
 ;
"RTN","MAGTP011",442,0)
 ; If MAGREC2 is not defined add a label
"RTN","MAGTP011",443,0)
 ;
"RTN","MAGTP011",444,0)
 I MAGREC2="" D  Q:$P($G(MAGRY(0)),U)=0
"RTN","MAGTP011",445,0)
 . K MAGFDA,MAGERR
"RTN","MAGTP011",446,0)
 . S MAGFDA(1,FILE2,"+1,"_MAGREC1_","_MAGREC0_",",.01)=LABEL
"RTN","MAGTP011",447,0)
 . D UPDATE^DIE("","MAGFDA(1)","ORIEN","MAGERR")
"RTN","MAGTP011",448,0)
 . I $D(MAGERR) D  Q
"RTN","MAGTP011",449,0)
 . . S MAGRY(0)="0^0^Update Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP011",450,0)
 . S MAGREC2=ORIEN(1)                          ; MAGREC2 generated
"RTN","MAGTP011",451,0)
 . K ORIEN
"RTN","MAGTP011",452,0)
 . Q
"RTN","MAGTP011",453,0)
 ;
"RTN","MAGTP011",454,0)
 ; Set new preferences
"RTN","MAGTP011",455,0)
 ;
"RTN","MAGTP011",456,0)
 K MAGFDA,MAGERR
"RTN","MAGTP011",457,0)
 S I=0
"RTN","MAGTP011",458,0)
 F  S LINE=$O(ENT(LINE)) Q:LINE=""  D          ; Start from second line
"RTN","MAGTP011",459,0)
 . S I=I+1
"RTN","MAGTP011",460,0)
 . S MAGFDA(I)=ENT(LINE)                       ; FDA arrays cannot start from 0
"RTN","MAGTP011",461,0)
 . Q
"RTN","MAGTP011",462,0)
 D WP^DIE(FILE2,MAGREC2_","_MAGREC1_","_MAGREC0_",",.02,"K","MAGFDA","MAGERR")
"RTN","MAGTP011",463,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP011",464,0)
 . S MAGRY(0)="0^0^Updating Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP011",465,0)
 S MAGRY(0)="1^0^"_LDUZ_": "_LABEL_" - Preferences Updated"
"RTN","MAGTP011",466,0)
 Q
"RTN","MAGTP012")
0^16^B119315017
"RTN","MAGTP012",1,0)
MAGTP012 ;WOIFO/FG,JSL - TELEPATHOLOGY RPCS ; 6/04/2013 2:50pm
"RTN","MAGTP012",2,0)
 ;;3.0;IMAGING;**138**;Mar 19, 2002;Build 4;
"RTN","MAGTP012",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGTP012",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP012",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGTP012",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGTP012",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGTP012",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGTP012",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGTP012",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGTP012",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGTP012",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGTP012",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGTP012",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGTP012",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGTP012",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP012",17,0)
 ;;
"RTN","MAGTP012",18,0)
 Q  ;
"RTN","MAGTP012",19,0)
 ;
"RTN","MAGTP012",20,0)
 ;***** COPY A SPECIFIED CASE
"RTN","MAGTP012",21,0)
 ; RPC: MAGTP COPY CASE
"RTN","MAGTP012",22,0)
 ;
"RTN","MAGTP012",23,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP012",24,0)
 ;               are returned to.
"RTN","MAGTP012",25,0)
 ;
"RTN","MAGTP012",26,0)
 ; ENT           List of inputs:
"RTN","MAGTP012",27,0)
 ;      
"RTN","MAGTP012",28,0)
 ;                ^01: Patient's DFN
"RTN","MAGTP012",29,0)
 ;                ^02: Original Case Number (Ex. SP 12 1)
"RTN","MAGTP012",30,0)
 ;                ^03: Original Station Number
"RTN","MAGTP012",31,0)
 ;
"RTN","MAGTP012",32,0)
 ; Return Values
"RTN","MAGTP012",33,0)
 ; =============
"RTN","MAGTP012",34,0)
 ; 
"RTN","MAGTP012",35,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP012",36,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP012",37,0)
 ;
"RTN","MAGTP012",38,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP012",39,0)
 ;
"RTN","MAGTP012",40,0)
 ; MAGRY(0)     Description
"RTN","MAGTP012",41,0)
 ;                ^01: 1
"RTN","MAGTP012",42,0)
 ;                ^02: 0
"RTN","MAGTP012",43,0)
 ;                ^03: Case generated
"RTN","MAGTP012",44,0)
 ;                ^04: <Accession Code>
"RTN","MAGTP012",45,0)
 ;
"RTN","MAGTP012",46,0)
COPYCASE(MAGRY,ENT) ; RPC [MAGTP COPY CASE]
"RTN","MAGTP012",47,0)
 K MAGRY
"RTN","MAGTP012",48,0)
 I $G(ENT)="" S MAGRY(0)="0^0^No Input" Q
"RTN","MAGTP012",49,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP012",50,0)
 N LRAA,LRAD,LRSF,LRDFN,LRSD,LRI,LRSS
"RTN","MAGTP012",51,0)
 N DFN,LRLLOC,LRCAPLOC,LRT,LRAC,LOC,LRXR
"RTN","MAGTP012",52,0)
 N LRXREF,LRMD,LRAN,OLRAC,OSTAT,OSITE,ONAME
"RTN","MAGTP012",53,0)
 N DOD,MAGERR,X,LRW,SUBF,LRRC,LRCAPA
"RTN","MAGTP012",54,0)
 N LRC,LRDPF,LRWHN,LRH,LRT,LRABV
"RTN","MAGTP012",55,0)
 N ORIEN,IEN,IENS,IENS1
"RTN","MAGTP012",56,0)
 N LRFDA,LRSVC,LRU
"RTN","MAGTP012",57,0)
 S DFN=$P(ENT,U,1)                             ; Patient ID
"RTN","MAGTP012",58,0)
 I $$GET1^DIQ(2,DFN_",",.01)="" D  Q           ; Supported IA #10035
"RTN","MAGTP012",59,0)
 . S MAGRY(0)="0^0^Invalid Patient ID or Patient not in the system"
"RTN","MAGTP012",60,0)
 S LRSD=+$$NOW^XLFDT
"RTN","MAGTP012",61,0)
 S LRAD=$E(LRSD,1,3)_"0000"                    ; Must create case in present year
"RTN","MAGTP012",62,0)
 S OLRAC=$P(ENT,U,2)                           ; Original LRAC (ex.: SP 12 1) to be copied
"RTN","MAGTP012",63,0)
 S OSTAT=$P(ENT,U,3)                           ; Original Station Number
"RTN","MAGTP012",64,0)
 S OSITE=$$IEN^XUAF4(OSTAT)                    ; Original Site Number
"RTN","MAGTP012",65,0)
 S ONAME=$$NAME^XUAF4(OSITE)                   ; Original Site Name
"RTN","MAGTP012",66,0)
 S LRSS=$E(OLRAC,1,2)                          ; AP section
"RTN","MAGTP012",67,0)
 S LRSF=$S(LRSS="CY":63.09,LRSS="EM":63.02,LRSS="SP":63.08,1:"")
"RTN","MAGTP012",68,0)
 I LRSF="" S MAGRY(0)="0^0^Invalid AP Section" Q
"RTN","MAGTP012",69,0)
 S LRAA=$$FIND1^DIC(68,"","B",LRSS)
"RTN","MAGTP012",70,0)
 ;
"RTN","MAGTP012",71,0)
 ; Enter new LRFN if needed
"RTN","MAGTP012",72,0)
 ;
"RTN","MAGTP012",73,0)
 S LRDFN=$$GET1^DIQ(2,DFN_",",63)              ; Supported IA #10035
"RTN","MAGTP012",74,0)
 I LRDFN=""  D
"RTN","MAGTP012",75,0)
 . S LRDFN=$O(^LR("A"),-1)+1
"RTN","MAGTP012",76,0)
 . S LRFDA(63,"+1,",.01)=LRDFN
"RTN","MAGTP012",77,0)
 . S LRFDA(63,"+1,",.02)=2
"RTN","MAGTP012",78,0)
 . S LRFDA(63,"+1,",.03)=DFN
"RTN","MAGTP012",79,0)
 . ; Set Location
"RTN","MAGTP012",80,0)
 . S LOC=$$GET1^DIQ(2,DFN_",",.1)              ; Supported IA #10035
"RTN","MAGTP012",81,0)
 . S LOC=$$FIND1^DIC(42,"","B",LOC)            ; Supported IA #10039
"RTN","MAGTP012",82,0)
 . S:LOC LRLLOC=$$GET1^DIQ(44,$$GET1^DIQ(42,LOC,44,"I"),1)  ; Supported IA #10039, IA #10040
"RTN","MAGTP012",83,0)
 . S DOD=$$GET1^DIQ(2,DFN_",",.351,"I")        ; Date of Death ; Supported IA #10035
"RTN","MAGTP012",84,0)
 . S:DOD LRLLOC="DIED "_$TR($$FMTE^XLFDT(DOD,"1M"),"@"," ")
"RTN","MAGTP012",85,0)
 . S LRFDA(63,"+1,",.1)=$G(LRLLOC,"UNKNOWN")   ; Used in file (#63)
"RTN","MAGTP012",86,0)
 . ; Set Location Type
"RTN","MAGTP012",87,0)
 . I LOC S LRCAPLOC=$$GET1^DIQ(44,$$GET1^DIQ(42,LOC,44,"I"),2,"I")  ; Supported IA #10039, IA #10040
"RTN","MAGTP012",88,0)
 . S LRFDA(63,"+1,",.092)=$G(LRCAPLOC,"Z")
"RTN","MAGTP012",89,0)
 . D UPDATE^DIE("","LRFDA","","MAGERR")
"RTN","MAGTP012",90,0)
 . Q
"RTN","MAGTP012",91,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP012",92,0)
 . S MAGRY(0)="0^0^LRDFN Update Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP012",93,0)
 ;
"RTN","MAGTP012",94,0)
 ; Location check
"RTN","MAGTP012",95,0)
 ;
"RTN","MAGTP012",96,0)
 S LOC=$$GET1^DIQ(63,LRDFN_",",.1)
"RTN","MAGTP012",97,0)
 S:LOC="" LOC=$$GET1^DIQ(2,DFN_",",.1)         ; Supported IA #10035
"RTN","MAGTP012",98,0)
 S LOC=$$FIND1^DIC(42,"","B",LOC)              ; Supported IA #10039
"RTN","MAGTP012",99,0)
 S LRCAPLOC=$$GET1^DIQ(63,LRDFN_",",.092,"I")
"RTN","MAGTP012",100,0)
 S:LRCAPLOC="" LRCAPLOC="Z"
"RTN","MAGTP012",101,0)
 I $G(LOC) D
"RTN","MAGTP012",102,0)
 . S LRLLOC=$$GET1^DIQ(44,$$GET1^DIQ(42,LOC,44,"I"),1)  ; Supported IA #10039, IA #10040
"RTN","MAGTP012",103,0)
 . S LRCAPLOC="W"
"RTN","MAGTP012",104,0)
 . Q
"RTN","MAGTP012",105,0)
 E  D
"RTN","MAGTP012",106,0)
 . S LRLLOC=$$GET1^DIQ(63,LRDFN_",",.1)
"RTN","MAGTP012",107,0)
 . I $L(LRLLOC) D
"RTN","MAGTP012",108,0)
 . . S X=+$$FIND1^DIC(44,"","X",LRLLOC)        ; Supported IA #10040
"RTN","MAGTP012",109,0)
 . . S LRSVC=$$GET1^DIQ(44,X_",",9.5)          ; Supported IA #...
"RTN","MAGTP012",110,0)
 . . Q
"RTN","MAGTP012",111,0)
 . Q
"RTN","MAGTP012",112,0)
 S:LRLLOC=""!(LRLLOC="UNKNOWN") LRLLOC="???"   ; Used in file (#68)
"RTN","MAGTP012",113,0)
 ;
"RTN","MAGTP012",114,0)
 ; Create entry in Accession file (#68)
"RTN","MAGTP012",115,0)
 ;
"RTN","MAGTP012",116,0)
 I '$D(^LRO(68,LRAA,1,LRAD,0)) D
"RTN","MAGTP012",117,0)
 . S ORIEN(1)=LRAD
"RTN","MAGTP012",118,0)
 . S IENS="+1,"_LRAA_","
"RTN","MAGTP012",119,0)
 . S LRFDA(1,68.01,IENS,.01)=LRAD
"RTN","MAGTP012",120,0)
 . D UPDATE^DIE("","LRFDA(1)","ORIEN","MAGERR")
"RTN","MAGTP012",121,0)
 . Q
"RTN","MAGTP012",122,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP012",123,0)
 . S MAGRY(0)="0^0^Accession File Header Update Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP012",124,0)
 ;
"RTN","MAGTP012",125,0)
 ; Update Accession file (#68)
"RTN","MAGTP012",126,0)
 ;
"RTN","MAGTP012",127,0)
 S LRH(2)=$E(LRAD,1,3)
"RTN","MAGTP012",128,0)
 L +^LRO(68,LRAA,1,LRAD):5 I '$T D  Q
"RTN","MAGTP012",129,0)
 . S MAGRY(0)="0^0^This record is locked by another user"
"RTN","MAGTP012",130,0)
 S LRAN=$P($G(^LRO(68,LRAA,1,LRAD,1,0)),"^",4)
"RTN","MAGTP012",131,0)
 F  S LRAN=LRAN+1 Q:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))
"RTN","MAGTP012",132,0)
 S LRXR="A"_LRSS,LRXREF=LRXR_"A"
"RTN","MAGTP012",133,0)
 I $D(^LR(LRXREF,LRH(2),LRSS,LRAN)) D
"RTN","MAGTP012",134,0)
 . F  S LRAN=LRAN+1 Q:'$D(^LR(LRXREF,LRH(2),LRSS,LRAN))
"RTN","MAGTP012",135,0)
 K ORIEN,LRFDA
"RTN","MAGTP012",136,0)
 S ORIEN(1)=LRAN
"RTN","MAGTP012",137,0)
 S IENS1="+1,"_LRAD_","_LRAA_","
"RTN","MAGTP012",138,0)
 S LRFDA(1,68.02,IENS1,.01)=LRDFN
"RTN","MAGTP012",139,0)
 D UPDATE^DIE("","LRFDA(1)","ORIEN","MAGERR")
"RTN","MAGTP012",140,0)
 L -^LRO(68,LRAA,1,LRAD)
"RTN","MAGTP012",141,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP012",142,0)
 . S MAGRY(0)="0^0^Accession Number Update Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP012",143,0)
 ;
"RTN","MAGTP012",144,0)
 ; Create LR entry in file (#63)
"RTN","MAGTP012",145,0)
 ;
"RTN","MAGTP012",146,0)
 S LRABV=LRSS
"RTN","MAGTP012",147,0)
 S LRI=9999999-LRSD                            ; Define inverse date
"RTN","MAGTP012",148,0)
 F  Q:'$D(^LR(LRDFN,LRSS,LRI,0))  S LRI=LRI-.00001
"RTN","MAGTP012",149,0)
 S LRC(5)="Reference to "_OLRAC_" at "_ONAME   ; Comment (Free text) in file (#68) 
"RTN","MAGTP012",150,0)
 ;
"RTN","MAGTP012",151,0)
 ; Header of case
"RTN","MAGTP012",152,0)
 ;
"RTN","MAGTP012",153,0)
 K ORIEN,LRFDA
"RTN","MAGTP012",154,0)
 S LRAC=LRSS_" "_$E(LRAD,2,3)_" "_LRAN
"RTN","MAGTP012",155,0)
 S ORIEN(1)=LRI
"RTN","MAGTP012",156,0)
 S LRFDA(1,LRSF,"+1,"_LRDFN_",",.01)=LRSD      ; Date/Time specimen taken
"RTN","MAGTP012",157,0)
 S LRFDA(1,LRSF,"+1,"_LRDFN_",",.02)=DUZ       ; Pathologist
"RTN","MAGTP012",158,0)
 S LRFDA(1,LRSF,"+1,"_LRDFN_",",.03)=LRSD      ; Date report completed
"RTN","MAGTP012",159,0)
 S LRFDA(1,LRSF,"+1,"_LRDFN_",",.06)=LRAC      ; Case number
"RTN","MAGTP012",160,0)
 S LRFDA(1,LRSF,"+1,"_LRDFN_",",.08)=$S(LRLLOC["?":"UNKNOWN",1:LRLLOC)  ; Location
"RTN","MAGTP012",161,0)
 S LRFDA(1,LRSF,"+1,"_LRDFN_",",.011)=LRC(5)   ; Specimen submitted by
"RTN","MAGTP012",162,0)
 S LRFDA(1,LRSF,"+1,"_LRDFN_",",.1)=LRSD       ; Date/Time specimen received
"RTN","MAGTP012",163,0)
 S LRFDA(1,LRSF,"+1,"_LRDFN_",",.11)=LRSD      ; Report release Date/Time
"RTN","MAGTP012",164,0)
 S LRFDA(1,LRSF,"+1,"_LRDFN_",",.13)=DUZ       ; Released by
"RTN","MAGTP012",165,0)
 D UPDATE^DIE("","LRFDA(1)","ORIEN","MAGERR")
"RTN","MAGTP012",166,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP012",167,0)
 . S MAGRY(0)="0^0^Case Update Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP012",168,0)
 ;
"RTN","MAGTP012",169,0)
 ; Enter Specimen
"RTN","MAGTP012",170,0)
 ;
"RTN","MAGTP012",171,0)
 K LRFDA
"RTN","MAGTP012",172,0)
 S IEN=LRI_","_LRDFN_","
"RTN","MAGTP012",173,0)
 S SUBF=+$$GET1^DID(LRSF,.012,"","SPECIFIER")  ; SubField for Specimen
"RTN","MAGTP012",174,0)
 S LRFDA(SUBF,"+1,"_IEN,.01)=LRC(5)
"RTN","MAGTP012",175,0)
 D UPDATE^DIE("E","LRFDA","","MAGERR")
"RTN","MAGTP012",176,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP012",177,0)
 . S MAGRY(0)="0^0^Specimen Update Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP012",178,0)
 ;
"RTN","MAGTP012",179,0)
 ; Enter Gross Description
"RTN","MAGTP012",180,0)
 ;
"RTN","MAGTP012",181,0)
 K LRFDA
"RTN","MAGTP012",182,0)
 S LRFDA(1)=LRC(5)                             ; Gross Description
"RTN","MAGTP012",183,0)
 D WP^DIE(LRSF,IEN,1,"","LRFDA","MAGERR")
"RTN","MAGTP012",184,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP012",185,0)
 . S MAGRY(0)="0^0^Gross Description Update Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP012",186,0)
 ;
"RTN","MAGTP012",187,0)
 ; Variables used by LRUWLF
"RTN","MAGTP012",188,0)
 S LRDPF=2,LRRC=LRSD,(LRMD(1),LRU)=""
"RTN","MAGTP012",189,0)
 S LRH(0)=LRH(2)+1700,LRWHN=$E(LRAD,2,3)
"RTN","MAGTP012",190,0)
 ;
"RTN","MAGTP012",191,0)
 D ^LRUWLF                                     ; Populate case in file (#68)
"RTN","MAGTP012",192,0)
 D ADD^MAGTP005(LRAC)                          ; Populate file (#2005.42) with new case entry
"RTN","MAGTP012",193,0)
 ;
"RTN","MAGTP012",194,0)
 ; Is workload turned on? If not quit
"RTN","MAGTP012",195,0)
 ;
"RTN","MAGTP012",196,0)
 S LRCAPA=+$$GET1^DIQ(69.9,"1,",17,"I")&(+$$GET1^DIQ(68,LRAA_",",10,"I"))
"RTN","MAGTP012",197,0)
 I 'LRCAPA S MAGRY(0)="1^0^Case generated^"_LRAC Q
"RTN","MAGTP012",198,0)
 ;
"RTN","MAGTP012",199,0)
 D @(LRSS_"^LRAPSWK")
"RTN","MAGTP012",200,0)
 I '$D(X) S MAGRY(0)="0^0^Related CPT codes not found" Q
"RTN","MAGTP012",201,0)
 I LRSS="CY" D                                 ; Set CYTOLOGY Lab test
"RTN","MAGTP012",202,0)
 . S X="CYTOLOGY"
"RTN","MAGTP012",203,0)
 . S LRT=$O(^LAB(60,"B",X,0))
"RTN","MAGTP012",204,0)
 . Q
"RTN","MAGTP012",205,0)
 I 'LRT D  Q
"RTN","MAGTP012",206,0)
 . S MAGRY(0)="0^0^Must have test in LAB TEST file (#60) called '"_X_"'"
"RTN","MAGTP012",207,0)
 S LRT(LRW("S"))=""                            ; Set results in LRT array          
"RTN","MAGTP012",208,0)
 D WKLD^LRAPRES   ;2                           ; Populate CPT codes in file (#68)
"RTN","MAGTP012",209,0)
 ;
"RTN","MAGTP012",210,0)
 ; For CY or SP set default verification CPT codes
"RTN","MAGTP012",211,0)
 ;
"RTN","MAGTP012",212,0)
 I ("CYSP"[LRSS) D  Q:($P($G(MAGRY(0)),U)=0)
"RTN","MAGTP012",213,0)
 . S X=$S(LRSS="SP":"SURGICAL PATH REPORTING",1:"CYTOLOGY REPORTING")
"RTN","MAGTP012",214,0)
 . D LRTX^MAGTP012(.MAGRY,X,.LRT)              ; Define array LRT
"RTN","MAGTP012",215,0)
 . D WKLD^LRAPRES  ;2                          ; Set workload into file (#68)
"RTN","MAGTP012",216,0)
 . Q
"RTN","MAGTP012",217,0)
 ;
"RTN","MAGTP012",218,0)
 I ($P($G(MAGRY(0)),U)'=0)!'$D(MAGRY(0)) D
"RTN","MAGTP012",219,0)
 . S MAGRY(0)="1^0^Case generated^"_LRAC
"RTN","MAGTP012",220,0)
 Q  ;
"RTN","MAGTP012",221,0)
 ;
"RTN","MAGTP012",222,0)
 ;+++++ CHECK FOR LABORATORY TEST
"RTN","MAGTP012",223,0)
 ;
"RTN","MAGTP012",224,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP012",225,0)
 ;               are returned to
"RTN","MAGTP012",226,0)
 ;
"RTN","MAGTP012",227,0)
 ; X             Name of required Laboratory test
"RTN","MAGTP012",228,0)
 ;
"RTN","MAGTP012",229,0)
 ; LRT           Laboratory test workload codes
"RTN","MAGTP012",230,0)
 ;               if test X is in the LAB TEST file (#60)
"RTN","MAGTP012",231,0)
 ;
"RTN","MAGTP012",232,0)
 ; Return Values
"RTN","MAGTP012",233,0)
 ; =============
"RTN","MAGTP012",234,0)
 ;
"RTN","MAGTP012",235,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP012",236,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP012",237,0)
 ;
"RTN","MAGTP012",238,0)
 ; MAGRY(0)     Description
"RTN","MAGTP012",239,0)
 ;                ^01: 1
"RTN","MAGTP012",240,0)
 ;                ^02: 0
"RTN","MAGTP012",241,0)
 ;
"RTN","MAGTP012",242,0)
 ; LRT           Laboratory test workload code
"RTN","MAGTP012",243,0)
 ;               if test X is in the LAB TEST file (#60)
"RTN","MAGTP012",244,0)
 ;
"RTN","MAGTP012",245,0)
 ; LRT(i)        CPT codes in file (#64)
"RTN","MAGTP012",246,0)
 ;
"RTN","MAGTP012",247,0)
LRTX(MAGRY,X,LRT) ;
"RTN","MAGTP012",248,0)
 K MAGRY,LRT
"RTN","MAGTP012",249,0)
 N B,TEXT
"RTN","MAGTP012",250,0)
 S LRT=$O(^LAB(60,"B",X,0))
"RTN","MAGTP012",251,0)
 S TEXT="0^0^Must have test in LAB TEST file (#60) called '"_X_"'"
"RTN","MAGTP012",252,0)
 S TEXT=TEXT_" with VERIFY WKLD CODES"
"RTN","MAGTP012",253,0)
 I 'LRT S MAGRY(0)=TEXT Q
"RTN","MAGTP012",254,0)
 F B=0:0 S B=$O(^LAB(60,LRT,9,B)) Q:'B  S LRT(B)=""
"RTN","MAGTP012",255,0)
 I $D(LRT)=11 S MAGRY(0)="1^0" Q
"RTN","MAGTP012",256,0)
 S MAGRY(0)=TEXT
"RTN","MAGTP012",257,0)
 Q
"RTN","MAGTP012",258,0)
 ;
"RTN","MAGTP012",259,0)
 ;***** EXTRACT CPT CODES AND VISIT LIST FOR A SPECIFIED CASE
"RTN","MAGTP012",260,0)
 ; RPC: MAGTP GET CPT CODE
"RTN","MAGTP012",261,0)
 ;
"RTN","MAGTP012",262,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP012",263,0)
 ;               are returned to.
"RTN","MAGTP012",264,0)
 ;
"RTN","MAGTP012",265,0)
 ; LRSS          AP Section
"RTN","MAGTP012",266,0)
 ;
"RTN","MAGTP012",267,0)
 ; YEAR          Accession Year (Two figures)
"RTN","MAGTP012",268,0)
 ;
"RTN","MAGTP012",269,0)
 ; LRAN          Accession Number
"RTN","MAGTP012",270,0)
 ;
"RTN","MAGTP012",271,0)
 ; Return Values
"RTN","MAGTP012",272,0)
 ; =============
"RTN","MAGTP012",273,0)
 ;
"RTN","MAGTP012",274,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP012",275,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP012",276,0)
 ;
"RTN","MAGTP012",277,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP012",278,0)
 ;
"RTN","MAGTP012",279,0)
 ; MAGRY(0)     Description
"RTN","MAGTP012",280,0)
 ;                ^01: 1
"RTN","MAGTP012",281,0)
 ;                ^02: Total Number of Lines
"RTN","MAGTP012",282,0)
 ;                ^03: "CPT Code"
"RTN","MAGTP012",283,0)
 ;                ^04: "CPT Description"
"RTN","MAGTP012",284,0)
 ;                ^05: "Multiply Factor"
"RTN","MAGTP012",285,0)
 ;                ^06: "Date/Time Entered"
"RTN","MAGTP012",286,0)
 ;                ^07: "User"
"RTN","MAGTP012",287,0)
 ;                ^08: "Visit List: " <Visit List if any>
"RTN","MAGTP012",288,0)
 ;
"RTN","MAGTP012",289,0)
 ; MAGRY(i)     Description
"RTN","MAGTP012",290,0)
 ;                ^01: CPT Code
"RTN","MAGTP012",291,0)
 ;                ^02: CPT Description
"RTN","MAGTP012",292,0)
 ;                ^03: Multiply Factor
"RTN","MAGTP012",293,0)
 ;                ^04: Date/Time Entered
"RTN","MAGTP012",294,0)
 ;                ^05: User
"RTN","MAGTP012",295,0)
 ;
"RTN","MAGTP012",296,0)
GETCPT(MAGRY,LRSS,YEAR,LRAN) ; RPC [MAGTP GET CPT CODE]
"RTN","MAGTP012",297,0)
 K MAGRY
"RTN","MAGTP012",298,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP012",299,0)
 I '$D(LRSS) S MAGRY(0)="0^0^Missing AP Section" Q
"RTN","MAGTP012",300,0)
 I '$D(YEAR) S MAGRY(0)="0^0^Missing Year" Q
"RTN","MAGTP012",301,0)
 I '$D(LRAN) S MAGRY(0)="0^0^Missing Accession Number" Q
"RTN","MAGTP012",302,0)
 N MAGOUT,MAGERR,INPUT,LRX,LRAA,LRAD
"RTN","MAGTP012",303,0)
 N LRSF,IEN,VSLST,TEST,CT,I,DATE,CODE,CODE81
"RTN","MAGTP012",304,0)
 S INPUT=$$CONTEXT^MAGTP006(.MAGRY,LRSS,YEAR,LRAN)
"RTN","MAGTP012",305,0)
 I 'MAGRY(0) S MAGRY(0)="0^0^No Entries for '"_LRSS_" "_YEAR_" "_LRAN_"'" Q
"RTN","MAGTP012",306,0)
 S LRX="A"_LRSS_"A"
"RTN","MAGTP012",307,0)
 S LRAD=$S($D(^LR(LRX,200+YEAR)):200+YEAR,$D(^LR(LRX,300+YEAR)):300+YEAR,1:"")_"0000"
"RTN","MAGTP012",308,0)
 S LRSF=$P(INPUT,","),IEN=$P(INPUT,",",2,4)
"RTN","MAGTP012",309,0)
 S LRAA=$$FIND1^DIC(68,"","B",LRSS)
"RTN","MAGTP012",310,0)
 S IEN=LRAN_","_LRAD_","_LRAA_","
"RTN","MAGTP012",311,0)
 S VSLST=$$GET1^DIQ(68.02,IEN,30)              ; List of PCE Encounters, separated by ';'
"RTN","MAGTP012",312,0)
 S IEN=","_IEN                                 ; IEN must have comma in front for LIST
"RTN","MAGTP012",313,0)
 D LIST^DIC(68.04,IEN,"@;.01;","P","","","","","","","MAGOUT","MAGERR")
"RTN","MAGTP012",314,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP012",315,0)
 . S MAGRY(0)="0^0^Accession Tests Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP012",316,0)
 S TEST=+$G(MAGOUT("DILIST",1,0))
"RTN","MAGTP012",317,0)
 I TEST=0 D  Q  ;no test taken
"RTN","MAGTP012",318,0)
 . I VSLST="" S MAGRY(0)="1^0^No Entries or Visits" Q    ; No visits, no CPT Codes
"RTN","MAGTP012",319,0)
 . S MAGRY(0)="1^0^No Tests But Visit "_VSLST
"RTN","MAGTP012",320,0)
 K MAGOUT
"RTN","MAGTP012",321,0)
 S IEN=","_TEST_IEN                            ; Add TEST to IEN for file (#68.14)
"RTN","MAGTP012",322,0)
 D LIST^DIC(68.14,IEN,"@;.01;.02;1I;2","P","","","","","","","MAGOUT","MAGERR")
"RTN","MAGTP012",323,0)
 I $D(MAGERR) D  Q
"RTN","MAGTP012",324,0)
 . S MAGRY(0)="0^0^Accession WKLD Codes Error: "_MAGERR("DIERR",1,"TEXT",1)
"RTN","MAGTP012",325,0)
 S CT=+MAGOUT("DILIST",0)
"RTN","MAGTP012",326,0)
 F I=1:1:CT D
"RTN","MAGTP012",327,0)
 . S MAGRY(I)=MAGOUT("DILIST",I,0)
"RTN","MAGTP012",328,0)
 . S DATE=$P(MAGRY(I),U,4)                     ; Convert date/time into MM/DD/YYYY hh:mm format
"RTN","MAGTP012",329,0)
 . S $P(MAGRY(I),U,4)=$TR($$FMTE^XLFDT(DATE,"5Z"),"@"," ")
"RTN","MAGTP012",330,0)
 . S CODE=$P(MAGRY(I),U)                       ; Get CPT code from file (#81) if present
"RTN","MAGTP012",331,0)
 . S CODE81=$$GET1^DIQ(64.018,"1,"_CODE_",",.01,"E")
"RTN","MAGTP012",332,0)
 . I CODE81]"" S $E(CODE81,$F(CODE81," ")-1)=U,$P(MAGRY(I),U,1,2)=CODE81 Q
"RTN","MAGTP012",333,0)
 . S $P(MAGRY(I),U)=$P($$GET1^DIQ(64,CODE_",",1),".")  ; Else show CPT Code from file (#64)
"RTN","MAGTP012",334,0)
 . Q
"RTN","MAGTP012",335,0)
 S MAGRY(0)="1^"_CT_"^CPT Code^CPT Description^Multiply Factor^Date/Time Entered^User^Visit List: "_VSLST
"RTN","MAGTP012",336,0)
 Q  ;
"RTN","MAGTP013")
0^17^B126866344
"RTN","MAGTP013",1,0)
MAGTP013 ;WOIFO/FG,MLH,JSL - TELEPATHOLOGY RPCS ; 25 Mar 2013 3:08 PM
"RTN","MAGTP013",2,0)
 ;;3.0;IMAGING;**138**;Mar 19, 2002;Build 4;Apr 03, 2013
"RTN","MAGTP013",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGTP013",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP013",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGTP013",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGTP013",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGTP013",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGTP013",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGTP013",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGTP013",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGTP013",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGTP013",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGTP013",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGTP013",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGTP013",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP013",17,0)
 ;;
"RTN","MAGTP013",18,0)
 Q  ;
"RTN","MAGTP013",19,0)
 ;
"RTN","MAGTP013",20,0)
 ;***** GET A LIST OF SELECTED UNRELEASED OR RELEASED REPORTS
"RTN","MAGTP013",21,0)
 ; RPC: MAGTP GET CASES
"RTN","MAGTP013",22,0)
 ;
"RTN","MAGTP013",23,0)
 ; .MAGRY        Reference to a local or global variable where the results
"RTN","MAGTP013",24,0)
 ;               are returned to.
"RTN","MAGTP013",25,0)
 ;
"RTN","MAGTP013",26,0)
 ; .ENT          Input array. The case numbers must be
"RTN","MAGTP013",27,0)
 ;               listed one on each line.
"RTN","MAGTP013",28,0)
 ;
"RTN","MAGTP013",29,0)
 ; Return Values
"RTN","MAGTP013",30,0)
 ; =============
"RTN","MAGTP013",31,0)
 ; 
"RTN","MAGTP013",32,0)
 ; If @MAGRY@(0) 1st '^'-piece is < 0, then an error
"RTN","MAGTP013",33,0)
 ; occurred during execution of the procedure: [code]^^[error explanation]
"RTN","MAGTP013",34,0)
 ;
"RTN","MAGTP013",35,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP013",36,0)
 ;
"RTN","MAGTP013",37,0)
 ; @MAGRY@(0)   Description
"RTN","MAGTP013",38,0)
 ;                ^01: 0   if all case numbers sent in array ENT were found
"RTN","MAGTP013",39,0)
 ;                     1   if one or more case numbers sent in array ENT were not found
"RTN","MAGTP013",40,0)
 ;                ^02: Total Number of Lines
"RTN","MAGTP013",41,0)
 ;
"RTN","MAGTP013",42,0)
 ; @MAGRY@(i)   Description 
"RTN","MAGTP013",43,0)
 ;                ^01: Case Number
"RTN","MAGTP013",44,0)
 ;                     (if case not found, error description will follow
"RTN","MAGTP013",45,0)
 ;                      and pieces 2-19 will not be populated)
"RTN","MAGTP013",46,0)
 ;                ^02: Reserved Entry (0/1 for Not Reserved/Reserved) 
"RTN","MAGTP013",47,0)
 ;                ^03: Initials of who reserved the case in the LAB DATA file (#63)
"RTN","MAGTP013",48,0)
 ;                ^04: Patient's Name
"RTN","MAGTP013",49,0)
 ;                ^05: Patient's ID Number
"RTN","MAGTP013",50,0)
 ;                ^06: Priority
"RTN","MAGTP013",51,0)
 ;                ^07: Slide(s) Available
"RTN","MAGTP013",52,0)
 ;                ^08: Date/Time Specimen Taken
"RTN","MAGTP013",53,0)
 ;                ^09: Case Status
"RTN","MAGTP013",54,0)
 ;                ^10: Site Initials
"RTN","MAGTP013",55,0)
 ;                ^11: AP Section
"RTN","MAGTP013",56,0)
 ;                ^12: Year
"RTN","MAGTP013",57,0)
 ;                ^13: Accession Number
"RTN","MAGTP013",58,0)
 ;                ^14: ICN
"RTN","MAGTP013",59,0)
 ;                ^15: Specimen Count
"RTN","MAGTP013",60,0)
 ;                ^16: Reading Method
"RTN","MAGTP013",61,0)
 ;                ^17: Patient's Short ID
"RTN","MAGTP013",62,0)
 ;                ^18: Is there a Note? (Yes/No) 
"RTN","MAGTP013",63,0)
 ;                ^19: Employee/Sensitive? (1=Yes/0=No)
"RTN","MAGTP013",64,0)
 ;
"RTN","MAGTP013",65,0)
GETCAS(MAGRY,ENT) ; RPC [MAGTP GET CASES]
"RTN","MAGTP013",66,0)
 K MAGRY
"RTN","MAGTP013",67,0)
 I $D(ENT)<10 S MAGRY(0)="-2^^No Input" Q
"RTN","MAGTP013",68,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGUTERR"
"RTN","MAGTP013",69,0)
 N CT,BDFLG,LINE,LRAC,LRSS,YEAR
"RTN","MAGTP013",70,0)
 N LRAN,LRSF,LRX,LRDFN,LRI,IEN
"RTN","MAGTP013",71,0)
 N RDATE,FLAG,PNM,DFN,REC,OUTPUT,LRAA,YR,LRACC
"RTN","MAGTP013",72,0)
 S (CT,LINE)=""
"RTN","MAGTP013",73,0)
 S BDFLG=0                                     ; If BDFLG=1 there's a bad entry
"RTN","MAGTP013",74,0)
 F  S LINE=$O(ENT(LINE)) Q:LINE=""!(BDFLG)  D
"RTN","MAGTP013",75,0)
 . S LRAC=ENT(LINE)    ;Ex: 'SP 13 12'         ; Read case number
"RTN","MAGTP013",76,0)
 . S LRSS=$E(LRAC,1,2)
"RTN","MAGTP013",77,0)
 . S YEAR=$E(LRAC,4,5)
"RTN","MAGTP013",78,0)
 . S LRAN=$E(LRAC,7,$L(LRAC))
"RTN","MAGTP013",79,0)
 . S CT=CT+1
"RTN","MAGTP013",80,0)
 . I LRAN'?1.N S MAGRY(CT)=LRAC_": Invalid Accession Number",BDFLG=1 Q
"RTN","MAGTP013",81,0)
 . ; Only these three AP Sections considered
"RTN","MAGTP013",82,0)
 . S LRSF=$S(LRSS="CY":63.09,LRSS="EM":63.02,LRSS="SP":63.08,1:"")
"RTN","MAGTP013",83,0)
 . I LRSF="" S MAGRY(CT)=LRAC_": Invalid AP Section",BDFLG=1 Q
"RTN","MAGTP013",84,0)
 . S LRX="A"_LRSS_"A"
"RTN","MAGTP013",85,0)
 . ; Find 3-digit year in index
"RTN","MAGTP013",86,0)
 . S YR=$S($D(^LR(LRX,200+YEAR)):200+YEAR,$D(^LR(LRX,300+YEAR)):300+YEAR,1:"")
"RTN","MAGTP013",87,0)
 . I YR="" S MAGRY(CT)=LRAC_": Invalid Year "_YEAR,BDFLG=1 Q
"RTN","MAGTP013",88,0)
 . I '$D(^LR(LRX,YEAR,LRSS,LRAN)) D        ; Try new style case(s) after LEDI
"RTN","MAGTP013",89,0)
 . . S LRAA=$O(^LRO(68,"B",LRSS,0)),IEN="" ; Number for #68 Acc - CY EM SP
"RTN","MAGTP013",90,0)
 . . F YR=(300+YEAR*10000),(200+YEAR*10000) D  Q:IEN'=""    ; YR 2000, 1900
"RTN","MAGTP013",91,0)
 . . . S LRDFN=+$P($G(^LRO(68,LRAA,1,YR,1,LRAN,0)),"^",1)
"RTN","MAGTP013",92,0)
 . . . I 'LRDFN S MAGRY(CT)=LRAC_": Record Not Found LRDFN" Q
"RTN","MAGTP013",93,0)
 . . . S LRI=+$P($G(^LRO(68,LRAA,1,YR,1,LRAN,3)),"^",5)
"RTN","MAGTP013",94,0)
 . . . I 'LRI S MAGRY(CT)=LRAC_": Record Not Found LRI" Q
"RTN","MAGTP013",95,0)
 . . . S IEN=LRI_","_LRDFN_","
"RTN","MAGTP013",96,0)
 . . . S LRACC=$G(^LRO(68,LRAA,1,YR,1,LRAN,.2)) Q:LRACC=""  ; Accession
"RTN","MAGTP013",97,0)
 . . . S REC=$O(^MAG(2005.42,"B",LRACC,""))_","             ; Record Number worklist
"RTN","MAGTP013",98,0)
 . . . S PNM=$$GET1^DIQ(63,LRDFN_",",".03")
"RTN","MAGTP013",99,0)
 . . . S DFN=$$GET1^DIQ(63,LRDFN_",",".03","I"),FLAG=$G(FLAG,0)
"RTN","MAGTP013",100,0)
 . . . S OUTPUT=$$GETCASE^MAGTP009(LRSS,LRACC,LRSF,IEN,REC,FLAG,PNM,DFN)
"RTN","MAGTP013",101,0)
 . . . S MAGRY(CT)=LRACC_U_OUTPUT
"RTN","MAGTP013",102,0)
 . . . Q  ; OUTPUT contains pieces ^02:^17 defined above in the MAGRY(i) description
"RTN","MAGTP013",103,0)
 . . I IEN=""!(LRACC="") S MAGRY(CT)=LRAC_": Record Not Found In #68",BDFLG=1
"RTN","MAGTP013",104,0)
 . . Q
"RTN","MAGTP013",105,0)
 . I $D(^LR(LRX,YR,LRSS,LRAN)) D  ;old style before LEDI
"RTN","MAGTP013",106,0)
 . . S LRDFN=$O(^LR(LRX,YR,LRSS,LRAN,""))
"RTN","MAGTP013",107,0)
 . . I LRDFN="" S MAGRY(CT)=LRAC_": Record Not Found LRDFN",BDFLG=1 Q
"RTN","MAGTP013",108,0)
 . . S LRI=$O(^LR(LRX,YR,LRSS,LRAN,LRDFN,""))
"RTN","MAGTP013",109,0)
 . . I LRI="" S MAGRY(CT)=LRAC_": Record Not Found LRI",BDFLG=1 Q
"RTN","MAGTP013",110,0)
 . . S IEN=LRI_","_LRDFN_","
"RTN","MAGTP013",111,0)
 . . S RDATE=+$$GET1^DIQ(LRSF,IEN,.11,"I")       ; Release date if any
"RTN","MAGTP013",112,0)
 . . S FLAG=$S(RDATE:1,1:0)
"RTN","MAGTP013",113,0)
 . . S PNM=$$GET1^DIQ(63,LRDFN_",",".03")
"RTN","MAGTP013",114,0)
 . . S DFN=$$GET1^DIQ(63,LRDFN_",",".03","I")
"RTN","MAGTP013",115,0)
 . . S REC=$O(^MAG(2005.42,"B",LRAC,""))_","
"RTN","MAGTP013",116,0)
 . . ; OUTPUT contains pieces ^02:^17 defined above in the MAGRY(i) description
"RTN","MAGTP013",117,0)
 . . S OUTPUT=$$GETCASE^MAGTP009(LRSS,LRAC,LRSF,IEN,REC,FLAG,PNM,DFN)
"RTN","MAGTP013",118,0)
 . . S MAGRY(CT)=LRAC_U_OUTPUT
"RTN","MAGTP013",119,0)
 . . Q
"RTN","MAGTP013",120,0)
 . Q
"RTN","MAGTP013",121,0)
 ;
"RTN","MAGTP013",122,0)
 ; Header
"RTN","MAGTP013",123,0)
 ;
"RTN","MAGTP013",124,0)
 S MAGRY(0)=BDFLG_"^"_CT
"RTN","MAGTP013",125,0)
 Q  ;
"RTN","MAGTP013",126,0)
 ;
"RTN","MAGTP013",127,0)
 ;***** CHECK WHETHER THERE ARE PENDING CONSULTATIONS FOR A SITE
"RTN","MAGTP013",128,0)
 ; RPC: MAGTP CHECK CONS
"RTN","MAGTP013",129,0)
 ;
"RTN","MAGTP013",130,0)
 ; .MAGRY        Reference to a local or global variable where the results
"RTN","MAGTP013",131,0)
 ;               are returned to.
"RTN","MAGTP013",132,0)
 ;
"RTN","MAGTP013",133,0)
 ; STAT          Interpreting Station Number
"RTN","MAGTP013",134,0)
 ;
"RTN","MAGTP013",135,0)
 ; Return Values
"RTN","MAGTP013",136,0)
 ; =============
"RTN","MAGTP013",137,0)
 ;
"RTN","MAGTP013",138,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP013",139,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP013",140,0)
 ;
"RTN","MAGTP013",141,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP013",142,0)
 ;
"RTN","MAGTP013",143,0)
 ; MAGRY(0)     Description
"RTN","MAGTP013",144,0)
 ;                ^01: 1
"RTN","MAGTP013",145,0)
 ;                ^02: 0
"RTN","MAGTP013",146,0)
 ;                ^03: 0:No Pending Consultations, 1:Pending Consultations
"RTN","MAGTP013",147,0)
 ;
"RTN","MAGTP013",148,0)
CHEKPEND(MAGRY,STAT) ; RPC [MAGTP CHECK CONS]
"RTN","MAGTP013",149,0)
 K MAGRY
"RTN","MAGTP013",150,0)
 I $G(STAT)="" S MAGRY(0)="0^0^No Station Number" Q
"RTN","MAGTP013",151,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP013",152,0)
 N FILE,SITE,SCREEN,MAGOUT,MAGERR
"RTN","MAGTP013",153,0)
 S FILE=2005.43
"RTN","MAGTP013",154,0)
 ; Screen to get only pending consultations matching SITE 
"RTN","MAGTP013",155,0)
 S SITE=$$IEN^XUAF4(STAT)                      ; Supported IA #2171 ; Site Number
"RTN","MAGTP013",156,0)
 I SITE="" S MAGRY(0)="0^0^Invalid Station Number" Q
"RTN","MAGTP013",157,0)
 S SCREEN="I $P(^(0),U,2)=1"                   ; Filter type 1:CONSULTATION
"RTN","MAGTP013",158,0)
 S SCREEN=SCREEN_",($P(^(0),U,4)="""_SITE_""")"  ; Filter site number
"RTN","MAGTP013",159,0)
 S SCREEN=SCREEN_",($P(^(0),U,6)=0)"           ; Filter status 0:PENDING
"RTN","MAGTP013",160,0)
 D LIST^DIC(FILE,"","@;","P","","","","",SCREEN,"","MAGOUT","MAGERR")
"RTN","MAGTP013",161,0)
 I $D(MAGERR) S MAGRY(0)="0^0^Access Error: "_MAGERR("DIERR",1,"TEXT",1) Q
"RTN","MAGTP013",162,0)
 I +MAGOUT("DILIST",0) S MAGRY(0)="1^0^1" Q
"RTN","MAGTP013",163,0)
 S MAGRY(0)="1^0^0"
"RTN","MAGTP013",164,0)
 Q  ;
"RTN","MAGTP013",165,0)
 ;
"RTN","MAGTP013",166,0)
 ;+++++ CHECK WHETHER A PATIENT EXISTS AT A SITE
"RTN","MAGTP013",167,0)
 ;      AND SEND A MAILMAN EMAIL TO A REMOTE USER
"RTN","MAGTP013",168,0)
 ;      GROUP TO REGISTER THE PATIENT
"RTN","MAGTP013",169,0)
 ;
"RTN","MAGTP013",170,0)
 ; LRAC          Accession Code for the case
"RTN","MAGTP013",171,0)
 ;
"RTN","MAGTP013",172,0)
 ; STAT          Remote station number where the group is set up
"RTN","MAGTP013",173,0)
 ;
"RTN","MAGTP013",174,0)
 ; Return Values
"RTN","MAGTP013",175,0)
 ; =============
"RTN","MAGTP013",176,0)
 ;
"RTN","MAGTP013",177,0)
 ; CKDFN        Description
"RTN","MAGTP013",178,0)
 ;                ^01: "Invalid Patient ID or Patient not in the system"
"RTN","MAGTP013",179,0)
 ;                     "Patient <DFN> exists at <Site Name>"
"RTN","MAGTP013",180,0)
 ;                     "Email sent"
"RTN","MAGTP013",181,0)
 ;                     "Email to Mailman group not sent: "_<Error>
"RTN","MAGTP013",182,0)
 ;
"RTN","MAGTP013",183,0)
CHECKDFN(LRAC,STAT) ;
"RTN","MAGTP013",184,0)
 N LRSS,LRX,YEAR,LRAN,LRDFN,DFN,SITE,NAME
"RTN","MAGTP013",185,0)
 N SCREEN,MAGOUT,MAGERR,PNM,CKDFN
"RTN","MAGTP013",186,0)
 ;
"RTN","MAGTP013",187,0)
 ; Extract DFN
"RTN","MAGTP013",188,0)
 ;
"RTN","MAGTP013",189,0)
 S LRSS=$E(LRAC,1,2)
"RTN","MAGTP013",190,0)
 S LRX="A"_LRSS_"A"
"RTN","MAGTP013",191,0)
 S YEAR=$E(LRAC,4,5)
"RTN","MAGTP013",192,0)
 ; Find 3-digit year in index
"RTN","MAGTP013",193,0)
 S YEAR=$S($D(^LR(LRX,200+YEAR)):200+YEAR,$D(^LR(LRX,300+YEAR)):300+YEAR,1:"")
"RTN","MAGTP013",194,0)
 S LRAN=$E(LRAC,7,$L(LRAC))
"RTN","MAGTP013",195,0)
 S LRDFN=$O(^LR(LRX,YEAR,LRSS,LRAN,""))
"RTN","MAGTP013",196,0)
 S DFN=$$GET1^DIQ(63,LRDFN_",",".03","I")
"RTN","MAGTP013",197,0)
 S PNM=$$GET1^DIQ(2,DFN_",",.01)               ; Supported IA #10035
"RTN","MAGTP013",198,0)
 I PNM="" D  Q CKDFN
"RTN","MAGTP013",199,0)
 . S CKDFN="Invalid Patient ID or Patient not in the system"
"RTN","MAGTP013",200,0)
 S SITE=$$IEN^XUAF4(STAT)                      ; Supported IA #2171 ; Site Number
"RTN","MAGTP013",201,0)
 I SITE="" S CKDFN="Invalid Remote Station Number" Q CKDFN
"RTN","MAGTP013",202,0)
 S NAME=$$NAME^XUAF4(SITE)                     ; Supported IA #2171 ; Site Name
"RTN","MAGTP013",203,0)
 ;
"RTN","MAGTP013",204,0)
 ; Check whether the patient exists at Station
"RTN","MAGTP013",205,0)
 ;
"RTN","MAGTP013",206,0)
 S SCREEN="I $P(^(0),U,1)="""_DFN_""""
"RTN","MAGTP013",207,0)
 S SCREEN=SCREEN_",($P(^(0),U,2)="""_SITE_""")"
"RTN","MAGTP013",208,0)
 D LIST^DIC(391.91,"","@;.01I","P","","","","",SCREEN,"","MAGOUT","MAGERR")
"RTN","MAGTP013",209,0)
 I $D(MAGERR) S CKDFN=MAGERR("DIERR",1,"TEXT",1) Q CKDFN
"RTN","MAGTP013",210,0)
 I +MAGOUT("DILIST",0) D  Q CKDFN
"RTN","MAGTP013",211,0)
 . S CKDFN="Patient "_PNM_" exists at "_NAME
"RTN","MAGTP013",212,0)
 ;
"RTN","MAGTP013",213,0)
 ; Send Mailman email if no match
"RTN","MAGTP013",214,0)
 ;
"RTN","MAGTP013",215,0)
 N MAGREC,NODE,VADM,VAEL,VAERR,XMDUZ
"RTN","MAGTP013",216,0)
 N XMSUB,XMTEXT,MAGA,XMY,REC,XMZ,XMMG
"RTN","MAGTP013",217,0)
 S MAGREC=$O(^MAG(2006.19,"D",SITE,""))
"RTN","MAGTP013",218,0)
 S NODE=$$GET1^DIQ(2006.19,MAGREC_",",.06)
"RTN","MAGTP013",219,0)
 I NODE="" S CKDFN="Mail Domain not found for "_NAME Q CKDFN
"RTN","MAGTP013",220,0)
 ; Patient demographics
"RTN","MAGTP013",221,0)
 D DEM^VADPT,ELIG^VADPT                        ; Supported IA #10061
"RTN","MAGTP013",222,0)
 I VAERR D  Q CKDFN
"RTN","MAGTP013",223,0)
 . S CKDFN="Invalid Patient ID or Patient not in the system"
"RTN","MAGTP013",224,0)
 S XMDUZ=DUZ
"RTN","MAGTP013",225,0)
 S XMSUB="Patient Registration Request"
"RTN","MAGTP013",226,0)
 S XMTEXT="MAGA("
"RTN","MAGTP013",227,0)
 S MAGA(1)=""
"RTN","MAGTP013",228,0)
 S MAGA(2)=" Patient Registration Request"
"RTN","MAGTP013",229,0)
 S MAGA(3)=""
"RTN","MAGTP013",230,0)
 S MAGA(4)=" DFN:     "_DFN
"RTN","MAGTP013",231,0)
 S MAGA(5)=" Patient: "_VADM(1)
"RTN","MAGTP013",232,0)
 S MAGA(6)=" SSN:     "_$P(VADM(2),U,2)
"RTN","MAGTP013",233,0)
 S MAGA(7)=" DOB:     "_$$FMTE^XLFDT($P(VADM(3),U),"5Z")
"RTN","MAGTP013",234,0)
 S MAGA(8)=" Age:     "_VADM(4)
"RTN","MAGTP013",235,0)
 S MAGA(9)=" Sex:     "_$P(VADM(5),U,2)
"RTN","MAGTP013",236,0)
 S MAGA(10)=" Service? "_$S(+VAEL(3):"YES",1:"NO")
"RTN","MAGTP013",237,0)
 S MAGA(11)=" Type:    "_$P(VAEL(6),U,2)
"RTN","MAGTP013",238,0)
 S MAGA(12)=" Veteran? "_$S(+VAEL(4):"YES",1:"NO")
"RTN","MAGTP013",239,0)
 S MAGA(13)=" ICN      "_$$GETICN^MAGUE006(DFN,,"1^SUPPRESS_CODE")
"RTN","MAGTP013",240,0)
 ; Set recipients of message
"RTN","MAGTP013",241,0)
 S REC="G.MAG_TP_REG_PAT@"_NODE ;TP REG PAT@ -remote mail group
"RTN","MAGTP013",242,0)
 S XMY(REC)=""
"RTN","MAGTP013",243,0)
 D ^XMD                                        ; IA #10070
"RTN","MAGTP013",244,0)
 I $G(XMMG) D  Q CKDFN
"RTN","MAGTP013",245,0)
 . S CKDFN="Email to Mailman group not sent: "_XMMG
"RTN","MAGTP013",246,0)
 I $G(XMZ) D
"RTN","MAGTP013",247,0)
 . S CKDFN="Email to Mailman group sent to register patient "_PNM_" [MSG# "_XMZ_"]"
"RTN","MAGTP013",248,0)
 Q $G(CKDFN) ;
"RTN","MAGTP013",249,0)
 ;
"RTN","MAGTP013",250,0)
 ;***** DELETE A SELECTED SNOMED CODE FROM A CASE
"RTN","MAGTP013",251,0)
 ; RPC: MAGTP DEL SNOMED CODES
"RTN","MAGTP013",252,0)
 ;
"RTN","MAGTP013",253,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP013",254,0)
 ;               are returned to.
"RTN","MAGTP013",255,0)
 ;
"RTN","MAGTP013",256,0)
 ; ENT           List of inputs:
"RTN","MAGTP013",257,0)
 ;
"RTN","MAGTP013",258,0)
 ;                ^01: Comma separated list of IENs
"RTN","MAGTP013",259,0)
 ;                     defining the SNOMED code to delete
"RTN","MAGTP013",260,0)
 ;                ^02: Subfield label
"RTN","MAGTP013",261,0)
 ;
"RTN","MAGTP013",262,0)
 ; LRSS          AP Section
"RTN","MAGTP013",263,0)
 ;
"RTN","MAGTP013",264,0)
 ; YEAR          Accession Year (Two figures)
"RTN","MAGTP013",265,0)
 ;
"RTN","MAGTP013",266,0)
 ; LRAN          Accession Number
"RTN","MAGTP013",267,0)
 ;
"RTN","MAGTP013",268,0)
 ; Return Values
"RTN","MAGTP013",269,0)
 ; =============
"RTN","MAGTP013",270,0)
 ;
"RTN","MAGTP013",271,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP013",272,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP013",273,0)
 ;
"RTN","MAGTP013",274,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP013",275,0)
 ;
"RTN","MAGTP013",276,0)
 ; MAGRY(0)     Description
"RTN","MAGTP013",277,0)
 ;                ^01: 1
"RTN","MAGTP013",278,0)
 ;                ^02: 0
"RTN","MAGTP013",279,0)
 ;                ^03: <LABEL> Record <RECORD> deleted
"RTN","MAGTP013",280,0)
 ;
"RTN","MAGTP013",281,0)
DELSNOMD(MAGRY,ENT,LRSS,YEAR,LRAN) ; RPC [MAGTP DEL SNOMED CODES]
"RTN","MAGTP013",282,0)
 K MAGRY
"RTN","MAGTP013",283,0)
 I $G(ENT)="" S MAGRY(0)="0^0^No entries" Q
"RTN","MAGTP013",284,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP013",285,0)
 I $G(LRSS)=""!($G(YEAR)="")!($G(LRAN)="") D  Q
"RTN","MAGTP013",286,0)
 . S MAGRY(0)="0^0^One or more case input parameters are missing"
"RTN","MAGTP013",287,0)
 N INPUT
"RTN","MAGTP013",288,0)
 S INPUT=$$CONTEXT^MAGTP006(.MAGRY,LRSS,YEAR,LRAN) Q:'MAGRY(0)
"RTN","MAGTP013",289,0)
 N LRSF,LRI,LRDFN,IEN,N,LABEL,SUBF
"RTN","MAGTP013",290,0)
 N OT,NJ,LEN,DA,SUBFJ,NUM,SUBFI,REC,DIK
"RTN","MAGTP013",291,0)
 S LRSF=$P(INPUT,","),LRI=$P(INPUT,",",2)
"RTN","MAGTP013",292,0)
 S LRDFN=$P(INPUT,",",3),IEN=$P(INPUT,",",2,4)
"RTN","MAGTP013",293,0)
 S N=$P(ENT,U)                                 ; Internal numbers
"RTN","MAGTP013",294,0)
 S LABEL=$P(ENT,U,2)                           ; Subfield label
"RTN","MAGTP013",295,0)
 S SUBF=+$$GET1^DID(LRSF,10,"","SPECIFIER")    ; Use field number 10 for O/T field
"RTN","MAGTP013",296,0)
 S OT=+$$GET1^DID(LRSF,10,"","GLOBAL SUBSCRIPT LOCATION")
"RTN","MAGTP013",297,0)
 S NJ=N_","_OT                                 ; OT=2 for Organ/Tissue
"RTN","MAGTP013",298,0)
 S NJ=$REVERSE(NJ)                             ; Invert order for DIK
"RTN","MAGTP013",299,0)
 S LEN=$L(NJ,",")                              ; How many pieces in the IEN?
"RTN","MAGTP013",300,0)
 S DA=$P(NJ,",",LEN)                           ; Last one must be set as DA for DIK
"RTN","MAGTP013",301,0)
 ; Cases
"RTN","MAGTP013",302,0)
 I LABEL["ORGAN/TISSUE" D  Q:'MAGRY(0)         ; CY and EM have "CYTOPATH" and "EM" in front
"RTN","MAGTP013",303,0)
 . I LEN'=2 S MAGRY(0)="0^0^Invalid IENs" Q    ; Verify internal pointers to O/T
"RTN","MAGTP013",304,0)
 . S SUBFJ=SUBF                                ; No further level if Organ/Tissue
"RTN","MAGTP013",305,0)
 . S NJ=OT                                     ; Only OT for Organ/Tissue
"RTN","MAGTP013",306,0)
 . Q
"RTN","MAGTP013",307,0)
 I LABEL'="ETIOLOGY",(LABEL'["ORGAN/TISSUE") D  Q:'MAGRY(0)
"RTN","MAGTP013",308,0)
 . I LEN'=3 S MAGRY(0)="0^0^Invalid IENs" Q    ; Verify internal pointers to O/T subfields
"RTN","MAGTP013",309,0)
 . S SUBFJ=+$$GET1^DID(SUBF,LABEL,"","SPECIFIER")
"RTN","MAGTP013",310,0)
 . I SUBFJ=0!LABEL D  Q
"RTN","MAGTP013",311,0)
 . . S MAGRY(0)="0^0^"_LABEL_" Invalid"        ; LABEL must be text and valid
"RTN","MAGTP013",312,0)
 . S NUM=+$$GET1^DID(SUBF,LABEL,"","GLOBAL SUBSCRIPT LOCATION")
"RTN","MAGTP013",313,0)
 . S $P(NJ,",",LEN)=NUM                        ; Set the appropriate subscript
"RTN","MAGTP013",314,0)
 . Q
"RTN","MAGTP013",315,0)
 I LABEL="ETIOLOGY" D  Q:'MAGRY(0)             ; ETIOLOGY is a subfield of MORPHOLOGY
"RTN","MAGTP013",316,0)
 . I LEN'=4 S MAGRY(0)="0^0^Invalid IENs" Q    ; Verify internal pointers to ETIOLOGY
"RTN","MAGTP013",317,0)
 . S SUBFI=+$$GET1^DID(SUBF,"MORPHOLOGY","","SPECIFIER")
"RTN","MAGTP013",318,0)
 . S SUBFJ=+$$GET1^DID(SUBFI,"ETIOLOGY","","SPECIFIER")
"RTN","MAGTP013",319,0)
 . S NUM=+$$GET1^DID(SUBF,"MORPHOLOGY","","GLOBAL SUBSCRIPT LOCATION")
"RTN","MAGTP013",320,0)
 . S NJ=$P(NJ,",",1,2)_","_NUM_","_$P(NJ,",",3,4)
"RTN","MAGTP013",321,0)
 . S NUM=+$$GET1^DID(SUBFI,LABEL,"","GLOBAL SUBSCRIPT LOCATION")
"RTN","MAGTP013",322,0)
 . S $P(NJ,",",LEN+1)=NUM                      ; Length increased by 1 above
"RTN","MAGTP013",323,0)
 . Q
"RTN","MAGTP013",324,0)
 S REC=$$GET1^DIQ(SUBFJ,N_","_IEN,.01)         ; Read original record
"RTN","MAGTP013",325,0)
 I REC="" S MAGRY(0)="0^0^Record not found" Q  ; Check for existence
"RTN","MAGTP013",326,0)
 S DIK="^LR("_LRDFN_","""_LRSS_""","_LRI_","_NJ_","
"RTN","MAGTP013",327,0)
 D ^DIK
"RTN","MAGTP013",328,0)
 S MAGRY(0)="1^0^"_LABEL_" Record "_REC_" deleted"
"RTN","MAGTP013",329,0)
 Q  ;
"RTN","MAGTP015")
0^25^B8834530
"RTN","MAGTP015",1,0)
MAGTP015 ;WOIFO/FG,MLH - TELEPATHOLOGY II RPCS ; 25 Jun 2013 3:30 PM
"RTN","MAGTP015",2,0)
 ;;3.0;IMAGING;**138,200**;Mar 19, 2002;Build 4;MAY 28, 2015
"RTN","MAGTP015",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGTP015",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP015",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGTP015",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGTP015",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGTP015",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGTP015",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGTP015",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGTP015",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGTP015",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGTP015",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGTP015",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGTP015",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGTP015",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGTP015",17,0)
 ;;
"RTN","MAGTP015",18,0)
 Q  ;
"RTN","MAGTP015",19,0)
 ;
"RTN","MAGTP015",20,0)
 ;***** GET SLIDE IMAGE INFO FOR A SPECIFIED CASE/Accession
"RTN","MAGTP015",21,0)
 ; RPC: MAGTP GET CASE SLIDES INFO
"RTN","MAGTP015",22,0)
 ;
"RTN","MAGTP015",23,0)
 ; .MAGRY        Reference to a local variable where the results
"RTN","MAGTP015",24,0)
 ;               are returned to.
"RTN","MAGTP015",25,0)
 ;
"RTN","MAGTP015",26,0)
 ; ACCNO          Accession Number
"RTN","MAGTP015",27,0)
 ;
"RTN","MAGTP015",28,0)
 ; Return Values
"RTN","MAGTP015",29,0)
 ; =============
"RTN","MAGTP015",30,0)
 ; 
"RTN","MAGTP015",31,0)
 ; If MAGRY(0) 1st '^'-piece is 0, then an error
"RTN","MAGTP015",32,0)
 ; occurred during execution of the procedure: 0^0^ ERROR explanation
"RTN","MAGTP015",33,0)
 ;
"RTN","MAGTP015",34,0)
 ; Otherwise, the output array is as follows:
"RTN","MAGTP015",35,0)
 ;
"RTN","MAGTP015",36,0)
 ; MAGRY(0)     Description
"RTN","MAGTP015",37,0)
 ;                ^01: 1
"RTN","MAGTP015",38,0)
 ;                ^02: Total Number of Lines
"RTN","MAGTP015",39,0)
 ;                ^03: "Slide Number"
"RTN","MAGTP015",40,0)
 ;                ^04: "Date/Time Scanned"
"RTN","MAGTP015",41,0)
 ;                ^05: "URL"
"RTN","MAGTP015",42,0)
 ;                ^06: "Zoom Factor"
"RTN","MAGTP015",43,0)
 ;                ^07: "Scan Application"
"RTN","MAGTP015",44,0)
 ;                ^08: "Slide Status"
"RTN","MAGTP015",45,0)
 ;                ^09: "View Application"
"RTN","MAGTP015",46,0)
 ;                ^10: "Description"
"RTN","MAGTP015",47,0)
 ;
"RTN","MAGTP015",48,0)
 ; MAGRY(i)     Description
"RTN","MAGTP015",49,0)
 ;                ^01: "Slide Number"  (#2005.422)
"RTN","MAGTP015",50,0)
 ;                ^02: "Date/Time Scanned"
"RTN","MAGTP015",51,0)
 ;                ^03: "URL"
"RTN","MAGTP015",52,0)
 ;                ^04: "Zoom Factor"
"RTN","MAGTP015",53,0)
 ;                ^05: "Scan Application"
"RTN","MAGTP015",54,0)
 ;                ^06: "Slide Status"
"RTN","MAGTP015",55,0)
 ;                ^07: "View Application"
"RTN","MAGTP015",56,0)
 ;                ^08: "Description"
"RTN","MAGTP015",57,0)
 ;
"RTN","MAGTP015",58,0)
GETSDINF(MAGRY,ACCNO) ; RPC [MAGTP GET SLIDES INFO]
"RTN","MAGTP015",59,0)
 K MAGRY
"RTN","MAGTP015",60,0)
 N $ETRAP,$ESTACK S $ETRAP="D ERRA^MAGGTERR"
"RTN","MAGTP015",61,0)
 N IEN,MAGOUT,MAGERR,FLD,SDN,CNT,Y
"RTN","MAGTP015",62,0)
 I $L($G(ACCNO)) S IEN=$O(^MAG(2005.42,"B",ACCNO,""))
"RTN","MAGTP015",63,0)
 I $G(IEN)="" S MAGRY(0)="0^0^Invalid Accession Code: "_$G(ACCNO) Q
"RTN","MAGTP015",64,0)
 D GETS^DIQ(2005.42,IEN,"**","E","MAGOUT","MAGERR")
"RTN","MAGTP015",65,0)
 I $D(MAGERR) S MAGRY(0)="0^0^Access Error: "_MAGERR("DIERR",1,"TEXT",1) Q
"RTN","MAGTP015",66,0)
 S SDN="" F CNT=0:1 S SDN=$O(MAGOUT(2005.422,SDN)) Q:SDN=""  DO  I $L(Y) S MAGRY(CNT+1)=Y
"RTN","MAGTP015",67,0)
 . S FLD=0,Y="" F  S FLD=$O(MAGOUT(2005.422,SDN,FLD)) Q:'FLD  S Y=Y_$G(MAGOUT(2005.422,SDN,FLD,"E"))_U
"RTN","MAGTP015",68,0)
 . Q
"RTN","MAGTP015",69,0)
 U 0 W CNT,!
"RTN","MAGTP015",70,0)
 I CNT=0 S MAGRY(0)="0^0^No Slide Info for: "_$G(ACCNO) Q
"RTN","MAGTP015",71,0)
 S CNT=CNT,MAGRY(0)="1^"_CNT_"^Slide Number^Date/Time Scanned^URL^Zoom Factor^Scan Application^Slide Status^View Application^Description^"
"RTN","MAGTP015",72,0)
 Q
"RTN","MAGTP015",73,0)
 ;
"RTN","MAGTP015",74,0)
 
"RTN","MAGUE006")
0^18^B5793789
"RTN","MAGUE006",1,0)
MAGUE006 ;WOIFO/MLH - IMAGING - utilities - ICN lookup ; 19-Jul-2013 3:44 PM
"RTN","MAGUE006",2,0)
 ;;3.0;IMAGING;**138**;Mar 19, 2002;Build 4;Sep 03, 2013
"RTN","MAGUE006",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUE006",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUE006",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUE006",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUE006",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUE006",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUE006",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUE006",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUE006",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUE006",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUE006",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUE006",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUE006",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUE006",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUE006",17,0)
 ;;
"RTN","MAGUE006",18,0)
 Q  ;
"RTN","MAGUE006",19,0)
 ;
"RTN","MAGUE006",20,0)
 ;+++++ GET ICN GIVEN DFN
"RTN","MAGUE006",21,0)
 ;
"RTN","MAGUE006",22,0)
 ; MAGDFN        DFN of patient (internal entry number on PATIENT file (#2) )
"RTN","MAGUE006",23,0)
 ; 
"RTN","MAGUE006",24,0)
 ; DELIM         (optional) single punctuation character (e.g., comma (,))
"RTN","MAGUE006",25,0)
 ;               to which to change the up-arrow (^) delimiter returned
"RTN","MAGUE006",26,0)
 ;               by $$GETICN^MPIF001
"RTN","MAGUE006",27,0)
 ;               
"RTN","MAGUE006",28,0)
 ; SUPPRESS      (optional) set nonzero if error text only (no code) is desired
"RTN","MAGUE006",29,0)
 ; 
"RTN","MAGUE006",30,0)
 ; RETURN VALUES
"RTN","MAGUE006",31,0)
 ; =============
"RTN","MAGUE006",32,0)
 ; 
"RTN","MAGUE006",33,0)
 ; OUTPUT        Description
"RTN","MAGUE006",34,0)
 ;                 ^01: -97 if invalid DELIM;
"RTN","MAGUE006",35,0)
 ;                       else -98 if MAGDFN parameter missing;
"RTN","MAGUE006",36,0)
 ;                       else -99 if no ICN (e.g., IHS);
"RTN","MAGUE006",37,0)
 ;                       else -1 if ICN fetch raises exception;
"RTN","MAGUE006",38,0)
 ;                       else ICN value
"RTN","MAGUE006",39,0)
 ;                 ^02: "INVALID DELIMITER VALUE" if invalid DELIM;
"RTN","MAGUE006",40,0)
 ;                       else "MAGDFN PARAMETER MISSING" if MAGDFN parameter missing;
"RTN","MAGUE006",41,0)
 ;                       else "ICN NOT USED" if no ICN (e.g., IHS);
"RTN","MAGUE006",42,0)
 ;                       else error message if ICN fetch raises exception;
"RTN","MAGUE006",43,0)
 ;                       else empty
"RTN","MAGUE006",44,0)
 ;                      
"RTN","MAGUE006",45,0)
 ;                 Note:  on exception, ^02 -> ^01 if code suppressed     
"RTN","MAGUE006",46,0)
 ;                 
"RTN","MAGUE006",47,0)
GETICN(MAGDFN,DELIM,SUPPRESS) ;
"RTN","MAGUE006",48,0)
 N OUTPUT
"RTN","MAGUE006",49,0)
 D  ; is ICN used / defined?
"RTN","MAGUE006",50,0)
 . I $D(DELIM)#10,DELIM'?1ANP D  Q
"RTN","MAGUE006",51,0)
 . . S OUTPUT="-97^INVALID DELIMITER VALUE"
"RTN","MAGUE006",52,0)
 . . Q
"RTN","MAGUE006",53,0)
 . I $D(MAGDFN)#10=0 D  Q
"RTN","MAGUE006",54,0)
 . . S OUTPUT="-98^MAGDFN PARAMETER MISSING"
"RTN","MAGUE006",55,0)
 . . Q
"RTN","MAGUE006",56,0)
 . I $T(GETICN^MPIF001)="" D  Q
"RTN","MAGUE006",57,0)
 . . S OUTPUT="-99^ICN NOT USED"
"RTN","MAGUE006",58,0)
 . . Q
"RTN","MAGUE006",59,0)
 . S OUTPUT=$$GETICN^MPIF001(MAGDFN) ; Supported IA #2701
"RTN","MAGUE006",60,0)
 . S:OUTPUT="" OUTPUT="-1^ICN UNDEFINED"
"RTN","MAGUE006",61,0)
 . Q
"RTN","MAGUE006",62,0)
 I $D(DELIM)#10,DELIM?1ANP S OUTPUT=$TR(OUTPUT,"^",DELIM)
"RTN","MAGUE006",63,0)
 I $G(SUPPRESS),OUTPUT["^" S OUTPUT=$P(OUTPUT,"^",2)
"RTN","MAGUE006",64,0)
 Q $G(OUTPUT)
"RTN","MAGUE006",65,0)
 ;
"RTN","MAGUE006",66,0)
 ; MAGUE006
"RTN","MAGUE008")
0^19^B6168956
"RTN","MAGUE008",1,0)
MAGUE008 ;WOIFO/MLH - find an accession identifier for a LAB DATA entry ; 11 Apr 2013 1:05 PM
"RTN","MAGUE008",2,0)
 ;;3.0;IMAGING;**138**;Mar 19, 2002;Build 4;Jan 15, 2013
"RTN","MAGUE008",3,0)
 ;; Per VHA Directive 2004-038, this routine should not be modified.
"RTN","MAGUE008",4,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUE008",5,0)
 ;; | Property of the US Government.                                |
"RTN","MAGUE008",6,0)
 ;; | No permission to copy or redistribute this software is given. |
"RTN","MAGUE008",7,0)
 ;; | Use of unreleased versions of this software requires the user |
"RTN","MAGUE008",8,0)
 ;; | to execute a written test agreement with the VistA Imaging    |
"RTN","MAGUE008",9,0)
 ;; | Development Office of the Department of Veterans Affairs,     |
"RTN","MAGUE008",10,0)
 ;; | telephone (301) 734-0100.                                     |
"RTN","MAGUE008",11,0)
 ;; | The Food and Drug Administration classifies this software as  |
"RTN","MAGUE008",12,0)
 ;; | a medical device.  As such, it may not be changed in any way. |
"RTN","MAGUE008",13,0)
 ;; | Modifications to this software may result in an adulterated   |
"RTN","MAGUE008",14,0)
 ;; | medical device under 21CFR820, the use of which is considered |
"RTN","MAGUE008",15,0)
 ;; | to be a violation of US Federal Statutes.                     |
"RTN","MAGUE008",16,0)
 ;; +---------------------------------------------------------------+
"RTN","MAGUE008",17,0)
 ;;
"RTN","MAGUE008",18,0)
 Q  ;
"RTN","MAGUE008",19,0)
 ;
"RTN","MAGUE008",20,0)
 ; This routine eliminates dependency on the accession number having been
"RTN","MAGUE008",21,0)
 ; stored on the LAB DATA file (#63).  If necessary, it crawls the ACCESSION
"RTN","MAGUE008",22,0)
 ; file (#68) in reverse chronological order.
"RTN","MAGUE008",23,0)
 ; 
"RTN","MAGUE008",24,0)
 ;***** FIND AN ACCESSION IDENTIFIER GIVEN LAB DATA SUBSCRIPT INFORMATION
"RTN","MAGUE008",25,0)
 ;
"RTN","MAGUE008",26,0)
 ; LRSS          AP Section
"RTN","MAGUE008",27,0)
 ; 
"RTN","MAGUE008",28,0)
 ; LRDFN         Internal entry number of patient record in LAB DATA file (#63)
"RTN","MAGUE008",29,0)
 ;
"RTN","MAGUE008",30,0)
 ; LRI           Inverse-date subscript of order record in LAB DATA file (#63)
"RTN","MAGUE008",31,0)
 ;
"RTN","MAGUE008",32,0)
 ; Return Values
"RTN","MAGUE008",33,0)
 ; =============
"RTN","MAGUE008",34,0)
 ;
"RTN","MAGUE008",35,0)
 ; .ACCID  Accession identifier if one exists for this order
"RTN","MAGUE008",36,0)
 ; 
"RTN","MAGUE008",37,0)
FIND(ACCID,LRSS,LRDFN,LRI)  ;
"RTN","MAGUE008",38,0)
 N LRSSIX,YR,ACCIX
"RTN","MAGUE008",39,0)
 Q:$G(LRSS)=""  Q:$G(LRDFN)=""  Q:$G(LRI)=""
"RTN","MAGUE008",40,0)
 ; is accession recorded on LAB DATA file (#63)?
"RTN","MAGUE008",41,0)
 S ACCID=$P($G(^LR(LRDFN,LRSS,LRI,0)),"^",6)
"RTN","MAGUE008",42,0)
 D:ACCID=""  ; no, must crawl the ACCESSION file (#68)
"RTN","MAGUE008",43,0)
 . S LRSSIX="" F  S LRSSIX=$O(^LRO(68,"B",LRSS,LRSSIX)) Q:LRSSIX=""  Q:$G(^LRO(68,"B",LRSS,LRSSIX))
"RTN","MAGUE008",44,0)
 . D:$G(LRSSIX)'=""
"RTN","MAGUE008",45,0)
 . . S YR=" " F  S YR=$O(^LRO(68,LRSSIX,1,YR),-1) Q:'YR  D  Q:ACCID'=""
"RTN","MAGUE008",46,0)
 . . . S ACCIX=" " F  S ACCIX=$O(^LRO(68,LRSSIX,1,YR,1,ACCIX),-1) Q:'ACCIX  D  Q:ACCID'=""
"RTN","MAGUE008",47,0)
 . . . . I $P($G(^LRO(68,LRSSIX,1,YR,1,ACCIX,0)),"^",1)=LRDFN,$P($G(^(3)),"^",5)=LRI S ACCID=$P($G(^(.2)),"^",1)
"RTN","MAGUE008",48,0)
 . . . . Q
"RTN","MAGUE008",49,0)
 . . . Q
"RTN","MAGUE008",50,0)
 . . Q
"RTN","MAGUE008",51,0)
 . Q
"RTN","MAGUE008",52,0)
 Q
"UP",2005.42,2005.422,-1)
2005.42^2
"UP",2005.42,2005.422,0)
2005.422
"VER")
8.0^22.0
"^DD",2005.42,2005.42,.031,0)
SLIDES^2005.422^^2;0
"^DD",2005.42,2005.42,.031,21,0)
^.001^2^2^3150528^^^^
"^DD",2005.42,2005.42,.031,21,1,0)
This Field contains one or more slides information for the CASE.
"^DD",2005.42,2005.42,.031,21,2,0)
Slide Number, Date/Time scanned, URL, Zoom factor, Scan Application.
"^DD",2005.42,2005.42,.031,23,0)
^.001^1^1^3150528^^^^
"^DD",2005.42,2005.42,.031,23,1,0)
In the future, there is more information will be added as request.
"^DD",2005.42,2005.422,0)
SLIDES SUB-FIELD^^8^8
"^DD",2005.42,2005.422,0,"DT")
3150528
"^DD",2005.42,2005.422,0,"IX","B",2005.422,.01)

"^DD",2005.42,2005.422,0,"NM","SLIDES")

"^DD",2005.42,2005.422,0,"UP")
2005.42
"^DD",2005.42,2005.422,.01,0)
SLIDE NUMBER^F^^0;1^K:$L(X)>32!($L(X)<1) X
"^DD",2005.42,2005.422,.01,1,0)
^.1
"^DD",2005.42,2005.422,.01,1,1,0)
2005.422^B
"^DD",2005.42,2005.422,.01,1,1,1)
S ^MAG(2005.42,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",2005.42,2005.422,.01,1,1,2)
K ^MAG(2005.42,DA(1),2,"B",$E(X,1,30),DA)
"^DD",2005.42,2005.422,.01,1,1,3)
Required Index for Variable Pointer
"^DD",2005.42,2005.422,.01,3)
Slide number can be 1-32 characters in length.
"^DD",2005.42,2005.422,.01,21,0)
^.001^1^1^3150528^^^^
"^DD",2005.42,2005.422,.01,21,1,0)
ACCESSION SLIDE NUMBER
"^DD",2005.42,2005.422,.01,"DT")
3150528
"^DD",2005.42,2005.422,.01,"V",0)
^.12P
"^DD",2005.42,2005.422,2,0)
DATE/TIME SCANNED^D^^0;3^S %DT="EST" D ^%DT S X=Y K:Y<1 X
"^DD",2005.42,2005.422,2,21,0)
^^1^1^3150514^
"^DD",2005.42,2005.422,2,21,1,0)
When the slide was scanned.
"^DD",2005.42,2005.422,2,"DT")
3150514
"^DD",2005.42,2005.422,3,0)
URL^F^^0;4^K:$L(X)>99!($L(X)<1) X
"^DD",2005.42,2005.422,3,3)
URL must be 1-99 characters in length.
"^DD",2005.42,2005.422,3,21,0)
^.001^1^1^3150514^^^
"^DD",2005.42,2005.422,3,21,1,0)
Digitize slide URL 
"^DD",2005.42,2005.422,3,"DT")
3150514
"^DD",2005.42,2005.422,4,0)
ZOOM FACTOR^F^^0;5^K:$L(X)>12!($L(X)<1) X
"^DD",2005.42,2005.422,4,3)
Answer must be 1-12 characters in length.
"^DD",2005.42,2005.422,4,21,0)
^.001^1^1^3150527^^^^
"^DD",2005.42,2005.422,4,21,1,0)
Zoom factor for the slide.
"^DD",2005.42,2005.422,4,"DT")
3150527
"^DD",2005.42,2005.422,5,0)
SCAN APPLICATION^F^^0;6^K:$L(X)>40!($L(X)<1) X
"^DD",2005.42,2005.422,5,3)
Answer must be 1-40 characters in length.
"^DD",2005.42,2005.422,5,21,0)
^^1^1^3150514^
"^DD",2005.42,2005.422,5,21,1,0)
Slide scan application, i.e.: APERIO
"^DD",2005.42,2005.422,5,"DT")
3150514
"^DD",2005.42,2005.422,6,0)
SLIDE STATUS^S^A:ADDED;D:DELETED;^0;7^Q
"^DD",2005.42,2005.422,6,21,0)
^.001^1^1^3150528^^
"^DD",2005.42,2005.422,6,21,1,0)
The status of slide can be added or deleted.
"^DD",2005.42,2005.422,6,"DT")
3150528
"^DD",2005.42,2005.422,7,0)
VIEWING APPLICATION^S^IS:IMAGESCOPE;^0;8^Q
"^DD",2005.42,2005.422,7,21,0)
^^1^1^3150527^
"^DD",2005.42,2005.422,7,21,1,0)
Enter the application to view the slide image.
"^DD",2005.42,2005.422,7,"DT")
3150527
"^DD",2005.42,2005.422,8,0)
DESCRIPTION^F^^1;1^K:$L(X)>80!($L(X)<1) X
"^DD",2005.42,2005.422,8,3)
Note can be 1-80 characters in length.
"^DD",2005.42,2005.422,8,21,0)
^.001^1^1^3150528^^
"^DD",2005.42,2005.422,8,21,1,0)
Enter the special note for the slide.
"^DD",2005.42,2005.422,8,"DT")
3150528
**END**
**END**
