<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <parent>
    <groupId>Imaging</groupId>
    <artifactId>ImagingRoot</artifactId>
    <version>${BUILD_VERSION}</version>
    <relativePath>../ImagingRoot/pom.xml</relativePath>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>PathologyFederationDataSourceProvider</artifactId>
  <name>PathologyFederationDataSourceProvider</name>
  <packaging>jar</packaging>
  <build>
    <finalName>${artifactId}-${version}</finalName>
    <directory>${basedir}/target</directory>
    <outputDirectory>${basedir}/target/classes</outputDirectory>
    <testOutputDirectory>${basedir}/target/test-classes</testOutputDirectory>
    <sourceDirectory>main/src/java</sourceDirectory>
    <testSourceDirectory>main/test/java</testSourceDirectory>
    <resources>
      <resource>
        <directory>main/src/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>main/test/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>clean</phase>
            <configuration>
              <tasks>
              	<delete>
		    		<fileset dir="${basedir}/main/generated/java" includes="**/*.java"/>
			  	</delete>              
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>UserPlugins</groupId>
        <artifactId>maven-goal-plugin</artifactId>
        <version>0.1</version>
        <configuration>
          <workingDirectory>${basedir}</workingDirectory>
          <userGoalList>
            <userGoalInfo>
              <goalName>CruiseControl-build</goalName>
              <commands>
                <command>
                  <![CDATA[<cvs command="up -d -P" />]]>
                </command>
                <command>
                  <![CDATA[<attainGoal name="clean:clean" />]]>
                </command>
                <command>
                  <![CDATA[<attainGoal name="jar:install" />]]>
                </command>
              </commands>
            </userGoalInfo>
            <userGoalInfo>
              <goalName>Imaging-dist</goalName>
              <commands>
                <command>
                  <![CDATA[<attainGoal name="clean:clean" />]]>
                </command>
                <command>
                  <![CDATA[<attainGoal name="jar:install" />]]>
                </command>
              </commands>
            </userGoalInfo>
            <userGoalInfo>
              <goalName>default</goalName>
              <commands>
                <command>
                  <![CDATA[<attainGoal name="clean:clean" />]]>
                </command>
                <command>
                  <![CDATA[<attainGoal name="jar:install" />]]>
                </command>
              </commands>
            </userGoalInfo>
            <userGoalInfo>
              <goalName>misc</goalName>
              <commands>
                <!-- mvn goal:misc Your Miscellaneous Command(s) Here -->
                <!--
                <command>
                  <![CDATA[<copy file="${basedir}/myFile"  todir="${user.home}/myDir" />]]>
                </command>
                -->
                <!--
                <command>
                  <![CDATA[<attainGoal name="-v:-v" />]]>
                </command>
                -->
                <command>
                  <![CDATA[<attainGoal name="clean:install" />]]>
                </command>
                <command>
                  <![CDATA[<copy file="${build.directory}/${build.finalName}.${packaging}" todir="C:\Program Files\Apache Software Foundation\Tomcat 6.0\lib" />]]>
                  <![CDATA[<copy file="${build.directory}/${build.finalName}.${packaging}" todir="C:\Temp\Tomcat-B\apache-tomcat-6.0.18\lib" />]]>
                </command>
              </commands>
            </userGoalInfo>
          </userGoalList>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <optimize>false</optimize>
          <compilerArguments>
            <source>${JAVA_VERSION}</source>
            <target>${JAVA_VERSION}</target>
            <g />
            <deprecation />            
            <s>${basedir}/main/generated/java</s>            
          </compilerArguments>
        </configuration>
        
        <!-- 
        	JMW 7/16/2012
        	For some reason the Java compiler was not detecting the annotation processor before attempting to compile the code so it 
        	would throw an error not finding the generated class. The change below forces everything that does not reference the generated
        	code to be compiled first (including the class that contains the annotation) so the generated code is created and then
        	this compiles the rest of the project which can now find the generated code and work properly.
        
        	This is very stupid and frustrating! It might be a bug in the version of the compiler we are using
         -->
        <executions>
	        <execution>
	           <id>default-compile</id>
	           <goals><goal>compile</goal></goals>
	           <configuration>
	              <includes>
	                  <include>**/*</include>
	              </includes>
	              <excludes>
	                  <exclude>**/FederationPathologyDataSourceServiceV6.*</exclude>
	                  <exclude>**/FederationPathologyDataSourceProvider.*</exclude>	                  
	              </excludes>
	           </configuration>
	        </execution>
	        <execution>
	           <id>second</id>
	           <goals><goal>compile</goal></goals>
	           <configuration>
	              <includes>
	                  <include>**/FederationPathologyDataSourceServiceV6.*</include>
	                  <include>**/FederationPathologyDataSourceProvider.*</include>
	              </includes>	              
	           </configuration>
	        </execution>
	    </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <forkMode>once</forkMode>
          <includes>          	 
            <include>**/*Test*.java</include>                        
          </includes>
          <excludes>
          </excludes>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <dependencies>
	<!-- all non project dependencies should be defined in the ImagingRoot project -->
    <dependency>
      <groupId>${groupId}</groupId>
      <artifactId>ImagingCommon</artifactId>
      <version>${version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>${groupId}</groupId>
      <artifactId>TransactionContext</artifactId>
      <version>${version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>${groupId}</groupId>
      <artifactId>CoreValueObjects</artifactId>
      <version>${version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>${groupId}</groupId>
      <artifactId>PathologyCommon</artifactId>
      <version>${version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>${groupId}</groupId>
      <artifactId>DataSourceServiceProvider</artifactId>
      <version>${version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>${groupId}</groupId>
      <artifactId>ImagingExchangeBaseWebProxy</artifactId>
      <version>${version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>${groupId}</groupId>
      <artifactId>PathologyFederationCommon</artifactId>
      <version>${version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>${groupId}</groupId>
      <artifactId>PathologyCommon</artifactId>
      <version>${version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>${groupId}</groupId>
      <artifactId>FederationDataSourceProvider</artifactId>
      <version>${version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>${groupId}</groupId>
      <artifactId>FederationDataSourceProviderCodeGenerator</artifactId>
      <version>${version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>
  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-changes-plugin</artifactId>
        <configuration>
          <xmlPath>${basedir}/xdocs/changes.xml</xmlPath>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
  <properties>
    <maven.build.dir>${basedir}/target</maven.build.dir>
    <maven.final.name>${artifactId}-${version}</maven.final.name>
  </properties>
</project>
